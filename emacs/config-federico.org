#+title: Fede's config

* code overrides

#+begin_src emacs-lisp :tangle (print tlon-init-code-overrides-path)
((:ps/early-init-frame-maximize
  . ((ignore)))
 (:ps/org-id-add-ids-to-headings-in-file
  . ((ignore)))
 (:ps/zotra-startup
  . ((ignore)))
 (:ps/faces
  . ((set-face-attribute 'default nil :family ps/face-fixed-pitch :height 150)
     (set-face-attribute 'fixed-pitch nil :family ps/face-fixed-pitch :height 1.0)
     (set-face-attribute 'org-drawer nil :foreground "LightSkyBlue" :family ps/face-fixed-pitch :height 0.8)
     (set-face-attribute 'org-property-value nil :family ps/face-fixed-pitch :height 0.9)
     (set-face-attribute 'org-todo nil :family ps/face-fixed-pitch :height 1.0)
     (set-face-attribute 'org-archived nil :family ps/face-fixed-pitch :height 1.0)
     (set-face-attribute 'org-document-title nil :family ps/face-fixed-pitch :underline t :height 1.0)
     (set-face-attribute 'org-special-keyword nil :family ps/face-fixed-pitch :height 0.9)
     (set-face-attribute 'org-tag nil :family ps/face-fixed-pitch :height 0.8)
     (set-face-attribute 'org-code nil :family ps/face-fixed-pitch :height 1.0)
     (set-face-attribute 'org-level-1 nil :family ps/face-fixed-pitch :height 1.0)
     (set-face-attribute 'org-level-2 nil :family ps/face-fixed-pitch :height 1.0)
     (set-face-attribute 'org-level-3 nil :family ps/face-fixed-pitch :height 1.0)
     (set-face-attribute 'org-level-4 nil :family ps/face-fixed-pitch :height 1.0)
     (set-face-attribute 'org-level-5 nil :family ps/face-fixed-pitch :height 1.0)
     (set-face-attribute 'org-level-6 nil :family ps/face-fixed-pitch :height 1.0)
     (set-face-attribute 'org-level-7 nil :family ps/face-fixed-pitch :height 1.0)
     (set-face-attribute 'org-level-8 nil :family ps/face-fixed-pitch :height 1.0)
     (set-face-attribute 'org-date nil :family ps/face-fixed-pitch :height 0.8)
     (set-face-attribute 'org-modern-date-active nil :family ps/face-fixed-pitch :height 0.9)
     (set-face-attribute 'org-modern-date-inactive nil :family ps/face-fixed-pitch :height 0.9)
     (set-face-attribute 'org-modern-tag nil :family ps/face-fixed-pitch :height 0.9)
     (set-face-attribute 'corfu-default nil :family ps/face-fixed-pitch :height 1.0)
     (set-face-attribute 'org-quote nil :family ps/face-fixed-pitch :height 1.0)
     (message "Loaded fede's override for faces")))
 (:ps/doom-modeline
  . ((setq doom-modeline-time nil)
     (setq doom-modeline-mu4e nil)
     (setq doom-modeline-buffer-encoding t)
     (setq doom-modeline-irc nil)
     (setq doom-modeline-irc-buffers nil)
     ;; (doom-modeline--flycheck-icon t)
     (setq doom-modeline-github t)
     (setq doom-modeline-github-interval (* 10 60))
     (setq doom-modeline-buffer-file-name-style 'truncate-nil)
     (remove-hook 'display-time-mode-hook 'doom-modeline-override-display-time-modeline)
     (remove-hook 'display-battery-mode-hook 'doom-modeline-override-battery-modeline)
     (remove-hook 'doom-modeline-mode-hook 'doom-modeline-override-display-time-modeline)
     (remove-hook 'doom-modeline-mode-hook 'doom-modeline-override-battery-modeline)
     (message "Loaded fede's override for doom-modeline")
     (add-hook 'doom-modeline-before-github-fetch-notification-hook #'auth-source-pass-enable)))
 (:ps/window-border
  . ((ignore)))
 (:ps/window-split
  . ((ignore)))
 (:ps/modus-themes-load
  . ((modus-themes-load-theme 'modus-vivendi)))
 (:ps/frame-maximize
  . ((ignore)))
 (:ps/org-fold
  . ((ignore))))
#+end_src

* post init

#+begin_src emacs-lisp :tangle (print tlon-init-post-init-path)
(setq inhibit-startup-screen t)
(add-to-list 'initial-frame-alist '(fullscreen . maximized))
(message "Loading fede's custom faces:")
(ps/faces-load-custom-faces)
(recentf-mode)
(when (eq system-type 'darwin) ;; mac specific settings
  (setq mac-right-option-modifier 'alt)
  (setq mac-command-modifier 'hyper)
  (setq mac-option-modifier 'meta)
  (setq mac-right-command-modifier 'super)
  (tool-bar-mode -1)

  (delete-selection-mode 1)
  (cua-selection-mode 1)
  ;; disable C-return or it will interfere with org
  (define-key cua-global-keymap (kbd "<C-return>") nil)
  (setq shift-select-mode t))

;; sets fn-delete to be right-delete:
;; (global-set-key [kp-delete] 'delete-char)

(general-define-key
 "<kp-delete>" 'delete-char
 "<home>" 'beginning-of-line
 "<end>" 'end-of-line
 "H-q" 'delete-window
 "H-w" 'ps/kill-this-buffer
 "H-k" 'hydra-org-work/body
 "H-o" 'find-file
 "H-/" 'comment-line
 "H-\\" 'ps/window-split-if-unsplit
 "H-;" 'hydra-org-work/body
 "H-g" nil
 "H-h" 'other-window
 "H-H" 'ps/window-buffer-move-dwim
 "A-s-j" 'org-clock-goto
 "A-s-x" 'org-clock-cancel
 "<M-right>" 'forward-word
 "<M-left>" 'backward-word
 "<M-H-SPC>" 'execute-extended-command
 "H-:" 'eval-expression
 "<M-DEL>" 'backward-kill-word
 "<C-delete>" nil
 "<C-left>" nil
 "<C-S-left>" nil
 "<C-right>" nil
 "<C-S-right>" nil
 "<C-up>" nil
 "<C-S-up>" nil
 "<C-down>" nil
 "<C-S-down>" nil)

(general-define-key
 :keymaps 'org-mode-map
 "M-<right>" nil
 "M-<left>" nil
 "M-<up>" nil
 "M-<down>" nil
 "M-S-<right>" nil
 "M-S-<left>" nil
 "M-S-<up>" nil
 "M-S-<down>" nil
 "H-<right>" 'org-metaright
 "H-<left>" 'org-metaleft
 "H-<up>" 'org-metaup
 "H-<down>" 'org-metadown
 "M-<right>" 'forward-word
 "M-<left>" 'backward-word)


(defhydra hydra-org-work
  (:hint nil
	 :idle 0
	 :color blue)
  "Tlön dashboard"
  ("b" (org-id-goto "33BFC41C-324A-47E1-A313-8233A36B2346") "BAE")
  ("r" (org-id-goto "87906C3B-B52B-4816-BCCA-BE3EA4B88968") "RAE")
  ("f" (org-id-goto "809F6C1D-DDF7-4C6B-BB84-FFC082BE8601") "FM")
  ("d" (org-id-goto "0079A5CD-A07B-4919-A76C-4F6E6841512D") "LBDLHD")
  ("u" (org-id-goto "B168E4F1-D2E1-4D59-B88C-4CF924E82624") "EAN")
  ("i" (org-id-goto "715D2C4E-4BEE-4EC4-B432-720DA35C21A9") "EAI")
  ("h" (org-id-goto "B157C986-D75D-4244-A522-43DCBA2F0C8E") "HEAR")
  ("g" (org-id-goto "97F7D54F-4F4A-45A4-9616-A0B548A049BE") "GPE")
  ("c" (org-id-goto "7EDB8441-7EFA-43CC-B3DE-5682D55BCEE1") "Core")
  )
(setq org-capture-templates
      `(("b" "Tlön: BAE" entry
	 (id "33BFC41C-324A-47E1-A313-8233A36B2346")
	 "** TODO %?\n" :prepend t)
	("r" "Tlön: RAE" entry
	 (id "87906C3B-B52B-4816-BCCA-BE3EA4B88968")
	 "** TODO %?\n" :prepend t)
	("f" "Tlön: FM" entry
	 (id "809F6C1D-DDF7-4C6B-BB84-FFC082BE8601")
	 "** TODO %?\n" :prepend t)
	("d" "Tlön: LBDLH" entry
	 (id "0079A5CD-A07B-4919-A76C-4F6E6841512D")
	 "** TODO %?\n" :prepend t)
	("u" "Tlön: EAN" entry
	 (id "B168E4F1-D2E1-4D59-B88C-4CF924E82624")
	 "** TODO %?\n" :prepend t)
	("i" "Tlön: EAI" entry
	 (id "715D2C4E-4BEE-4EC4-B432-720DA35C21A9")
	 "** TODO %?\n" :prepend t)
	("h" "Tlön: HEAR" entry
	 (id "B157C986-D75D-4244-A522-43DCBA2F0C8E")
	 "** TODO %?\n" :prepend t)
	("g" "Tlön: GPE" entry
	 (id "97F7D54F-4F4A-45A4-9616-A0B548A049BE")
	 "** TODO %?\n" :prepend t)
	("c" "Tlön: Core" entry
	 (id "7EDB8441-7EFA-43CC-B3DE-5682D55BCEE1")
	 "** TODO %?\n" :prepend t)
	))


(defvar ps/file-cookies (file-name-concat ps/dir-downloads "cookies.txt"))
(defun ps/internet-archive-download-ACSM ()
  "Download and open ACSM file from Internet Archive URL in kill
ring.

NB: You need to have previously borrowed the book for the command
to work. The command will work even if the book was borrowed for
one hour only."
  (interactive)
  (if (string-search "archive.org" (current-kill 0))
      (progn
	(let* ((prefix "https://archive.org/services/loans/loan/?action=media_url&identifier=")
	       (suffix "&format=pdf&redirect=1")
	       (id (replace-regexp-in-string
		    "\\(http.*?details/\\)\\([_[:alnum:]]*\\)\\(.*\\)"
		    "\\2"
		    (current-kill 0)))
	       (url (concat prefix id suffix))
	       (acsm-file (file-name-concat ps/dir-downloads "book.acsm")))
	  ;; Download the Internet Archive cookies to a file so `wget' can authenticate:
	  ;; askubuntu.com/questions/161778/how-do-i-use-wget-curl-to-download-from-a-site-i-am-logged-into
	  ;; Then replace the path below with the location of the downloaded cookies file.
	  (save-window-excursion
	    (let ((shell-command-buffer-name-async "*internet-archive-download-ACSM*"))
	      (async-shell-command
	       (format
		"wget --load-cookies='%s' '%s' -O '%s'"
		ps/file-cookies url acsm-file))
	      ;; (sleep-for 2)
	      ;; (async-shell-command
	      ;; (format
	      ;; "open %s"
	      ;; "/users/cartago/downloads/book.acsm"))
	      ))
	  (dired ps/dir-downloads)
	  ))
    (user-error "You forgot to copy the URL!")))

(setq-default org-support-shift-select 'always
	      org-replace-disputed-keys t)

(setq org-agenda-custom-commands
      '(("j" "Agenda + TODOs"
	 (
	  (tags-todo "+fede"
		     (;; (tags "fede")
		      (org-agenda-sorting-strategy '(priority-down todo-state-down))
		      (org-agenda-overriding-header "Mensajes para Fede")))
	  (tags-todo "+pablo"
		     (;; (tags "fede")
		      (org-agenda-sorting-strategy '(priority-down todo-state-down))
		      (org-agenda-overriding-header "Mensajes para Pablo")))
	  (tags-todo "TODO=\"TODO\"+FILE=\"/Users/fede/Library/CloudStorage/Dropbox/tlon/fede/tareas.org\""
		     ((org-agenda-max-entries 10)
		      (org-agenda-sorting-strategy '(priority-down todo-state-down))
		      (org-agenda-overriding-header "TODO - Trabajo")))
	  (tags-todo "TODO=\"TODO\"+FILE=\"/Users/fede/Library/CloudStorage/Dropbox/org/todo.org\""
		     ((org-agenda-max-entries 10)
		      (org-agenda-sorting-strategy '(priority-down todo-state-down))
		      (org-agenda-overriding-header "TODO - Personal")))
	  (tags-todo "+SCHEDULED<=\"<today>\""
		     ((org-agenda-sorting-strategy '(priority-down todo-state-down))
		      (org-agenda-overriding-header "Scheduled for today")))
	  (tags-todo "+DEADLINE<=\"<today>\" +DEADLINE>=\"<today -2m>\""
		     ((org-agenda-sorting-strategy '(priority-down todo-state-down))
		      (org-agenda-overriding-header "Upcoming deadlines")))
	  (agenda "" ((org-agenda-span 14)))
	  (todo "WAITING"
		((org-agenda-overriding-header "WAITING")))
	  (tags-todo "TODO=\"TODO\"+FILE=\"/Users/fede/Dropbox/tlon/fede/tareas.org\""
		     ((org-agenda-sorting-strategy '(priority-down todo-state-down))
		      (org-agenda-overriding-header "TODO - Trabajo - Todos")))
	  (tags-todo "TODO=\"TODO\"+FILE=\"/Users/fede/Dropbox/org/todo.org\""
		     ((org-agenda-sorting-strategy '(priority-down todo-state-down))
		      (org-agenda-overriding-header "TODO - Personal - Todos")))
	  ))))


(setq telega-server-libs-prefix "/Users/fede/source/td/tdlib")
(setq mac-function-modifier '(:button 2))
(setq real-auto-save-interval 10)


(defhydra hydra-dired
  (:exit t)
  "Dired folders"
  ("t" (hydra-dired-tlon-dropbox/body) "Tlön Dropbox" :column "Folders")
  ("g" (hydra-dired-tlon-google-drive/body) "Tlön Google Drive" :column "Folders")
  ("w" (dired (file-name-concat ps/dir-user "www")) "Nginx www root" :column "Folders")
  ("o" (dired ps/dir-google-drive) "Google Drive" :column "User")
  ("w" (dired ps/dir-downloads) "Downloads" :column "User")
  ("x" (dired ps/dir-dropbox) "Dropbox" :column "User")
  ("s" (dired (file-name-concat ps/dir-user "source")) "Source" :column "Folders")
  ("." (dired-at-point) "File at point" :column "Other")
  ("/" (dired "/") "Root" :column "Other")
  ("SPC" (dired "~/") "user" :column "User" )
  (";" (dired-jump) "Current buffer" :column "Other")
  ("H-;" (dired-jump-other-window) "Current buffer in other window" :column "Other")
  ("e" (dired ps/dir-emacs) "Emacs" :column "Config")
  ("p" (dired (file-name-concat ps/dir-user ".config/emacs-profiles")) "Emacs profiles" :column "Config")
  ("b" (dired (file-name-concat ps/dir-user "source/dotfiles/emacs")) "Pablo's Emacs config" :column "Config"))


(defhydra hydra-dired-tlon-dropbox
  (:exit t)
  "Dired folders: Tlön Dropbox"
  (";" (dired ps/dir-dropbox-tlon) "This folder")
  ("b" (dired ps/dir-dropbox-tlon-BAE) "BAE")
  ("c" (dired ps/dir-dropbox-tlon-core) "core")
  ("d" (dired ps/dir-dropbox-tlon-LBDLH) "LBDLH")
  ("f" (dired ps/dir-dropbox-tlon-fede) "fede")
  ("g" (dired ps/dir-dropbox-tlon-GPE) "GPE")
  ("h" (dired ps/dir-dropbox-tlon-HEAR) "HEAR")
  ("l" (dired ps/dir-dropbox-tlon-leo) "leo")
  ("p" (dired ps/dir-dropbox-tlon-LP) "LP")
  ("r" (dired ps/dir-dropbox-tlon-RAE) "RAE")
  ("s" (dired ps/dir-dropbox-tlon-FM) "FM")
  ("u" (dired ps/dir-dropbox-tlon-EAN) "EAN"))

(defhydra hydra-dired-tlon-google-drive
  (:exit t)
  "Dired folders: Tlön Google Drive"
  (";" (dired ps/dir-google-drive-tlon) "This folder")
  ("b" (dired ps/dir-google-drive-tlon-BAE) "BAE")
  ("c" (dired ps/dir-google-drive-tlon-core) "core")
  ("d" (dired ps/dir-google-drive-tlon-LBDLH) "LBDLH")
  ("f" (dired ps/dir-google-drive-tlon-fede) "fede")
  ("g" (dired ps/dir-google-drive-tlon-GPE) "GPE")
  ("h" (dired ps/dir-google-drive-tlon-HEAR) "HEAR")
  ("l" (dired ps/dir-google-drive-tlon-leo) "leo")
  ("p" (dired ps/dir-google-drive-tlon-LP) "LP")
  ("r" (dired ps/dir-google-drive-tlon-RAE) "RAE")
  ("s" (dired ps/dir-google-drive-tlon-FM) "FM")
  ("u" (dired ps/dir-google-drive-tlon-EAN) "EAN"))

(setq org-structure-template-alist '(("a" . "export ascii")
                                     ("c" . "center")
                                     ("C" . "comment")
                                     ("e" . "example")
                                     ("E" . "export")
                                     ("h" . "export html")
                                     ("l" . "export latex")
                                     ("q" . "quote")
                                     ("s" . "src")
                                     ("se" . "src emacs-lisp")
                                     ("sj" . "src javascript")
                                     ("sp" . "src python")
                                     ("ss" . "src shell")
                                     ("sr" . "src ruby")
                                     ("v" . "verse")
                                     ("w" . "WP")))

(setq org-agenda-files '("/Users/fede/Library/CloudStorage/Dropbox/tlon/fede/tareas.org" "/Users/fede/Library/CloudStorage/Dropbox/org/todo.org"))
(setq org-agenda-files-excluded nil)
(scroll-bar-mode -1)
(use-feature org-fold
  :demand t
  :config
  (setq org-fold-catch-invisible-edits 'smart)
  (defun ps/org-fold-show-all-headings ())
  (defun ps/org-hide-properties ())
  (defun ps/org-hide-logbook ())
  (defun ps/org-show-properties ())
  (defun ps/org-show-logbook ())
  (defun ps/org-toggle-properties ())
  (defun ps/org-toggle-logbook ()))
#+end_src

* tangle flags

#+begin_src emacs-lisp :tangle (print tlon-init-tangle-flags-path)
(
 (:ps/aide . nil)
 (:ps/anki-editor . nil)
 (:ps/auto-commit-mode . nil)
 (:ps/bbdb . nil)
 (:ps/copilot . nil)
 (:ps/corfu-doc-terminal . nil)
 (:ps/corfu-terminal . nil)
 (:ps/erc . nil)
 (:ps/espotify . nil)
 (:ps/frame . nil)
 (:ps/forge . t)
 (:ps/git-auto-commit-mode . nil)
 (:ps/hammy . nil)
 (:ps/keytar . nil)
 (:ps/midnight . nil)
 (:ps/mixed-pitch . nil)
 (:ps/mu4e . nil)
 (:ps/ns-win . nil)
 (:ps/org-gcal . nil)
 (:ps/org-roam . nil)
 (:ps/org2blog . nil)
 (:ps/orgmdb . nil)
 (:ps/outline . nil)
 (:ps/pdf-tools . t)
 (:ps/puni . nil)
 (:ps/remember . nil)
 (:ps/server . nil)
 (:ps/slack . nil)
 (:ps/spelling . nil)
 (:ps/tlon . nil)
 (:ps/tlon-init . t)
 (:ps/theme-loaddefs . nil)
 (:ps/twittering-mode . nil)
 (:ps/vulpea . nil)
 (:ps/window . nil)
 )
#+end_src

* variables override                                                  :crypt:
-----BEGIN PGP MESSAGE-----

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
NPHqE9wNhqVzAttEPyzHJg==
=Sa3w
-----END PGP MESSAGE-----
* local variables
# Local Variables:
# eval: (ps/buffer-local-set-key (kbd "s-y") 'org-decrypt-entry)
# org-crypt-key: "tlon.shared@gmail.com"
# End:
