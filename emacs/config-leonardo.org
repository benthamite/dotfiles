#+title: Leo's config

* code overrides
:PROPERTIES:
:ID:       1DDFC928-66D5-4E09-B85C-7844082044D7
:END:

#+begin_src emacs-lisp :tangle (print tlon-init-code-overrides-path)
(
 (:ps/org-id-add-ids-to-headings-in-file . ((ignore)))
 )
#+end_src

* post init
:PROPERTIES:
:ID:       86F0B93D-E2A3-4064-977D-1002602B58F3
:END:

#+begin_src emacs-lisp :tangle (print tlon-init-post-init-path)
(when (eq system-type 'darwin) ;; mac specific settings
  (setq mac-right-option-modifier 'meta)
  (setq mac-command-modifier 'hyper)
  (setq mac-option-modifier 'alt)
  (setq mac-right-command-modifier 'super))
(tool-bar-mode -1)
(global-set-key [kp-delete] 'delete-char)   ;; sets fn-delete to be right-delete
(global-set-key (kbd "<home>") 'beginning-of-line)
(global-set-key (kbd "<end>") 'end-of-line)
(global-set-key (kbd "<S-right>") 'other-window)
(global-set-key (kbd "<S-left>") 'other-window)
(global-set-key (kbd "<A-right>") 'end-of-buffer)
(global-set-key (kbd "<A-left>") 'beginning-of-buffer)
(with-eval-after-load "org"
  (define-key org-mode-map (kbd "<M-right>") nil)
  (define-key org-mode-map (kbd "<M-left>") nil)
  (define-key org-mode-map (kbd "<M-up>") nil)
  (define-key org-mode-map (kbd "<M-down>") nil)
  (define-key org-mode-map (kbd "<M-S-right>") nil)
  (define-key org-mode-map (kbd "<M-S-left>") nil)
  (define-key org-mode-map (kbd "<M-S-up>") nil)
  (define-key org-mode-map (kbd "<M-S-down>") nil)
  (global-set-key (kbd "<H-right>") 'org-metaright)
  (global-set-key (kbd "<H-left>") 'org-metaleft)
  (global-set-key (kbd "<H-up>") 'org-metaup)
  (global-set-key (kbd "<H-down>") 'org-metadown)
  (global-set-key (kbd "<M-right>") 'forward-word)
  (global-set-key (kbd "<M-left>") 'backward-word)
  )
(with-eval-after-load "markdown-mode"
  (define-key markdown-mode-map (kbd "s-u") 'tlon-bae-insert-eawiki-url))
(defvar ps/file-cookies (file-name-concat ps/dir-downloads "cookies.txt"))
(defun ps/internet-archive-download-ACSM ()
  "Download and open ACSM file from Internet Archive URL in kill
ring.

NB: You need to have previously borrowed the book for the command
to work. The command will work even if the book was borrowed for
one hour only."
  (interactive)
  (if (string-search "archive.org" (current-kill 0))
      (progn
        (let* ((prefix "https://archive.org/services/loans/loan/?action=media_url&identifier=")
               (suffix "&format=pdf&redirect=1")
               (id (replace-regexp-in-string
                    "\\(http.*?details/\\)\\([_[:alnum:]]*\\)\\(.*\\)"
                    "\\2"
                    (current-kill 0)))
               (url (concat prefix id suffix))
               (acsm-file (file-name-concat ps/dir-downloads "book.acsm")))
          ;; Download the Internet Archive cookies to a file so `wget' can authenticate:
          ;; askubuntu.com/questions/161778/how-do-i-use-wget-curl-to-download-from-a-site-i-am-logged-into
          ;; Then replace the path below with the location of the downloaded cookies file.
          (save-window-excursion
            (let ((shell-command-buffer-name-async "*internet-archive-download-ACSM*"))
              (async-shell-command
               (format
                "wget --load-cookies='%s' '%s' -O '%s'"
                ps/file-cookies url acsm-file))
              ;; (sleep-for 2)
              ;; (async-shell-command
              ;; (format
              ;; "open %s"
              ;; "/users/cartago/downloads/book.acsm"))
              ))
          (dired ps/dir-downloads)
          ))
    (user-error "You forgot to copy the URL!")))

(setq telega-server-libs-prefix "/Users/cartago/source/td/tdlib")
(setq mac-function-modifier '(:button 2))

;; If Emacs doesn't find an ID, run `M-x org-id-update-id-locations'
(setq org-capture-templates
      `(("b" "Tlön: BAE" entry
         (id "49adbb3e-b542-4752-a67b-16bc2eb44624")
         "** TODO %?\n" :empty-lines 1 :prepend t)
        ("r" "Tlön: RAE" entry
         (id "604dbb4c-4948-492e-b1cd-84b0a1451b4a")
         "** TODO %?\n" :empty-lines 1 :prepend t)
        ("f" "Tlön: FM" entry
         (id "5d94a97f-701f-4d0d-94ad-ff1b88bf0e82")
         "** TODO %?\n" :empty-lines 1 :prepend t)
        ("d" "Tlön: LBDLH" entry
         (id "0d6d7ebb-bb51-4505-9a29-68b79f8c12de")
         "** TODO %?\n" :empty-lines 1 :prepend t)
        ("u" "Tlön: EAN" entry
         (id "8b9c313a-3630-4b77-b924-a8f7f9e52d8d")
         "** TODO %?\n" :empty-lines 1 :prepend t)
        ("h" "Tlön: HEAR" entry
         (id "f3f14f2f-2b74-4ea7-a84f-4d9aae458201")
         "** TODO %?\n" :empty-lines 1 :prepend t)
        ("g" "Tlön: GPE" entry
         (id "e9b7041f-8721-495f-b5f7-97ad83ae061c")
         "** TODO %?\n" :empty-lines 1 :prepend t)
        ("c" "Tlön: Core" entry
         (id "68f0150e-9b0d-4bab-86c0-2bf878e19d9e")
         "** TODO %?\n" :empty-lines 1 :prepend t)
        ("s" "To sort" entry
         (id "107D27EC-B193-444E-B65B-9B1AD2A7CC65")
         "** TODO %?\n" :empty-lines 1 :prepend t)
        ("m" "Tlön: Core: messaging" entry
         (id "9387B56D-2940-4FB0-91EF-92879D58659E")
         "** TODO %?\n" :empty-lines 1 :prepend t)
        ("e" "Tlön: Core: debugging Emacs" entry
         (id "8402F53C-F547-4705-B79E-24D6286D2C9E")
         "** TODO %?\n" :empty-lines 1 :prepend t)
        ("t" "Tlön: Core: Project t" entry
         (id "12645897-A06F-44DD-876D-0FFC47D0E742")
         "** TODO %?\n" :empty-lines 1 :prepend t)
	("tb" "tlon: bae")
	("tbP" "Tlön: BAE: Process topic (via org-capture)" entry
         (id "63513494-AB03-4B21-ABD6-8EB3073A7973")
         "** TODO [#5] %c" :immediate-finish t :empty-lines 1 :prepend t :jump-to-captured t)
        ("tbU" "Tlön: BAE: Publish topic (via org-capture)" entry
         (id "E02FC35D-DE88-4848-8EC2-AD82A2F32827")
         "** TODO [#5] %c" :immediate-finish t :empty-lines 1 :prepend t :jump-to-captured t)
        ("tbV" "Tlön: BAE: Review topic (via org-capture)" entry
         (id "51A1AD3A-5D03-48D1-A52F-AF43528FFA27")
         "** TODO [#5] %c" :immediate-finish t :empty-lines 1 :prepend t :jump-to-captured t)
        ("tbR" "Tlön: BAE: Revise topic (via org-capture)" entry
         (id "E3205CCE-70EB-4CD8-B276-6C391409FB40")
         "** TODO [#5] %c" :immediate-finish t :empty-lines 1 :prepend t :jump-to-captured t)
        ("tbW" "Tlön: BAE: Rewrite topic (via org-capture)" entry
         (id "7480E01B-31CF-477D-8E49-FC71F8AA11A1")
         "** TODO [#5] %c" :immediate-finish t :empty-lines 1 :prepend t :jump-to-captured t)
        ("tbT" "Tlön: BAE: Translate topic (via org-capture)" entry
         (id "0805A30F-2F57-483B-8B7B-4F1755B195B1")
         "** TODO [#5] %c" :immediate-finish t :empty-lines 1 :prepend t :jump-to-captured t)
        ("tbI" "Tlön: BAE: Import topic (via org-capture)" entry
         (id "18A94B9A-E256-4684-A36C-ED26FCE1AD08")
         "** TODO [#5] %c" :immediate-finish t :empty-lines 1 :prepend t :jump-to-captured t)
        ("tbM" "Tlön: BAE: Misc [via org-capture] Misc" entry
         (id "7CCD6226-DB0A-4742-9277-955FCB276137")
         "** TODO [#5] %a\n" :empty-lines 1 :prepend t  :immediate-finish t)
        ))

(defhydra hydra-org-work
  (:hint nil
         :idle 0
         :color blue)
  "Tlön dashboard"
  ("b" (org-id-goto "49adbb3e-b542-4752-a67b-16bc2eb44624") "BAE")
  ("r" (org-id-goto "604dbb4c-4948-492e-b1cd-84b0a1451b4a") "RAE")
  ("f" (org-id-goto "5d94a97f-701f-4d0d-94ad-ff1b88bf0e82") "FM")
  ("d" (org-id-goto "0d6d7ebb-bb51-4505-9a29-68b79f8c12de") "LBDLHD")
  ("u" (org-id-goto "8b9c313a-3630-4b77-b924-a8f7f9e52d8d") "EAN")
  ("h" (org-id-goto "f3f14f2f-2b74-4ea7-a84f-4d9aae458201") "HEAR")
  ("g" (org-id-goto "e9b7041f-8721-495f-b5f7-97ad83ae061c") "GPE")
  ("c" (org-id-goto "68f0150e-9b0d-4bab-86c0-2bf878e19d9e") "Core")
  ("s" (org-id-goto "107D27EC-B193-444E-B65B-9B1AD2A7CC65") "To sort")
  ("m" (org-id-goto "9387B56D-2940-4FB0-91EF-92879D58659E") "Messaging")
  ("e" (org-id-goto "8402F53C-F547-4705-B79E-24D6286D2C9E") "debugging Emacs")
  ("t" (org-id-goto "12645897-A06F-44DD-876D-0FFC47D0E742") "Project t")
  )


(global-set-key (kbd "H-;") 'hydra-org-work/body)
(put 'scroll-left 'disabled nil)


(setq telega-server-libs-prefix "/Users/cartago/source/td/tdlib")

(ps/modus-themes-load-theme-conditionally)

(setq ps/dir-tlon-biblioteca-altruismo-eficaz (file-name-concat ps/dir-user "source/biblioteca-altruismo-eficaz/"))

(setq warning-minimum-level :error)
#+end_src

* tangle flags
:PROPERTIES:
:ID:       A4E7C5AD-1E55-4C6F-B0E5-8320D282A886
:END:

#+begin_src emacs-lisp :tangle (print tlon-init-tangle-flags-path)
(
 (:ps/anki-editor . nil)
 (:ps/copilot . nil)
 (:ps/corfu-terminal . nil)
 (:ps/corfu-doc-terminal . nil)
 (:ps/erc . nil)
 (:ps/espotify . nil)
 (:ps/hammy . nil)
 (:ps/keytar . nil)
 (:ps/lsp-grammarly . t)
 (:ps/midnight . nil)
 (:ps/mu4e . nil)
 (:ps/org-gcal . nil)
 (:ps/org-roam . nil)
 (:ps/org2blog . nil)
 (:ps/orgmdb . nil)
 (:ps/remember . nil)
 (:ps/slack . nil)
 (:ps/twittering-mode . t)
 (:ps/vulpea . nil)
 )
#+end_src

* variables override                                                  :crypt:
:PROPERTIES:
:ID:       0B85812B-1620-4F40-A5BA-534626B6B112
:END:

-----BEGIN PGP MESSAGE-----

hQIMAxRs/nzf4knaAQ/+JGjzh5toM2oCDzlfjpqafVOiLeWAaEgma/I2X37wkM6u
0zkYY8SJPZR/mfTLFB+O2VaK/Gpto3FmIpx9UwG2rLJAG3u7D6gtIjlTePlxEXFV
F2wWoOIKIDyQNbZjGex+QV3DPnrz06KRfk3m+6BoxtvMFsxcc+lnKyn+b2DlVJZW
/YdlOK+6lFXTTvMywbki4NOHcuyruxXO1L/3nfEy5osOsJiwf/urq2/hNzu1CMPL
cOF7gc/T7ZDhS9hY4XSJ+MqSvQfVJsdBR/qcD1cU7GatWkuS4brMQPRbZwN0dV7+
M7drqpdej/fFNoB5A6op5usnDn0TmYUiTADFX4yOfgN9XaTbEayunsr0bj1gZ8wr
unVNQ+Fbzik+uhtBoScGbJ4JMgyi5BVJT73KWsu5KF7Ggnl3gSx+XKfGqZfekQ79
9hfjkycT4IjNJXelLlSaMahmSotWarF43RIvOsa3frTubMqIj5caX9nocMww9SVy
VN4LzyZoywrKdoAkOhIKB579qGHaVRQ3TFrd0aF1nUOIUYO7SHKVyBjv8oXEaRh4
staVOPW9zf3HBkQ4DmwXiB/i19WtCyhJHb3Yib3Ub+AvsagXgaarTLdpvKEQ5HAy
DXusN4UQf0Yp5EgZdrP6ucQBYteKUNfqDr/s6XHWvW0UPHOusAL6svI28xw/rzLS
6gH/7HVt+CJx3EmViKOYJX6yPjcsbKyvBSKHya7V3Iu2VkarMc4bF5CasvaOaN6i
tmmVbN0WoAmeEkQ089uS3ib2nRIkzEiPr6DsNl16n+HBzOjqi1ikWcaWBr0n1mT8
HHZBeMJZaEYhtsLCX9nCUhZNVFuWwTo0eFy4Lvq7R1KDwVEjjykldrDvbr8bBZFb
Ob8tWOWuiw1V7FW48/Ugs3GivF7S5BXuq5zoC/1UyvABYG8ZUCxyg27A+jBiNkQ3
UeIc7ovukG1Sn00RdInUEDbV6yYPRHbRzB+M3nS++htmsVxGTz3wcdjFKD3XDiTX
LzyXl1R2xiHT4o6NNPhAkjp3JCz73tEIzkZJhB2hGCwFbN5G712aaJauxmDoS1nN
gKTL6hzSyqAepBaJLNom3XTH61Ci8SKjRgRIt1reDle13B14X9PN60aYq2qTrCtV
oYlMN8ji49s9tgsGVYvB4BK1v0HqtE5//UduvgaVobDTaWefwFBsq6rbbZLOwBx8
w8wA6cMfga7veIx4ZBF9A0JjRNnrF8Okgqsd6wGLxpAE26HAqUi/na0yDf+CkfQb
HbFigxlM6mh0zJC+USF9L21u0WCwCIl1fMw8OJ/LU0MvVPb+c8iO5/nU+B5K89IV
fybYrFNPo62Zz2YDYyPq6Tu1xX+vqT5+RycXAphTRz3dv290wFZDukbA2s2FniHo
uROYP7Md8/Nhg9psvC6FMoEFf7iokCucLcsWIclRhmlYe4iJiw47JFpBaIQb1xKf
sqLhJu2t/nDMUnVBJtyt1eAzBNkSd5zo7/qye85XqFx/XCbjdwZmiIAbgBS4Xe4E
lyzRsomRPfHBqpu5/gJIdlixTiYW1gJ9RBwsISkinj6lwumtaUeK00YS942gc679
TIP5v5rhhR4VGYOJWMa+uVznPmcKBqTdIJa02LgQ4VW1WlIC4YtGLOq8exB4+9ez
H+k9fdbE8SQcfsOuqPXHiaTuw/WQkoddxIfKgbmmmiRNkiy1kEX2Hx7HobcA+ZK1
W/rRZwCFr7fQc1aBIhWWXBfWzMvL95C11kkIEVQSGMh+8c36lhx7WUjWZJLRcc+g
EhX42oERz0+CoG69sQ5jmnsEgm2A8O8u5gNip1TO1L1ESHHXkgf0S9vGrXv37h9q
loo9sJuTsT2BVQGKEDLkrpwEPDAgXmKkXs6itDH8SLj02QhazDOOgpAHkMHddswz
1wPnp3QAKud2ZzmkKzHMLJbPfBSbhd53blMAuxIxOwgbLYuT0Q5MSrBM8TzClKPe
J4OdCO5RhAqKPMtW7LlgtM5pIZcyVhpQPGvSWy36M/5xwyJXMTo6hTGbGxcKmKbj
fWmmZ59uf6Y2x/bgvLAXNhXpb6YAP/fX6rq+2EvVQXi/pkb8d5VsqMlnFwEDzXpg
XWpTpDkOIZab5BWj43z+EBvwW+ZffB8/wui1Vft8x3BrS0F1mefz5Ynm6LbktFXx
/lup9q7WvunMB6aHTbGg8YytwB1cKfF1DWcP4KMU0Ohm0ubEyy6X0GisA4hAeEW9
mwSxTOMRieHmCDNBMN1YfxcEIpqV8fyELjZK2pS/w9QqUlXLjplkFyCYu46YKU8i
XxOERs6G8wtqrQ4kBVZH5v7lQLcv0bzw3qwBXr0aTuONL1EteyNQ/fKDB6BOWTER
Jjepb9AIEFe15G5qUil1c70oavCwB+FruLgNKq0BWr7A5DjDIgyf2FXJ1GIYcDR7
zwOmzHM3fVk/JjyyYl64QyHD7Q+0oYzEYsBNOWH/If5uuwZNK6vv1g1m8m75BjzH
/FUuGYcNpRsEwvNU3Nav+bIRZr6KZ7ue/eOaXo3g3LtWgbrUQhOMEbR+JH6GIGm0
4SoedVftLvVKr59YEcMnnuT5tLiprjpA83+lmr1zx0D/LuoyuHiRDMfIEHGBMZOD
XcO5ED96ps7XrcjUyGJBVtNRm3iqc+FxdA7QhKtbdhPafkw3csS9ihrwTuE7HRGD
7HYBOpaal3gnsCmOTg2nqDQB8xeXkR7ptid2Fl5vvGrAbGWu5l+TNq4sW2S55Tit
PIbBFPQl47XfWIOK2hPLSmqeYDzEMw23TdFyTbdn5qTlPENed9bIIO0drqr4R079
4bxpkA8iN5TY9E5SD21cCkPxSLt1tyS/XUn4N/m0kuH6QFsJ5AV5WAC8htca92/b
2Zpt1royr9tajzbINV+8JSd5KdOjKBA8DDkcc+5GyMsAnQajMwLIQXesod536rXJ
vdMXvnpGDSEmuj8VEu2u2JwVD5f33+hv9ofdfHFpNmIVkKnurvtq3vTwDKUtyyB0
klq92070F6ZGJzrBiu7BYnHRKuzkxMcVoLBQk8talPDRnnPXdPWc+1izAOxivUq7
3dCLMyjjETDhRUpZLQBJabpzmNG4PGVxjQeFPET/fZWp5LzPKPqdyL/GWRK+mG2D
s74eNxP7SIoR1A/KDM9/+SuD3zVVChcitfphS0pJQr7/G9cPV2FJyW/Rtyfth6Dl
50E/NlXblYiJsteEJl7MCb3jyzz2mH17TgT+55N3o49Af6dOYPVoIaCJBWWP8Yk8
FxpQKPuuYKWxVRPVj9NUGwyD3RhVNiWiKNkYFthJ8MQZOOO+Ux1hsXvfqz5FwBIZ
1yusVnQjv88se7Qw0V4uBRed7w4lupW2UPmm7dJrjzOMn+TGLpsWww==
=jnhG
-----END PGP MESSAGE-----

* local variables
:PROPERTIES:
:ID:       A3959E87-841E-44A5-B174-8B53F81F8979
:END:
# Local Variables:
# eval: (ps/buffer-local-set-key (kbd "s-y") 'org-decrypt-entry)
# org-crypt-key: "tlon.shared@gmail.com"
# End:
