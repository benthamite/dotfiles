#+title: browse-url-extras: Extensions for browse-url
#+author: Pablo Stafforini
#+email: pablo@stafforini.com
#+language: en
#+options: ':t toc:t author:t email:t num:t
#+startup: content
#+export_file_name: browse-url-extras.info
#+texinfo_filename: browse-url-extras.info
#+texinfo_dir_category: Emacs misc features
#+texinfo_dir_title: Browse URL Extras: (browse-url-extras)
#+texinfo_dir_desc: Extensions for browse-url

This manual describes the features and customization options for the Emacs Lisp file =browse-url-extras.el=.

* Overview
:PROPERTIES:
:CUSTOM_ID: h:overview
:END:

=browse-url-extras.el= provides extensions for Emacs' built-in =browse-url= functionality, allowing for more fine-grained control over how URLs are opened. It enables defining lists of domains that should be opened with specific browsers (default system browser or Firefox) instead of Emacs' internal browser (like =eww=).

The main features include:

+ Configuration files to list domains for specific browsers.
+ Functions to automatically set up ~browse-url-handlers~ based on these files.
+ An interactive command to add the domain of the current URL (or from the kill ring) to one of the external browser lists.
+ A command to open the file at point in Dired using the external default browser.
+ A command to open a URL externally in the background (specifically using Firefox on macOS).

* User Options
:PROPERTIES:
:CUSTOM_ID: h:user-options
:END:

This section details the user-configurable variables provided by =browse-url-extras.el=.

** ~browse-url-extras-browse-url-default-file~
:PROPERTIES:
:CUSTOM_ID: h:browse-url-extras-browse-url-default-file
:END:

#+vindex: browse-url-extras-browse-url-default-file
Specifies the path to a plain text file containing a list of domains (one per line) that should be opened using the system's default browser (via ~browse-url-default-browser~).

The default path points to =etc/browse-url-default.txt= within the user's Emacs configuration directory (assuming a `paths` setup).

** ~browse-url-extras-browse-url-firefox-file~
:PROPERTIES:
:CUSTOM_ID: h:browse-url-extras-browse-url-firefox-file
:END:

#+vindex: browse-url-extras-browse-url-firefox-file
Specifies the path to a plain text file containing a list of domains (one per line) that should be opened specifically with Firefox (via ~browse-url-firefox~).

The default path points to =etc/browse-url-firefox.txt= within the user's Emacs configuration directory.

* Commands
:PROPERTIES:
:CUSTOM_ID: h:commands
:END:

=browse-url-extras.el= provides the following interactive commands:

** Open Dired File Externally
:PROPERTIES:
:CUSTOM_ID: h:browse-url-extras-of-dired-file-externally
:END:

#+findex: browse-url-extras-of-dired-file-externally
The command ~browse-url-extras-of-dired-file-externally~ is intended for use within a Dired buffer. It opens the file at the current point using the system's default external browser. It achieves this by temporarily setting ~browse-url-browser-function~ to ~browse-url-default-browser~ and then calling the standard ~browse-url-of-dired-file~ command.

** Add Domain to External Browser List
:PROPERTIES:
:CUSTOM_ID: h:browse-url-extras-add-domain-to-open-externally
:END:

#+findex: browse-url-extras-add-domain-to-open-externally
The command ~browse-url-extras-add-domain-to-open-externally~ interactively adds a domain to one of the external browser lists.

1.  It determines a candidate domain, prioritizing the current URL if in an =eww= buffer, or checking the first item in the kill ring for a valid URL.
2.  It prompts the user for the domain to add, using the candidate domain (if found) as the initial input.
3.  By default, it adds the entered domain to the file specified by ~browse-url-extras-browse-url-default-file~.
4.  If called with a prefix argument (ARG), it adds the domain to the file specified by ~browse-url-extras-browse-url-firefox-file~ instead.
5.  After adding the domain to the appropriate file (cleaning duplicates and sorting), it re-runs ~browse-url-extras-set-domains-to-open-externally~ to update the active ~browse-url-handlers~.
6.  Finally, it attempts to browse the original URL (if one was detected initially).

** Open URL Externally in Background (macOS Firefox)
:PROPERTIES:
:CUSTOM_ID: h:browse-url-open-externally-in-background
:END:

#+findex: browse-url-open-externally-in-background
The command ~browse-url-open-externally-in-background~ prompts for a URL (or takes one as an argument) and opens it using the external Firefox application on macOS, specifically instructing it to open in the background using the =open -a Firefox --background <url>= shell command.

* Configuration Functions
:PROPERTIES:
:CUSTOM_ID: h:configuration-functions
:END:

These functions are primarily intended for setup and internal use.

** Set Browser Handlers from File
:PROPERTIES:
:CUSTOM_ID: h:browse-url-extras-set-handler
:END:

#+findex: browse-url-extras-set-handler
The function ~browse-url-extras-set-handler~ takes a file path (URLS-FILE) and a browse function (HANDLER) as arguments. It reads the specified file, treating each line as a domain, and adds entries to the global ~browse-url-handlers~ list. Each entry maps a regular expression (quoting the domain) to the provided HANDLER function.

** Set All External Domains
:PROPERTIES:
:CUSTOM_ID: h:browse-url-extras-set-domains-to-open-externally
:END:

#+findex: browse-url-extras-set-domains-to-open-externally
The command ~browse-url-extras-set-domains-to-open-externally~ initializes or resets the URL handling configuration. It clears the existing ~browse-url-handlers~ and then calls ~browse-url-extras-set-handler~ twice:
1.  Once for the ~browse-url-extras-browse-url-default-file~ with the ~browse-url-default-browser~ handler.
2.  Once for the ~browse-url-extras-browse-url-firefox-file~ with the ~browse-url-firefox~ handler.

This function is called automatically when =browse-url-extras.el= is loaded and after adding a new domain using ~browse-url-extras-add-domain-to-open-externally~.

** Write URL to File
:PROPERTIES:
:CUSTOM_ID: h:browse-url-extras-write-url-to-file
:END:

#+findex: browse-url-extras-write-url-to-file
The function ~browse-url-extras-write-url-to-file~ takes a URL (domain) string and a file path (FILE) as arguments. It appends the URL to the specified file, removes blank lines and duplicates, sorts the lines alphabetically, and saves the buffer. This is used by ~browse-url-extras-add-domain-to-open-externally~ to maintain the domain lists.

* Indices
:PROPERTIES:
:CUSTOM_ID: h:indices
:END:

** Function index
:PROPERTIES:
:INDEX: fn
:CUSTOM_ID: h:function-index
:END:

** Variable index
:PROPERTIES:
:INDEX: vr
:CUSTOM_ID: h:variable-index
:END:
