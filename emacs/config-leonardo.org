#+title: Leo's config

* code overrides
:PROPERTIES:
:ID:       1DDFC928-66D5-4E09-B85C-7844082044D7
:END:

#+begin_src emacs-lisp :tangle (print tlon-init-code-overrides-path)
(
 (:ps/org-id-add-ids-to-headings-in-file . ((ignore)))
 )
#+end_src

* post init
:PROPERTIES:
:ID:       86F0B93D-E2A3-4064-977D-1002602B58F3
:END:

#+begin_src emacs-lisp :tangle (print tlon-init-post-init-path)
(when (eq system-type 'darwin) ;; mac specific settings
  (setq mac-right-option-modifier 'meta)
  (setq mac-command-modifier 'hyper)
  (setq mac-option-modifier 'alt)
  (setq mac-right-command-modifier 'super))
(tool-bar-mode -1)
(global-set-key [kp-delete] 'delete-char)   ;; sets fn-delete to be right-delete
(global-set-key (kbd "<home>") 'beginning-of-line)
(global-set-key (kbd "<end>") 'end-of-line)
(global-set-key (kbd "<S-right>") 'other-window)
(global-set-key (kbd "<S-left>") 'other-window)
(global-set-key (kbd "<A-right>") 'end-of-buffer)
(global-set-key (kbd "<A-left>") 'beginning-of-buffer)
(with-eval-after-load "org"
  (define-key org-mode-map (kbd "<M-right>") nil)
  (define-key org-mode-map (kbd "<M-left>") nil)
  (define-key org-mode-map (kbd "<M-up>") nil)
  (define-key org-mode-map (kbd "<M-down>") nil)
  (define-key org-mode-map (kbd "<M-S-right>") nil)
  (define-key org-mode-map (kbd "<M-S-left>") nil)
  (define-key org-mode-map (kbd "<M-S-up>") nil)
  (define-key org-mode-map (kbd "<M-S-down>") nil)
  (global-set-key (kbd "<H-right>") 'org-metaright)
  (global-set-key (kbd "<H-left>") 'org-metaleft)
  (global-set-key (kbd "<H-up>") 'org-metaup)
  (global-set-key (kbd "<H-down>") 'org-metadown)
  (global-set-key (kbd "<M-right>") 'forward-word)
  (global-set-key (kbd "<M-left>") 'backward-word)
  )
(with-eval-after-load "markdown-mode"
  (define-key markdown-mode-map (kbd "s-u") 'tlon-bae-insert-eawiki-url))
  (defvar ps/file-cookies (file-name-concat ps/dir-downloads "cookies.txt"))
(defun ps/internet-archive-download-ACSM ()
  "Download and open ACSM file from Internet Archive URL in kill
ring.

NB: You need to have previously borrowed the book for the command
to work. The command will work even if the book was borrowed for
one hour only."
  (interactive)
  (if (string-search "archive.org" (current-kill 0))
      (progn
	(let* ((prefix "https://archive.org/services/loans/loan/?action=media_url&identifier=")
	       (suffix "&format=pdf&redirect=1")
	       (id (replace-regexp-in-string
		    "\\(http.*?details/\\)\\([_[:alnum:]]*\\)\\(.*\\)"
		    "\\2"
		    (current-kill 0)))
	       (url (concat prefix id suffix))
	       (acsm-file (file-name-concat ps/dir-downloads "book.acsm")))
	  ;; Download the Internet Archive cookies to a file so `wget' can authenticate:
	  ;; askubuntu.com/questions/161778/how-do-i-use-wget-curl-to-download-from-a-site-i-am-logged-into
	  ;; Then replace the path below with the location of the downloaded cookies file.
	  (save-window-excursion
	    (let ((shell-command-buffer-name-async "*internet-archive-download-ACSM*"))
	      (async-shell-command
	       (format
		"wget --load-cookies='%s' '%s' -O '%s'"
		ps/file-cookies url acsm-file))
	      ;; (sleep-for 2)
	      ;; (async-shell-command
	      ;; (format
	      ;; "open %s"
	      ;; "/users/cartago/downloads/book.acsm"))
	      ))
	  (dired ps/dir-downloads)
	  ))
    (user-error "You forgot to copy the URL!")))

(setq telega-server-libs-prefix "/Users/cartago/source/td/tdlib")
(setq mac-function-modifier '(:button 2))

;; If Emacs doesn't find an ID, run `M-x org-id-update-id-locations'
(setq org-capture-templates
      `(("b" "Tlön: BAE" entry
	 (id "49adbb3e-b542-4752-a67b-16bc2eb44624")
	 "** TODO %?\n" :empty-lines 1 :prepend t)
	("r" "Tlön: RAE" entry
	 (id "604dbb4c-4948-492e-b1cd-84b0a1451b4a")
	 "** TODO %?\n" :empty-lines 1 :prepend t)
	("f" "Tlön: FM" entry
	 (id "5d94a97f-701f-4d0d-94ad-ff1b88bf0e82")
	 "** TODO %?\n" :empty-lines 1 :prepend t)
	("d" "Tlön: LBDLH" entry
	 (id "0d6d7ebb-bb51-4505-9a29-68b79f8c12de")
	 "** TODO %?\n" :empty-lines 1 :prepend t)
	("u" "Tlön: EAN" entry
	 (id "8b9c313a-3630-4b77-b924-a8f7f9e52d8d")
	 "** TODO %?\n" :empty-lines 1 :prepend t)
	("h" "Tlön: HEAR" entry
	 (id "f3f14f2f-2b74-4ea7-a84f-4d9aae458201")
	 "** TODO %?\n" :empty-lines 1 :prepend t)
	("g" "Tlön: GPE" entry
	 (id "e9b7041f-8721-495f-b5f7-97ad83ae061c")
	 "** TODO %?\n" :empty-lines 1 :prepend t)
	("c" "Tlön: Core" entry
	 (id "68f0150e-9b0d-4bab-86c0-2bf878e19d9e")
	 "** TODO %?\n" :empty-lines 1 :prepend t)
	("s" "To sort" entry
	 (id "107D27EC-B193-444E-B65B-9B1AD2A7CC65")
	 "** TODO %?\n" :empty-lines 1 :prepend t)
	("m" "Tlön: Core: messaging" entry
	 (id "9387B56D-2940-4FB0-91EF-92879D58659E")
	 "** TODO %?\n" :empty-lines 1 :prepend t)
	("e" "Tlön: Core: debugging Emacs" entry
	 (id "8402F53C-F547-4705-B79E-24D6286D2C9E")
	 "** TODO %?\n" :empty-lines 1 :prepend t)
	("t" "Tlön: Core: Project t" entry
	 (id "12645897-A06F-44DD-876D-0FFC47D0E742")
	 "** TODO %?\n" :empty-lines 1 :prepend t)
	))

(defhydra hydra-org-work
  (:hint nil
	 :idle 0
	 :color blue)
  "Tlön dashboard"
  ("b" (org-id-goto "49adbb3e-b542-4752-a67b-16bc2eb44624") "BAE")
  ("r" (org-id-goto "604dbb4c-4948-492e-b1cd-84b0a1451b4a") "RAE")
  ("f" (org-id-goto "5d94a97f-701f-4d0d-94ad-ff1b88bf0e82") "FM")
  ("d" (org-id-goto "0d6d7ebb-bb51-4505-9a29-68b79f8c12de") "LBDLHD")
  ("u" (org-id-goto "8b9c313a-3630-4b77-b924-a8f7f9e52d8d") "EAN")
  ("h" (org-id-goto "f3f14f2f-2b74-4ea7-a84f-4d9aae458201") "HEAR")
  ("g" (org-id-goto "e9b7041f-8721-495f-b5f7-97ad83ae061c") "GPE")
  ("c" (org-id-goto "68f0150e-9b0d-4bab-86c0-2bf878e19d9e") "Core")
  ("s" (org-id-goto "107D27EC-B193-444E-B65B-9B1AD2A7CC65") "To sort")
  ("m" (org-id-goto "9387B56D-2940-4FB0-91EF-92879D58659E") "Messaging")
  ("e" (org-id-goto "8402F53C-F547-4705-B79E-24D6286D2C9E") "debugging Emacs")
  ("t" (org-id-goto "12645897-A06F-44DD-876D-0FFC47D0E742") "Project t")
  )


(global-set-key (kbd "H-;") 'hydra-org-work/body)
(put 'scroll-left 'disabled nil)


(setq telega-server-libs-prefix "/Users/cartago/source/td/tdlib")

(ps/modus-themes-load-theme-conditionally)

(setq warning-minimum-level :error)
#+end_src

* tangle flags
:PROPERTIES:
:ID:       A4E7C5AD-1E55-4C6F-B0E5-8320D282A886
:END:

#+begin_src emacs-lisp :tangle (print tlon-init-tangle-flags-path)
(
 (:ps/anki-editor . nil)
 (:ps/copilot . nil)
 (:ps/corfu-terminal . nil)
 (:ps/corfu-doc-terminal . nil)
 (:ps/erc . nil)
 (:ps/espotify . nil)
 (:ps/hammy . nil)
 (:ps/keytar . nil)
 (:ps/lsp-grammarly . t)
 (:ps/midnight . nil)
 (:ps/mu4e . nil)
 (:ps/org-gcal . nil)
 (:ps/org-roam . nil)
 (:ps/org2blog . nil)
 (:ps/orgmdb . nil)
 (:ps/remember . nil)
 (:ps/slack . nil)
 (:ps/twittering-mode . t)
 (:ps/vulpea . nil)
 )
#+end_src

* variables override                                                  :crypt:
:PROPERTIES:
:ID:       0B85812B-1620-4F40-A5BA-534626B6B112
:END:

-----BEGIN PGP MESSAGE-----

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
=/Vol
-----END PGP MESSAGE-----

* local variables
:PROPERTIES:
:ID:       A3959E87-841E-44A5-B174-8B53F81F8979
:END:
# Local Variables:
# eval: (ps/buffer-local-set-key (kbd "s-y") 'org-decrypt-entry)
# org-crypt-key: "tlon.shared@gmail.com"
# End:
