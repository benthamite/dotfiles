#+title: Change log of my Emacs configuration
#+author: Pablo Stafforini
#+langauge: en

This document summarizes the changes pertaining to my Emacs configuration in each tagged commit of my dotfiles git repository. It is meant to be read primarily by members of the Tlön team, but it may be of interest to others as well.

* Version 7.1.6 on 2025-05-29

** Core Configuration & Package Management

*** Elpaca & Package Loading
- Updated several packages to use GitHub sources with specific build configurations
- Fixed package loading order issues
- Added deferred loading for several packages to improve startup performance

** AI & Language Models

*** GPTel Enhancements
- Updated default model to ~claude-sonnet-4-20250514~
- Added new AI providers: Perplexity (Sonar models), OpenAI o1/o3 models
- Configured model-specific parameters and cost settings
- Added ~llm-tool-collection~ for crowd-sourced list of AI tools

*** Aider Integration
- Added comprehensive Aider configuration with ~.aider.conf.yml~ for AI-assisted coding
- New ~aidermacs~ package with custom model settings and key bindings
- Created ~aidermacs-extras~ with buffer kill confirmation and history management
- Added Aider-specific yasnippets for common operations


*** New AI Packages
- ~mcp~ (Model Context Protocol)
- ~semext~ for LLM-powered semantic commands
- ~dall-e-shell~ for image generation
- ~codel~ for code completion

** Development Tools

*** Version Control (Magit/Forge)
- Added ~magit-extras-pull-all-submodules~ for submodule management
- Improved Forge integration with project status management via GitHub API
- Added ~forge-extras-set-project-status~ with GraphQL mutations
- Enhanced notification handling and state synchronization

*** Bibliography Management (Ebib)
- Major refactoring of file attachment system to work asynchronously
- Added auto-reload functionality for database files
- Improved integration with Anna's Archive and SciHub for PDF downloads
- Enhanced entry validation and file management

** Text Processing & Organization

*** Org Mode
- Expanded TODO keywords: added "NEXT", "LATER", changed "DELEGATED" shortcut

*** Document Processing
- Added ~subed~ package with transcript export functionality
- Enhanced ~grip-mode~ for Markdown preview with xwidget integration
- Updated document conversion workflows

** User Interface

*** Key Binding Reorganization
- Systematic cleanup of key bindings across multiple packages
- Standardized Super modifier usage for custom commands
- Improved consistency between similar packages (e.g., BBDB, Forge)

*** Buffer & Window Management
- Enhanced EWW integration with xwidget support
- Added commands to switch between EWW and xwidget-webkit
- Improved buffer navigation and management

** Utilities & Snippets

*** YASnippet Templates
- Added utility snippets for Ledger mode (various Argentine services)
- Created development snippets for common operations
- Added Eshell snippets for video/audio processing with ffmpeg

*** File & System Integration
- Enhanced file processing with cropping, audio extraction capabilities
- Updated browse-url configurations for specific sites
- Improved external application integration

* Version 7.1.5 on 2025-04-29

** Documentation
- Created initial documentation files (.org format) for all packages under =emacs/extras/doc/=, providing overviews, command descriptions, variable explanations, and function indices.

** ebib-extras
- Improved asynchronous file attachment reliability by replacing internal Ebib functions with safer alternatives (=string-equal=, loops) and using hooks for callbacks (=annas-archive-post-download-hook=, =eww-extras= callback signature fix).
- Fixed several bugs related to file attachment, including:
  - Correctly handling attachments when the BibTeX key has been regenerated.
  - Using the target key (not the current entry's key) when suggesting file paths.
  - Preventing errors when attachment download functions invoke callbacks with incorrect arguments.
  - Fixing a missing parenthesis in =ebib-extras-get-isbn=.

** gptel-extras
- Added new command =gptel-extras-search-and-ask-model= to search a query both externally and with Perplexity.

** Configuration (=config.org=)
- **Package Management:**
  - Deferred loading for =json-mode=.
  - Skipped Elpaca version check for =ghub= and =doom-modeline=.
  - Moved =consult-web=, =magit-gptcommit=, and =llm= packages to =graveyard.org=.
  - Tidied =aidermacs-extras= =use-package= declaration.
  - Registered all tools from =llm-tool-collection=.
  - Removed unnecessary =:defer t= lines for features loaded via =:after=.
  - Set hooks more concisely using =:hook= keyword directly with the mode symbol (e.g., =:hook org-mode-hook=).
- **Behavior:**
  - Removed obsolete options: =org-startup-folded=, =macos-homebrew-excluded-casks=.
  - Moved API key definitions (=ANTHROPIC_API_KEY=, =GEMINI_API_KEY=, =OPENROUTER_API_KEY=) from Elisp =setenv= calls to =shell/.zshenv-secrets=.
  - Increased =org-roam-db-sync= timer interval from 5 to 20 minutes.
  - Fixed incorrect code block syntax (=:tangle nil= to =:tangle no=).
- **Keybindings:**
  - Added =H-s-s= keybinding for =gptel-extras-search-and-ask-model=.
  - Added =s-c= keybinding in =aidermacs-comint-mode-map= for =comint-send-input=.
- **Models:**
  - Updated =gptel= configuration for Perplexity models (using =sonar= and =sonar-pro=).
- **Debugging:**
  - Improved =debug-copy-and-save-backtrace= to show file size message.

** vc-extras
- Enhanced submodule initialization in =vc-extras-clone-repo= to automatically check out the default branch (=main= or =master=) in each submodule after cloning and updating.
- Used =call-process= instead of =shell-command-to-string= in =vc-extras--get-submodule-paths= for robustness.

** aidermacs-extras
- Added command =aidermacs-extras-run-in-current-dir= which runs aider, automatically adding the current buffer's file and its associated help file (if found via =files-extras-get-help-file=).
- Added command =aidermacs-extras-save-repo-map= to save the Aider repo map to =repo-map.md= in the project root.

** files-extras
- Added function =files-extras-get-help-file= to find associated documentation files (.org or .md in doc/ or docs/ subdirs).

** magit-extra
- Added command =magit-extra-async-pull= for asynchronous pulling.

** Shell / Secrets
- Updated various API keys in =shell/.zshenv-secrets=.
- Added =OPENROUTER_API_KEY=, =GEMINI_API_KEY=, =ANTHROPIC_API_KEY=, =OPENAI_API_KEY= to secrets file.
- Removed an old =OPENAI_KEY=.


* Version 7.1.4 on 2025-04-16

** aidermacs
*** Configuration
- Set default model to =gemini/gemini-2.5-pro-preview-03-25=.
- Unset =aidermacs-architect-model=.
- Disabled architect mode (=aidermacs-use-architect-mode= is now nil).
- Moved comint kill buffer confirmation function to =aidermacs-extras=.
- Revised documentation.
- Updated =aidermacs-extra-args=.
- Set =OPENROUTER_API_KEY=.
- Added keybindings for sending input and accumulating input in =aidermacs-comint-mode-map=.

** aidermacs-extras
*** New Functionality
- Added function =aidermacs-extras-copy-recent-history-to-kill-ring= to copy recent chat history to the kill ring without opening the file.
- Added function =aidermacs-extras-copy-prompt-region= to copy a region of the Aider history buffer based on user-selected prompt blocks.
- Added function =aidermacs-extras-confirm-kill-buffer= to confirm before killing a comint buffer with an active Aidermacs process.

** elpaca
- Updated elpaca installer to version 0.11.

** warnings
- Suppressed aidermacs warnings.

** debug
- Added =debug-copy-and-save-backtrace= to copy the backtrace to the clipboard and save it to a file.  Bound to ="s"= in =debugger-mode-map=.

** gptel
- Switched to master branch of fork.
- Set =gemini-2.5-pro-preview-03-25= as default model.

** org
- Use =org-archive-subtree-default= for archiving, bound to =s-a=.

** register-extras
- Added buffer register functionality.
  - =register-extras-buffer-to-register= associates a key with the current buffer.
  - =register-extras-jump-to-buffer= switches to the buffer associated with a key.
- Added buffer register commands to the =register-extras-dispatch= menu.

** tlon
- Pull issues in all repos every 60 minutes (was 30 minutes).

** zotra-extras
- Updated docstrings.
- Fixed typo in docstring.
- Ignored errors for initial input string.
- Extracted =zotra-extras--add-and-maybe-open=.
- Used current kill as initial input.
- Added retry with citoid backend on server error.

** citar
- Removed needless timer to reload bibliographies.

** midnight
- Used idle timer for =midnight-delay-set=.

* Version 7.1.3 on 2025-03-26

** aidermacs
- Added new package =aidermacs= for integration with the Aider AI pair programming tool.

** bbdb
- Updated the =use-package= recipe to correctly build and install =bbdb= from the =emacsmirror= repository.

** codel
- Added new package =codel=, another collection of LLM tools, configured to set up =gptel=.

** doom-modeline-extras
- Added a new modeline segment =ai-context= to display the count of files currently in the AI context (e.g., =gptel=), indicated by =✨(n)=. This can be toggled with the new custom variable =doom-modeline-extras-ai-context=. 

** elfeed
- Changed the default search filter =elfeed-search-filter= to =@15-days-ago +unread= to potentially improve performance by limiting the initial view to recent unread entries.
- Set =elfeed-search-remain-on-entry= to =t=, keeping the point on the current entry when its link is followed. 

** elfeed-extras
- Revised =elfeed-extras-update= to allow feed updates to run in the background without requiring the =*elfeed-search*= buffer to be open, ensuring the database is loaded and saved correctly. 
- Refactored the auto-update mechanism to use =run-with-idle-timer= directly in the config instead of a dedicated function and variables.

** embark
- Added a keybinding =H-c= in the =embark-file-map= to invoke =file-extras-copy-contents=.

** flycheck
- Configured =flycheck-temp-prefix= to place temporary files in the standard =temporary-file-directory= instead of the project root.
- Excluded =elfeed-search-mode= from =flycheck-global-modes= to prevent potential performance issues in Elfeed. 

** forge-extras
- Added functions =forge-next-message= and =forge-previous-message= to navigate between comments/messages in an issue buffer, bound to =A-C-s-f= and =A-C-s-d= respectively in =forge-issue-mode-map=.
- Added function =forge-extras-copy-message-at-point-as-kill= to copy the content of the message at point, bound to =s-w= in =forge-issue-mode-map=.
- Renamed internal references from "post" to "message" for consistency (e.g., in function names, docstrings).

** gptel
- Added a configuration for a "Claude-thinking" model using =gptel-make-anthropic=, enabling specific Anthropic beta features and parameters, and sett =gptel-include-reasoning= to =nil= to omit the reasoning step.
- Switched the =gptel= package source to the =exclude-gitignored= branch on the user's fork.
- Added a keybinding =H-s-l= to call =gptel-context-remove-all= without confirmation.

** gptel-extras
- Introduced Aider integration: Added functionality to optionally include the Aider-generated repository map and =conventions.md= file in the =gptel= context. This is controlled by new custom variables =gptel-extras-add-repo-map-to-context= and =gptel-extras-add-conventions-to-context=.
- Implemented a caching mechanism for the repository map generation to improve performance. The cache uses a time-to-live (=gptel-extras-repo-map-cache-ttl=) and can optionally invalidate based on git HEAD changes (=gptel-extras-repo-map-invalidate-on-git-changes=). Added =gptel-extras-invalidate-repo-map-cache= command.
- Added a command =gptel-extras-toggle-aider-files= to easily enable/disable the inclusion of the Aider repo map and conventions file in the context.

** llm-tool-collection
- Added new package =llm-tool-collection=.

** mcp
- Added new package =mcp= (Model Context Protocol client).

** org-extras
- Updated the variable name =org-extras-clock-in-with-calendar-prompt-exclude= to the current =org-extras-clock-in-add-participants-exclude= in the configuration.
- Corrected the logic in =org-extras-clock-in-add-participants= to properly handle cases where =org-extras-clock-in-add-participants-exclude= is =nil=. 

** org-journal
- Added a new function =org-journal-new-entry-in-journal= which prompts the user to select a journal directory before creating a new entry. This function is now bound to =A-j=, replacing the default =org-journal-new-entry=.

** pass
- Configured a timer to run every 5 minutes, calling =magit-extras-warn-if-repo-is-dirty= on the Tlön pass repository path to alert about uncommitted changes.
  
** paths
- Added =paths-dir-tlon-todos= to the =paths-dir-all-repos= list. 

** pyenv-mode
- Corrected the =use-package= declaration to use =:after python= (lowercase) instead of =:after Python=. (fde401db)

** slack
- Updated the configured Slack teams, changing names and associated token/cookie retrieval paths from =auth-source=.

** window-extras
- Enhanced =window-extras-buffer-move-right= and =window-extras-buffer-move-left= to automatically split the window if only one window exists, before moving the buffer. Thanks, Leo!
- Removed the dependency on the =winum= package for moving buffers left/right, now using built-in =window-in-direction=. 

* Version 7.1.2 on 2025-03-15

** gptel-plus
:PROPERTIES:
:CUSTOM_ID: gptel-plus
:END:
A new package =gptel-plus= has been added, which collects some functionality previously in =gptel-extras=. See its [[https://github.com/benthamite/gptel-plus][readme]] for details.

** elpaca

Switched to from Savannah to Emacs mirror because Savannah is down incredibly often.

** UI and Binding Changes
:PROPERTIES:
:CUSTOM_ID: ui-and-binding-changes
:END:
- Key binding changes:
  - =A-k= now bound to =slack-channel-select= (previously =A-s=)
  - =A-s= now bound to =shell=
  - Revised =winum-select-window-{n}= bindings with =<C-m>=, =C-,=, =C-.=, =C-/=
  - Org-agenda keybindings revised: =w= for refile, =W= for week view

** Additional Features and Fixes
:PROPERTIES:
:CUSTOM_ID: additional-features-and-fixes
:END:
- Added =gptel-max-tokens= set to 10000
- Added new AI models including Grok 2 from xAI
- Added =mercado-libre= package.
- Re-enabled =flycheck-languagetool=
- Added functionality to suppress warnings in tramp
- Fixed bug in =elpaca-extras-update-and-reload=

** Cleanup and Minor Changes
:PROPERTIES:
:CUSTOM_ID: cleanup-and-minor-changes
:END:
- Tab-bar-extras: Disabled clock and battery display (since macOS menu bar now shows these)
- Fixed handling of activity-watch errors on remote files

Overall, these changes represent a significant refactoring of gptel-related functionality, improvements to keyboard shortcuts for better ergonomics, and various quality-of-life improvements across different packages.

* Version 7.1.1 on 2025-02-26

** =init=
- Renamed package from =tlon-init= to =init= throughout the codebase

** =elpaca=
- Updated elpaca installer to version 0.10
- Revamped =elpaca-extras-update-and-reload= to use hooks for more reliable package updates.

** =gptel=
- Fixed cost calculation to properly include both input and output costs
- Made tokens per word and output token count conversion factors customizable via user options
- Added =gptel-extras-rewrite-defun= to rewrite Emacs Lisp function definitions via embark: =C-;= (=embark-act=), followed by =R=.
- Added hack =gptel-extras-fix-garbled-chars= to replace common token encoding errors like "let/" → "let/" and "=(" → "\=(".
- Improved cost estimation for better performance.

** Files
- Made OCR process less verbose with buffered notifications

** Shell Integration
- Improved Python environment handling in .zshrc with better lazy-loading
- Removed annoying "saving session" messages in non-interactive shells

** VC and Git
- Refactored and improved =vc-extras-clone-repo= with better helper functions
- Completely refactored =vc-extras-delete-local-repo= for more reliable operation
- Added =vc-extras-strip-diff-markers= to clean up diff output
- Fixed issue where process buffers weren't properly checked before killing

* Version 6.8.7 on 2025-01-29
** Emacs core packages
*** eww-extras
- Improved error handling in ~eww-extras-url-to-file-sentinel~ to better handle different process exit scenarios. More robustly checks if downloaded files exist despite non-zero exit status

*** gptel-extras
- Significant refactoring of cost calculation functionality:
  - Split cost calculation into buffer and context costs for better performance
  - Added caching of context costs 
  - Added user option ~gptel-extras-display-cost~ to control cost display
- Improved listing of context files with new ~gptel-extras-list-context-files~ command

*** emacs-pr-review
- Added new package for reviewing pull requests in Emacs

* Version 6.8.6 on 2025-01-22
** Shell & Environment Configuration
- Modified shell configuration for better organization and performance:
  - Added lazy loading for nvm and node path setup
  - Cleaned up zsh configuration based on Claude suggestions

** Package Specific Changes
*** forge
- Changed topic filters to not hide inactive topics by default

*** flycheck
- Set ~flycheck-checker-error-threshold~ to 10000

*** ledger-mode 
- Modified reports to use ISO 8601 date format
- Added new report option for account viewing
- Removed unused currency from ~ledger-mode-extras-currencies~

*** message-mode
- Added hooks to handle post-send buffer behavior

*** org-capture
- Modified default priority for calendar todos
- Made key bindings more consistent

*** org-roam
- Removed calendar.org from excluded files
- Revert previous commit that caused recursive loop issues

*** yasnippet
- Added several new snippets:
- Added snippet-mode to aggressive-indent excluded modes

** UI & Display Changes
*** display-wttr
- Disabled package due to persistent errors

*** eww
- Changed default search engine to DuckDuckGo since Google requires Javascript

* Version 6.8.5 on 2025-01-07
** org-vcard
- Added package for importing/exporting vCards from org-mode
- Configured for optimal compatibility with macOS Contacts.app
- Includes custom handling of photo attachments

** org-roam-extras
- Added auto-showing of backlinks buffer functionality
- Introduced =org-roam-extras-auto-show-backlink-buffer= custom option
- Fixed issues with modeline updates by making backlink count buffer-local
- Commented out problematic modeline update hooks (pending review)

** gptel-extras
- Improved cost calculation handling for when cost data isn't available

** doom-modeline-extras
- Improved org-roam backlinks display format (now shows "⟲(N)"), where N is the number of backlinks
- Removed obsolete gptel-related user options

** profiler-extras
- Revised key binding from =C-H-p= to =A-H-p=

** ediff
- Removed local key binding for =ediff-toggle-word-mode=

* Version 6.8.3 on 2024-12-06
** Configuration Updates
*** Package Loading
- Changed bibliography-related packages to require 'tlon' before setting values
- Removed dev branches from multiple package configurations

** Interface & Usability
*** consult
- Set =consult-grep-max-columns= to nil to address wgrep issue
- Updated consult settings for better performance

*** gptel & Other AI Tools
- Made various autoload improvements for AI-related functions
- Added functionality to exclude binaries from word counts
- Improved user feedback messages

** Other Notable Changes
*** Code Organization
- Multiple yasnippet updates and condition refinements
- URL list updates for browser handling
- Telega configuration cleanup and function name updates
- Several small fixes and improvements across various packages

* Version 6.8.2 on 2024-11-24
** Package updates and refinements
*** ace-link-extras
- Removed outdated patches for mu4e functions
- Added proper requirements and autoloads

*** avy-extras
- Added proper package requirements and autoloads
- Removed patch now submitted as PR to use =;= instead of =?= for dispatcher

*** citar-extras
- Added proper package requirements

*** ebib-extras 
- Added various autoloads and proper requirements

*** gptel-extras
- Fixed auto-revert issue with context files modified externally
- Exclude media files from cost calculation
- Fixed Mullvad integration

*** magit-extra
- Improved docstrings and function signatures

*** org-extras
- Removed unused functions for hiding properties and logbook drawers
- Fixed several autoloads and requirements

*** simple-extras
- Added functionality to auto-save new non-file buffers
- Fixed proper requirements and autoloads

*** vc-extras
- Added menu interface accessed via =vc-extras-menu=
- Support cloning repos to user-specified directories
- Improved authentication status checking

** Infrastructure improvements
- Standardized package headers with proper requirements
- Set fill-column to 80 in all extras files
- Added proper autoloads throughout codebase
- Cleaned up require statements to only include necessary dependencies
- Updated package versions to 0.2 across the board
- Fixed various compiler warnings

** File organization
- Moved =check_tlon_pass_changes= script from home folder to bin
- Updated various snippets in yasnippet collections
- Added/removed several yasnippet templates

The changes mainly focus on code cleanup, proper package requirements, and standardizing the codebase structure. The most significant functional changes are in =gptel-extras= (cost calculation improvements) and =vc-extras= (menu interface and cloning improvements).

* Version 6.8.1 on 2024-11-19
** Package management and initialization
- Removed Chemacs dependency
- Added early initialization debugging function =early-init-trace-feature-load=
- Several packages now use deferred loading: =casual=, =annas-archive=, =imenu=, =profiler=

** Git and version control
*** forge-extras
- Improved GitHub notification syncing using AppleScript with Safari

*** magit-extras 
- Added =magit-extras-checkout-tag-with-submodules= for handling tags in repos with submodules

*** vc-extras
- Enhanced submodule handling in cloning and git directory splitting
- Improved repo handling functionality

** PDF tools
- Moved page manipulation functionality from =pdf-tools-extras= to new package =pdf-tools-pages=
- Updated command names and bindings for consistency

** Email and communication
*** mu4e
- Adjusted indexing parameters for better performance

** UI and navigation
*** tab-bar-extras
- Now regularly updates battery status
- Changed Chemacs profile element to generic Emacs profile element

** Other changes
*** Minor improvements
- Added several ledger mode snippets
- Cleaned up/removed commented code in various files
- Fixed binding issues in several packages
- Added many autoload directives

The most significant changes relate to PDF handling (with the new dedicated package), forge notification handling (with improved Safari integration), and version control improvements around submodule handling. There's also a notable shift away from Chemacs dependency and toward more deferred package loading.
* Version 6.7.12 on 2024-11-05

** Elpaca
- Updated to version 0.8

** GPTel and Context Management
- Significantly revised context saving/restoring functionality for gptel
- Context now stored in org properties or file-local variables instead of separate persistence file
- Made =gptel-extras-save-file-context-in-markdown= non-interactive
- Removed old context saving/restoration system and associated customization variables

** Org
- Fixed =org-noter-extras= loading by requiring after =org-noter=
- Removed redundant line in =org-extras= related to agenda timer
- Refactored =org-extras-id-auto-add-ids-to-headings-in-file=:
  - Added new customization option =org-extras-id-auto-add-excluded-headings=
  - Improved exclusion logic for directories, files and headings
  - Added special handling for gptel directories

** UI/Configuration
- Added note about potentially needing to create symlink after Emacs installation
- Added new markdown snippet for truncated code responses
- Modified code block indirect buffer display to use same window in markdown mode
- Fixed function name in pdf-tools-extras (=pdf-count-extras-words= -> =pdf-tools-extras-count-words=)

The most significant changes appear to be around GPTel's context management system and the org-id handling functionality. These could require attention if you were using the old context saving/restoration features or had custom org-id configuration.
* Version 6.7.11 on 2024-11-01

** Configuration Changes
*** GPTel Enhancements
- Added support for both Markdown and Org modes by introducing separate enable functions
- Enhanced conditional enable logic with =gptel-extras-enable-gptel-common=
- New command =gptel-extras-toggle-major-mode= to switch between Markdown and Org mode
- Made =gptel-extras-save-buffer= conditional on interactive calls only

*** Key Binding Updates
- Mapped "H-s-o" to =gptel-extras-toggle-major-mode=

*** Performance & System Changes
- Transient: Disabled history saving due to startup errors
- JavaScript: Changed indentation level from 2 to 4 spaces

*** Package Improvements
**** mu4e-extras
- Commented out problematic timer hook that was causing indexing errors

**** citar-extras
- Moved timer configuration to main config file for better organization

**** simple-extras
- Added explicit org-extras requirement in function

*** Code Organization
- Various code formatting improvements
- Minor refactoring for better maintainability
- Several functions made more conditional and robust

** Impact Assessment
- No major breaking changes identified
- GPTel users should note the new Markdown/Org mode toggle functionality
- JavaScript developers will notice the indentation change
* Version 6.7.9 on 2024-10-28
** dired-extras
- Added gptel directory to the dired menu for quick access

** doom-modeline-extras
- Remove gptel-related segments from the modeline, since they are now shown in the gptel header line

** forge-extras
- Moved forge tracking functionality from tlon-repos
- Added functions to track repositories and interact with the Forge database (=H-r r=, under ‘Forge’)

** gptel/gptel-extras
- Added functionality to summarize commit diffs using LLM (=gptel-extras-summarize-commit-diffs=). The initial version of this file was created using this function!
- Added command to go to end of buffer and send prompt (=gptel-extras-goto-end-and-send=)
- Added support for auto-enabling gptel-mode in org files with gptel data
- Added context files to cost estimation 
- Improved buffer saving functionality with better handling of open buffers
- Added function to kill and reopen buffers as a workaround for gptel processing issues
- Set =gptel-track-media= to t to enable media tracking by default
- Cost information now shown in header line instead of modeline, as mentioned above

** ob/typescript support
- Added TypeScript support for org-babel
- Installed =ob-typescript= package
- Added treesit configuration for TypeScript syntax highlighting
- Note: =org-edit-special= currently triggers an error if =s-z= is run in TypeScript blocks

** org-extras
- Added support for excluding individual files from auto-adding IDs via the file-local variable =org-extras-id-auto-add-exclude-file=

** vc-extras
- Moved repository management functionality from tlon-repos
- Added comprehensive GitHub repository management functions:
  - Creating repos (=vc-extras-create-repo=)
  - Cloning repos (=vc-extras-clone-repo=)
  - Deleting repos (=vc-extras-delete-repo=)
  - Managing git directory splitting (=vc-extras-split-repo=)
- Added support for working with multiple GitHub accounts/profiles

The main themes in these changes are:
1. Consolidation of repository management functionality in vc-extras
2. Enhanced gptel integration with better cost tracking and UI improvements
3. Addition of TypeScript support
4. Improved buffer and file management in gptel
5. Better organization of modeline elements

There don't appear to be any breaking changes, but users should be aware of:
- Changed handling of gptel cost display (moved from modeline to header line)
- New repository management functions if transitioning from tlon-repos
- Need to configure TypeScript support if planning to use it
* Version 6.4.1 on 2024-05-09

This is a minor release primarily focused on updating the names of all the functions and variables in the =tlon= (formerly =tlon-babel=) package.

* Version 6.4.0 on 2024-05-02

** chatgpt-shell

- This new package complements =gptel=, as it provides support for DALL-E.

** color-extras

- Added a few functions to convert between color formats (not tested).
  
** consult-web

- Added new package.Note that it requires extensive configuration, and many search engines won’t work unless you set up your own API keys.
  
** copilot

- =copilot= is now enabled in both programming modes and text modes (previously it was only enabled in the former). To disable them in text modes, =(remove-hook 'text-mode-hook #'copilot-extras-enable-conditionally)=.

** dired

- =dired-extras-hide-details-mode-enhanced= (=-=) replaces =dired-hide-details-mode=. This command toggles =dired-hide-details-mode=, =dired-omit-mode= and =dired-du-mode=. Intuitively, the idea is that dired displays either a minimalist view (the default) or a detailed view, which shows (1) details such as file ownership and permissions, (2) hidden files as well as various other files—such as backup files—that are otherwise not shown (configurable via =dired-omit-files=), and (3) the recursive size of directories.

** ebib-extras

- Upon adding a new entry, the user will now be prompted to indicate whether the relevant bibliographic details are correct, so that the relevant =ebib-extras= command —=ebib-extras-process-entry=— can be run. This command then performs additional processing, including downloading and attaching HTML and PDF files of the entry for BibTeX entries of type =online=. In the future, it will be configured to also download PDFs for BibTeX entries of type =article=, search for books for BibTeX entries of type =book=, and so on.
  
** elfeed-extras

- added “follow mode” (analogous to =org-agenda-follow-mode=): as point is moved through the =elfeed= search buffer with =k= and =l=, the corresponding entry is shown in the other windows.

** eww-extras
- Revised the code in various ways to support authentication from Chrome headless sessions (and thus generate PDFs without the annoying cookie messages). See the user option =eww-extras-chrome-data-dir-copy=.
  
** faces

- The way of setting faces has been thoroughly revised. Instead of having a single function with the hard-coded values for all the faces, as we used to have, we configure the individual faces under the relevant packages. To configure the faces, we use the function =faces-extras-set-and-store-face-attributes=, which takes a list of lists, each of which consists of a face name followed by one or more attrbitutes (a property-value pair). The function sets the face attributes, so that they become active at the time of evaluation, and stores them in a list, so that all faces previously set can be reset at once by invocation of the command =faces-extras-set-custom-face-attributes=. This is useful when the face is set in reference to a variable whose value later changes, or varies across users.

** forge

- The command =forge-list-assigned-issues= is now bound to =s-s= (“s” as in “self”).
  
** gptel-extras

- The list of models now shows additional information such as number of tokens and date of last update.
- The default model for all buffers is now ="gpt-4-turbo"=—the most advanced OpenAI model as of this writing.

** image-dired 
- The usual keys =k= and =l= now also work in this mode.
- Images can now be opened externally with =e= (the same key binding to open external files elsewhere in =dired=).

** mu4e-extras
- Replaced the native =mu4e-compose-reply= with =mu4e-extras-compose-reply=, which decides how to respond to messages with multiple recipients based on the value of the user option =mu4e-extras-wide-reply=.
  
** org-extras

- Added the user option =org-extras-clock-report-parameters=, for customizing clock reports.
  
** rainbow-mode

- Added package, for color testing.

** scratch buffers

- The combination of the new packages =prot-scratch= and =persistent-scratch= now allows for the creation of persistent scratch buffers in any major mode (=C-n=). That is, these buffers will persist across Emacs sessions, avoiding the risk of accidentally losing their contents.

** simple-extras

- A common annoyance with Emacs is that the contents of new buffers, which do not yet visit a file, are forever lost if the buffer is killed. This situation is now addressed via a set of hooks and advices that make =auto-save-mode= automatically save the contents of any non-file-visiting buffers to the folder specified in =simple-extras-new-buffer-auto-save-dir=. Note that the behavior of =auto-save-mode= in other buffers is not affected (e.g. if it is disabled, it will continue to be).

** tlon-core

- This package is now retired. All its functionality has been moved to =tlon=. The plan for the future, to reduce confusion, is to always release Tlön-related functions as part of this package, except for =tlon-init=, which remains.

* Version 6.3.0 on 2024-04-08

** dired-du

New package. It displays the recursive size of directories. The package is configured to hide this information when =dired-hide-details-mode= is enabled, which it is by default. This mode is toggled with =-=.

** doom-modeline

The new segments =gptel= and =gptel-cost= show the AI model active in the current buffer and the cost in US dollars of making a request at point, respectively. (A request sends the text from the beginning of the buffer to the point, unless some text is selected, in which case it sends the selection.) The latter segment is only active in the dedicated =gptel= buffer, for performance reasons. These elements can be disabled via the user options =doom-modeline-extras-gptel= and =doom-modeline-extras-gptel-cost=.

** elgrep

Removed package. For ripgrep integration, we now use the =consult= package exclusively. (The issue whereby batch replacements to a buffer captured via embark (=H-;=) where sometimes not applied seems to have been resolved, so there is no longer need to use another package.)

** emoji

The command =emoji-insert= is now bound =H-E=.

** gptel-extras

=gptel-extras-model-config= now displays information about each of the available models.

=gptel= buffers can now be saved easily via the command =gptel-extras-save-buffer=, which prompts for a name and saves it to its slugified version. The file is saved in =gptel-extras-dir=, whose value can be changed by the user. I recommend saving these buffers as you may want to refer to them in the future, and it is trivial to do so.

** org-appear

New package. It toggles the visibility of hidden org mode element parts upon entering and leaving those elements.

** org-extras

The command =org-extras-paste-with-conversion= has been improved and now works reliably. It converts the contents of the clipboard to =org-mode=, from HTML if the clipboard contains HTML, and from Markdown otherwise. It is very useful for copying content outside Emacs—e.g. from GitHub—and pasting it in an =org-mode= buffer.

The command =org-extras-eww-copy-for-org-mode= does something similar with content in an =eww= buffer.

** pdf-tools-extras

It is now possible to jump straight from a PDF in =pdf-view-mode= to the corresponding Ebib entry via the command =pdf-tools-extras-open-in-ebib= (=e=) (provided, of course, that the PDF has an associated entry)

** simple

The command =shell-command= is now bound to =H-e=.

** telega-extras

To transcribe the audio of the message at point, you can now use =telega-extras-transcribe-audio= (=b=).

** zotra-extras

The process for adding new entries in Ebib with =zotra-extas-add-entry= (=a=) has changed somewhat, but it is still a work in progress, so it doesn’t seem worth documenting here. If you encounter any issues, please contact me.

* Version 6.2.0 on 2024-03-09

** bibtex

- The =fluid.bib= and =stable.bib= files are now auto-sorted with the same sorting criterion used by Ebib. This solves the problem whereby changes to one entry (such as adding an abstract) were diffed as being part of another entry, because the file was re-sorted before the changes were committed.
- Relevant commands:

#+begin_src emacs-lisp
"s-a" 'bibtex-extras-set-field
"s-h" 'bibtex-extras-url-to-html-attach
"s-i" 'bibtex-extras-open-in-ebib
"s-p" 'bibtex-extras-url-to-pdf-attach
"s-t" 'bibtex-extras-move-entry-to-tlon)
#+end_src

** breadcrumb
- Added this package that displays a narrow bar below the tab bar with context-specific information about the buffer. In file-visiting buffers, it will show the file path, sometimes followed by additional details, such as the heading(s) in org-mode or Markdown files. Since this information is now shown here, the modeline only shows the name of the buffer, since it would be redundant to show the full path there as well. This leaves more room to show other potentially relevant information, such as the encoding system and, as noted below, the name of the active AI model.

** consult-gh

- A new package, =consult-gh= provides an interface to interact with GitHub repositories. The relevant commands may all be accessed from the “dispatcher”, via =H-G=.
** doom-modeline
- The modeline now shows the AI language model active in the buffer. Since =gptel= can be invoked from any buffer, I think it’s useful to know which model will be used. If you don’t want to see this information, just set =doom-modeline-extras-gptel= to =nil=.

** ebib
- The commands to generate PDF (=s-p=) or HTML (=s-h=) files now directly attach the generated file to the appropriate entry, bypassing the need to do this manually. Note that these commands also work from bibtex and from eww, and have the same key bindings.

** eww
- The shell command to create PDF files now incorporates an extra authentication argument that should prevent the messages to approve cookies from showing up in the document.
- Following a YouTube will now open it in =mpv=, if installed. This integration makes use of the package =empv=, which also supports controlling the playback directly from Emacs (=A-p= to see a list of commands).

** forge
- When visiting an unread issue, the associated GitHub page will open silently in a Firefox browser. This should happen without any visual or performance effects. Recently Forge made a major update to its notifications functionality, and they now work out of the box. However, because of limitations of the GitHub API, two-way sync is not possible: although viewing an issue in GitHub will show it as read in Forge, the reverse is not the case.g I don't mind this much since I ignore the GitHub visited status, but the Firefox hack ensures that the two counts remain fully in sync. To disable this behavior, remove this advice:

#+begin_src emacs-lisp
(advice-add 'forge-visit-this-topic :before #'forge-extras-browse-topic-in-background)
#+end_src

- The key bindings had become quite chaotic, so I switched to the following convention: we retain all the native key bindings, and use the Super modifier for all our custom bindings:

#+begin_src emacs-lisp
"s-a" 'forge-topic-set-assignees
"s-d" 'forge-delete-comment
"s-l" 'forge-topic-set-labels
"s-i" 'forge-browse-issue
"s-I" 'forge-browse-issues
"s-t" 'forge-topic-set-title
"s-e" 'forge-edit-post
"s-p" 'forge-create-post
"s-r" 'forge-create-post ; (= reply)
"s-x" 'forge-extras-state-set-dwim ; close/reopen issue
#+end_src

These commands should work in all Forge-related buffers.

** gptel

- I have configured this package to activate the Gemini backend in text-related modes (including =bibtex-mode=) and the GPT-4 backend in programming-related modes. GPT-4 is much better for answering programming questions (at least questions about Emacs Lisp), but Gemini has a much higher token limit and is free. So we use it for tasks like generating summaries (and the quality for these taks is comparable to that of GPT-4).
- I have also added a third backend, Claude (from Anthropic), though I haven’t yet experimented with it.
- The command =gptel-extras-model-config=, bound to =H-s-c=, can be used to switch to a different backend. This command will also prompt the user to select among a variety of "models" within a given backend. Note that some backends are much more expensive than others (as in =10x more expensive). See these pages for details:
    - [[https://www.anthropic.com/api#pricing][Claude]]
    - [[https://openai.com/pricing][GPT-4]]
- The main other relevant commands are =gptel= (=H-s-g=), =gptel= (=H-s-g=), =gptel-abort= (=H-s-a=) and =gptel-send= (=M-c=). See [[https://www.youtube.com/watch?v=bsRnh_brggM][this great video]] for details. 

** isearch

- The commands =isearch-extras-consult-line= (=C-l=) and =isearch-extras-project-search= (=C-p=) have been added.
- =avy-isearch= is now bound to =M-f= (=avy= and =ace-link= commands are generally bound to =M-f= or—in read-only files—to =f=).

** org

- =ox-clip-formatted-copy= (=s-c=) had stopped working, but is now fixed. With this command, you can copy text in =org-mode= and paste it as Markdown (e.g. on GitHub) or as rendered HTML (e.g. on Slack).

** tab-bar

- A command now exists to hide (and unhide) GitHub and Telega notifications: =tab-bar-extras-toggle-notifications=. Notifications are now also automatically hidden and unhidden when a Pomodoro session starts and ends.

** vertico

- The commands =vertico-previous-group= and =vertico-next-group= are bound to =C-k= and =C-l=.

* Version 6.1.0 on 2024-02-19

** activity-watch

- The package was until now disabled after we detected a bug that interfered with =recover-this-file=. This bug was fixed recently in a fix branch, so it is enabled again.

** bibtex

- Set =bibtex-field-indentation= to 8, which is (I believe) the default value in =ebib=. This should avoid the situation where the indentation of the same BibTeX entry changes with subsequent commits.

** bibtex-extras

- Added functionality to validate languages in =landid= field.
- Added various functions to get BibTeX fields, entries as strings.

** consult

=s-j= is now globally bound to =consult-imenu=. Previously, we used =s-j= in specific major modes (like =org-mode=) to bind to it commands with the relevant functionality (such as =consult-org-heading=) . These bindings are preserved, but when no local binding is set, =s-j= now triggers =consult-imenu= as a fallback.

** consult-yasnippet

- Disabled previews to avoid accidentally triggering snippets that execute elisp code.

** ebib-extras

- Added =ebib-extras-previous-entry= and =ebib-extras-next-entry=, bound to =,= and =.=, respectively.
- Revised or refactor various functions.
- Significantly revised =ebib-extras-fetch-and-set-abstract= , and created the associated =ebib-extracts-abstract-cleanup=.

** edebug

- Disabled maddening =#N== and =#N#= print syntax.

** elfeed

- Set a timer to update the database after 30 minutes of idleness. Feel free to disable it.

** forge
- Disabled my custom menu (aka “dispatcher”), restoring the forge native one. The native forge dispatcher has been much improved and I think it is now preferable to what we had before.
- Unset custom =s= key bindings, bound to =forge-search=. js

** graveyard

The following packages now rest in peace:

- =company=
- =org-mime=

See also the packages listed in the ‘icons’ section below.

** helpful

- Unset custom =C-k= key binding, bound to =helpful-key=. The command is now bound to the default binding for =help-key=, =C-h k=.

** icons

Removed =all-the-icons=, =all-the-icons-completion=, =all-the-icons-dired= and replaced them with =nerd-icons=, =nerd-icons-completion=, =nerd-icons-dired=.

NB: you need to install these icons for the package to work correctly. In macOS, run

#+begin_src shell
brew tap homebrew/cask-fonts && brew install --cask font-symbols-only-nerd-font
#+end_src

=font-symbols-only-nerd-font= installs the nerd icon font that is guaranteed to display the icons correctly. If you don’t want to install a new font, you may try to configure the package to use your installed nerd icon font, though this is not guaranteed to work:

#+begin_src emacs-lisp
(setq nerd-icons-font-family <your font>)
#+end_src

Because =nerd-icons= do not impose additional performance costs, they are now always shown in Dired, irrespective of directory size, whereas before they were shown only in directories containing fewer than a certain number of files.

** org-extras

- Changed the =org-extras-tlon-dispatch= binding from =H-;= to =H-l=.

** org-roam

- Set a timer to update the database after 30 minutes of idleness. I recommend not changing this unless you really need to.

** vertico

The keys =M-k= and =M-l= are now bound to =vertico-previous-group= and =vertico-next-group=, respectively. These commands let you cycle between different sections of the completion candidates in the minibuffer. For example, in =consult-buffer= (=H-b=), you can cycle between the “Buffer”, “File”, and “Bookmark” sections.

** Yasnippet

- Created snippets to reference a commit (=tlon-reference-commit=) and an issue (=tlon-reference-issue=) from a Forge buffer. These snippets are expanded with =trc= and =tri=,  respectively.

  
# Local Variables:
# org-extras-id-auto-add-exclude-file: t
# End:
