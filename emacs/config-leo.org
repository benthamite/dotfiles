#+title: Leo's config

* code overrides
:PROPERTIES:
:ID:       00D1B922-0C84-428F-9F74-DE9F115BB461
:END:

#+begin_src emacs-lisp :tangle (print ps/code-overrides-path)
(
 (:ps/org-id-add-ids-to-headings-in-file . '((ignore)))
 )
#+end_src

* post init
:PROPERTIES:
:ID:       B91A3DC8-57C3-4BC1-AA73-16C3E1816C07
:END:

#+begin_src emacs-lisp :tangle (print ps/post-init-path)
(when (eq system-type 'darwin) ;; mac specific settings
  (setq mac-right-option-modifier 'meta)
  (setq mac-command-modifier 'hyper)
  (setq mac-option-modifier 'alt)
  (setq mac-right-command-modifier 'super)
  (tool-bar-mode -1)
  (global-set-key [kp-delete] 'delete-char)   ;; sets fn-delete to be right-delete
  (global-set-key (kbd "<home>") 'beginning-of-line)
  (global-set-key (kbd "<end>") 'end-of-line)
  (global-set-key (kbd "<S-right>") 'other-window)
  (global-set-key (kbd "<A-right>") 'end-of-buffer)
  (global-set-key (kbd "<A-left>") 'beginning-of-buffer)
  (with-eval-after-load "org"
    (define-key org-mode-map (kbd "<M-right>") nil)
    (define-key org-mode-map (kbd "<M-left>") nil)
    (define-key org-mode-map (kbd "<M-up>") nil)
    (define-key org-mode-map (kbd "<M-down>") nil)
    (define-key org-mode-map (kbd "<M-S-right>") nil)
    (define-key org-mode-map (kbd "<M-S-left>") nil)
    (define-key org-mode-map (kbd "<M-S-up>") nil)
    (define-key org-mode-map (kbd "<M-S-down>") nil)
    (global-set-key (kbd "<H-right>") 'org-metaright)
    (global-set-key (kbd "<H-left>") 'org-metaleft)
    (global-set-key (kbd "<H-up>") 'org-metaup)
    (global-set-key (kbd "<H-down>") 'org-metadown)
    (global-set-key (kbd "<M-right>") 'forward-word)
    (global-set-key (kbd "<M-left>") 'backward-word)
    ))
(defvar ps/file-cookies (file-name-concat ps/dir-downloads "cookies.txt"))
(defun ps/internet-archive-download-ACSM ()
  "Download and open ACSM file from Internet Archive URL in kill
ring.

NB: You need to have previously borrowed the book for the command
to work. The command will work even if the book was borrowed for
one hour only."
  (interactive)
  (if (string-search "archive.org" (current-kill 0))
      (progn
	(let* ((prefix "https://archive.org/services/loans/loan/?action=media_url&identifier=")
	       (suffix "&format=pdf&redirect=1")
	       (id (replace-regexp-in-string
		    "\\(http.*?details/\\)\\([_[:alnum:]]*\\)\\(.*\\)"
		    "\\2"
		    (current-kill 0)))
	       (url (concat prefix id suffix))
	       (acsm-file (file-name-concat ps/dir-downloads "book.acsm")))
	  ;; Download the Internet Archive cookies to a file so `wget' can authenticate:
	  ;; askubuntu.com/questions/161778/how-do-i-use-wget-curl-to-download-from-a-site-i-am-logged-into
	  ;; Then replace the path below with the location of the downloaded cookies file.
	  (save-window-excursion
	    (let ((shell-command-buffer-name-async "*internet-archive-download-ACSM*"))
	      (async-shell-command
	       (format
		"wget --load-cookies='%s' '%s' -O '%s'"
		ps/file-cookies url acsm-file))
	      ;; (sleep-for 2)
	      ;; (async-shell-command
	      ;; (format
	      ;; "open %s"
	      ;; "/users/cartago/downloads/book.acsm"))
	      ))
	  (dired ps/dir-downloads)
	  ))
    (user-error "You forgot to copy the URL!")))

(setq telega-server-libs-prefix "/Users/cartago/source/td/tdlib")
(setq mac-function-modifier '(:button 2))

;; If Emacs doesn't find an ID, run `M-x org-id-update-id-locations'
(setq org-capture-templates
      `(("b" "Tlön: BAE" entry
	 (id "49adbb3e-b542-4752-a67b-16bc2eb44624")
	 "** TODO %?\n" :empty-lines 1 :prepend t)
	("r" "Tlön: RAE" entry
	 (id "604dbb4c-4948-492e-b1cd-84b0a1451b4a")
	 "** TODO %?\n" :empty-lines 1 :prepend t)
	("f" "Tlön: FM" entry
	 (id "5d94a97f-701f-4d0d-94ad-ff1b88bf0e82")
	 "** TODO %?\n" :empty-lines 1 :prepend t)
	("d" "Tlön: LBDLH" entry
	 (id "0d6d7ebb-bb51-4505-9a29-68b79f8c12de")
	 "** TODO %?\n" :empty-lines 1 :prepend t)
	("u" "Tlön: EAN" entry
	 (id "8b9c313a-3630-4b77-b924-a8f7f9e52d8d")
	 "** TODO %?\n" :empty-lines 1 :prepend t)
	("h" "Tlön: HEAR" entry
	 (id "f3f14f2f-2b74-4ea7-a84f-4d9aae458201")
	 "** TODO %?\n" :empty-lines 1 :prepend t)
	("g" "Tlön: GPE" entry
	 (id "e9b7041f-8721-495f-b5f7-97ad83ae061c")
	 "** TODO %?\n" :empty-lines 1 :prepend t)
	("c" "Tlön: Core" entry
	 (id "68f0150e-9b0d-4bab-86c0-2bf878e19d9e")
	 "** TODO %?\n" :empty-lines 1 :prepend t)
	("s" "To sort" entry
	 (id "107D27EC-B193-444E-B65B-9B1AD2A7CC65")
	 "** TODO %?\n" :empty-lines 1 :prepend t)
	("m" "Tlön: Core: messaging" entry
	 (id "9387B56D-2940-4FB0-91EF-92879D58659E")
	 "** TODO %?\n" :empty-lines 1 :prepend t)
	("e" "Tlön: Core: debugging Emacs" entry
	 (id "8402F53C-F547-4705-B79E-24D6286D2C9E")
	 "** TODO %?\n" :empty-lines 1 :prepend t)
	("t" "Tlön: Core: Project t" entry
	 (id "12645897-A06F-44DD-876D-0FFC47D0E742")
	 "** TODO %?\n" :empty-lines 1 :prepend t)
	))

(defhydra hydra-org-work
  (:hint nil
	 :idle 0
	 :color blue)
  "Tlön dashboard"
  ("b" (org-id-goto "49adbb3e-b542-4752-a67b-16bc2eb44624") "BAE")
  ("r" (org-id-goto "604dbb4c-4948-492e-b1cd-84b0a1451b4a") "RAE")
  ("f" (org-id-goto "5d94a97f-701f-4d0d-94ad-ff1b88bf0e82") "FM")
  ("d" (org-id-goto "0d6d7ebb-bb51-4505-9a29-68b79f8c12de") "LBDLHD")
  ("u" (org-id-goto "8b9c313a-3630-4b77-b924-a8f7f9e52d8d") "EAN")
  ("h" (org-id-goto "f3f14f2f-2b74-4ea7-a84f-4d9aae458201") "HEAR")
  ("g" (org-id-goto "e9b7041f-8721-495f-b5f7-97ad83ae061c") "GPE")
  ("c" (org-id-goto "68f0150e-9b0d-4bab-86c0-2bf878e19d9e") "Core")
  ("s" (org-id-goto "107D27EC-B193-444E-B65B-9B1AD2A7CC65") "To sort")
  ("m" (org-id-goto "9387B56D-2940-4FB0-91EF-92879D58659E") "Messaging")
  ("e" (org-id-goto "8402F53C-F547-4705-B79E-24D6286D2C9E") "debugging Emacs")
  ("t" (org-id-goto "12645897-A06F-44DD-876D-0FFC47D0E742") "Project t")
  )


(global-set-key (kbd "H-;") 'hydra-org-work/body)
(put 'scroll-left 'disabled nil)


(setq telega-server-libs-prefix "/Users/cartago/source/td/tdlib")

(ps/modus-themes-load-theme-conditionally)

(setq warning-minimum-level :error)
#+end_src

* tangle flags
:PROPERTIES:
:ID:       A4E7C5AD-1E55-4C6F-B0E5-8320D282A886
:END:

#+begin_src emacs-lisp :tangle (print ps/tangle-flags-path)
(
 (:ps/anki-editor . nil)
 (:ps/copilot . nil)
 (:ps/corfu-terminal . nil)
 (:ps/corfu-doc-terminal . nil)
 (:ps/erc . nil)
 (:ps/espotify . nil)
 (:ps/hammy . nil)
 (:ps/keytar . nil)
 (:ps/lsp-grammarly . nil)
 (:ps/midnight . nil)
 (:ps/mu4e . nil)
 (:ps/org-gcal . nil)
 (:ps/org-roam . nil)
 (:ps/org2blog . nil)
 (:ps/orgmdb . nil)
 (:ps/remember . nil)
 (:ps/slack . nil)
 (:ps/twittering-mode . t)
 (:ps/vulpea . nil)
 )
#+end_src

* variables override                                                  :crypt:
:PROPERTIES:
:ID:       5874D537-67FB-4785-BC63-5A753973686D
:END:

-----BEGIN PGP MESSAGE-----

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
nugcqWDtjU6UfFTRgUImOgcql0XrBRtR9A==
=DHAH
-----END PGP MESSAGE-----

* local variables
:PROPERTIES:
:ID:       A2D504A7-9FA4-41C8-9DE4-3F0F36162C0C
:END:
# Local Variables:
# eval: (ps/buffer-local-set-key (kbd "s-y") 'org-decrypt-entry)
# org-crypt-key: "tlon.shared@gmail.com"
# End:
