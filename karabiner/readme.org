#+PROPERTY: header-args :tangle (print ps/file-karabiner-edn)
#+TITLE:Pablo's Karabiner config
#+AUTHOR: Pablo Stafforini <pablo@stafforini.com>
#+filetags: :project:
:PROPERTIES:
:TOC:      ignore
:ARCH:      ignore
:END:

* Introduction
:PROPERTIES:
:ID:       F8A496BC-A40E-4362-B36B-9B7941844ACC
:END:
:LOGBOOK:
CLOCK: [2022-07-01 Fri 11:06]--[2022-07-01 Fri 11:24] =>  0:18
CLOCK: [2021-02-28 Sun 19:56]--[2021-02-28 Sun 20:00] =>  0:04
:END:
** Table of contents
:PROPERTIES:
:TOC:      :include all :depth 4 :force (nothing) :ignore (nothing) :local (nothing)
:ID:       8810B51F-81BB-4AB9-A525-C39EBE079BD3
:END:
:CONTENTS:
- [[#introduction][Introduction]]
  - [[#table-of-contents][Table of contents]]
  - [[#useful-links][Useful links]]
  - [[#moonlander-key-layout][moonlander key layout]]
  - [[#key-associations][Key associations]]
  - [[#list-of-keys][List of keys]]
  - [[#letter-frequencies][Letter frequencies]]
- [[#profiles][Profiles]]
  - [[#alone][alone]]
  - [[#held][held]]
  - [[#delay][delay]]
  - [[#sim][sim]]
  - [[#simlayer-threshold][simlayer threshold]]
- [[#applications][Applications]]
- [[#devices][Devices]]
- [[#layers][Layers]]
  - [[#ask-how-to-apply-modifiers-to-simlayers][Ask how to apply modifiers to simlayers]]
  - [[#archive][Archive]]
    - [[#find-way-to-eliminate-accidental-triggers][Find way to eliminate accidental triggers]]
- [[#templates][Templates]]
- [[#main][Main]]
  - [[#individual-bindings][individual bindings]]
    - [[#shared][shared]]
    - [[#internal-keyboard][internal keyboard]]
    - [[#moonlander][moonlander]]
    - [[#misc][misc]]
  - [[#active-layers][active layers]]
    - [[#j-mode][j-mode]]
    - [[#cj-mode][Cj-mode]]
    - [[#csj-mode][CSj-mode]]
    - [[#l-mode][l-mode]]
    - [[#p-mode][p-mode]]
    - [[#q-mode][q-mode]]
    - [[#x-mode][x-mode]]
    - [[#z-mode][z-mode]]
    - [[#comma-mode][comma-mode]]
    - [[#period-mode][period-mode]]
    - [[#quote-mode][quote-mode]]
    - [[#semicolon-mode][semicolon-mode]]
    - [[#csemicolon-mode][Csemicolon-mode]]
    - [[#osemicolon-mode][Osemicolon-mode]]
    - [[#slash-mode][slash-mode]]
    - [[#end][end]]
  - [[#inactive-layers][inactive layers]]
    - [[#k-mode][k-mode]]
    - [[#b-mode][b-mode]]
    - [[#-mode][?-mode]]
    - [[#enter--space-pseudo-mode][enter + space pseudo-mode]]
    - [[#zx-chord][zx-chord]]
:END:

** Useful links
:PROPERTIES:
:ID:       1AAF1939-3FD7-477B-B56F-6BDCD2BB01B1
:END:
- [[https://www.twitch.tv/videos/723328200][johnlindquist - Twitch]] Goku tutorial.
- [[https://blog.jkl.gg/hacking-your-keyboard/][Hacking your keyboard with Karabiner]]
- [[https://medium.com/@nikitavoloboev/karabiner-god-mode-7407a5ddc8f6][Karabiner God Mode]]
- [[https://wiki.nikitavoloboev.xyz/macos/macos-apps/karabiner][Nikita Voloboek's master list of Karabiner links]]
- [[https://github.com/nikitavoloboev/dotfiles/blob/master/karabiner/karabiner.edn][Nikita Voloboek's Karabiner configuration file]]
- [[https://github.com/johnlindquist/dotfiles/blob/master/karabiner/karabiner.edn][John Lindquist configuration file]]
- [[https://karabiner-elements.pqrs.org/docs/json/][Karabiner configuration reference manual]]
- [[https://github.com/narze/dotfiles/blob/master/etc/karabiner.edn][dotfiles/karabiner.edn at master · narze/dotfiles]]
- [[https://www.swyx.io/karabiner_lindquist/][Putting your Keyboard on Steroids with Karabiner Elements]]
- [[https://github.com/search?l=&q=filename%3Akarabiner.edn&type=Code][karabiner.edn files on Github]]
- [[https://github.com/kiinoda/goku][GitHub - kiinoda/goku: Goku config to map Mac keyboard to Colemak, w/ extended layer, mod-wide and single-press modifiers as power keys]]
- [[https://blog.jkl.gg/hacking-your-keyboard/][Hacking your keyboard with karabiner | Kaushik Gopal’s blog]]

** moonlander key layout
:PROPERTIES:
:ID:       AF1A3C4B-E237-41B4-BFD8-0BC0C0200D9A
:END:

#+attr_org: :width 1000px
[[file:moonlander.png]]

** Key associations
:PROPERTIES:
:ID:       B12E6A52-5176-4484-B44B-137310DCFB6C
:END:
:LOGBOOK:
CLOCK: [2021-06-07 Mon 20:38]--[2021-06-07 Mon 21:52] =>  1:14
:END:

|   |                                              |
|---+----------------------------------------------|
| C | left_command                                 |
| T | left_control                                 |
| O | left_option                                  |
| S | left_shift                                   |
| F | fn                                           |
| Q | right_command                                |
| W | right_control                                |
| E | right_option                                 |
| R | right_shift                                  |
| P | caps_lock                                    |
| ! | command + control + optional + shift (hyper) |
|   |                                              |

| physical key        | k-alone         | e-alone         | karabiner | Emacs     | Emacs function              |
|---------------------+-----------------+-----------------+-----------+-----------+-----------------------------|
| [[id:7A4C371E-862F-4F1D-80D9-4E33869AEDE7][equal_sign]]          | =               | =               | SO        | A         |                             |
| [[id:20033DF1-9596-4257-8C3C-8A90BE97B221][caps_lock]]           | escape          | C-g             | O         | M         |                             |
| [[id:CF0E3547-DE12-40CE-8BBB-4347FFEE7401][left_shift]]          | -               | -               | QO        | A-M       |                             |
| [[id:E5FED8CC-8FA4-4964-87EF-4801A2B91848][left_control]]        | Ctab            |                 | QC        | A-H       |                             |
| [[id:CC3880F6-F71B-492D-8F0E-585ADB552004][delete_or_backspace]] | return_or_enter | return_or_enter | C         | H         |                             |
| delete_forward      | TC0             | C-H-0           | S         | S         |                             |
| [[id:D9295C31-3375-4F78-974C-9EDDEFA6E8A3][tab]]                 | tab             | tab             | T         | C         |                             |
| [[id:30827877-0622-4450-A217-56C7A05CC20F][right_control]]       | f18             | f18             | QT        | A-C       |                             |
| [[id:18FD5116-6D73-4B5D-9379-A0DD1D01970F][right_shift]]         | –               | –               | QW        | A-s       | major mode                  |
| [[id:D14C4590-0118-47A1-8095-E7A18EC694C0][quote]]               | '               | '               | [TBD]     | s         | major mode                  |
| [[id:18AA9398-C7DA-4FA2-BC6A-E8C0382D75C5][backslash]]           | \               | [diacritic]     | [TBD]     | H-s       | diacritics                  |
| [[id:4E6E7538-0296-485F-BFB0-DF1316DC32E2][comma]]               |                 |                 | QCO       | A-H-M     | transposition               |
| [[id:6D08B8C7-EE4C-42E0-928D-6ED3F05B7005][period]]              |                 |                 | QCT       | A-H-C     | delete/copy whole element   |
| [[id:87BE8B2A-1F3C-48C7-99D9-36A6D00F7399][slash]]               |                 |                 | COW       | H-M-s     | files/buffers               |
| [[id:0901DE3D-511F-4547-ACCD-3AAD9703DAAD][j]]                   |                 |                 | QTC       | A-C-H     | deletion                    |
| [[id:C1FE60BD-9863-4E45-93F7-3E23DC589DDA][l]]                   |                 |                 | TCOW      | C-H-M-s   | org movement/manipulation   |
| [[id:8C32B75E-1455-444F-B5F6-83DC8263D558][p]]                   |                 |                 | TOW       | C-M-s     | media/mouse control         |
| [[id:A670C98B-FCD0-4B4C-A3D9-C0DB143209AE][x]]                   |                 |                 | TCW       | C-H-s     | avy                         |
| [[id:303127EC-3362-408C-9A3B-45C2A108D994][z]]                   |                 |                 | QTW       | A-C-s     | movement                    |
| [[id:5BA69509-7C1B-4DD6-A54D-112902320CCB][semicolon]]           | ;               | ;               |           |           | special characters          |
|                     |                 |                 | QCOW      | A-H-M-s   | resvd. for misc. remappings |
|---------------------+-----------------+-----------------+-----------+-----------+-----------------------------|
|                     |                 |                 | TO        | C-M       |                             |
|                     |                 |                 | TW        | C-s       |                             |
|                     |                 |                 | CO        | H-M       |                             |
| [[id:7898DDC0-CE2C-45A7-A418-A75CEFA743AC][Cj]]                  |                 |                 | TCOWQ     | A-C-H-M-s | copy                        |
|                     |                 |                 | TCO       | C-H-M     |                             |
|                     |                 |                 | COW       | H-M-s     |                             |
| [[id:DAEB0BD5-535B-42E1-9170-C1039B8EC794][CSj]]                 |                 |                 | QTCO      | A-C-H-M   | delete                      |
|                     |                 |                 | WTQO      | A-C-M-s   |                             |
|                     |                 |                 | QTCW      | A-C-H-s   |                             |
|                     |                 |                 |           |           |                             |

** List of keys
:PROPERTIES:
:ID:       9E6D443F-89E5-4F9B-94B8-437C3FFA676A
:END:
[[https://github.com/pqrs-org/Karabiner-Elements/issues/925#issuecomment-323984568][Source]]

- category: Modifier keys
- name: caps_lock
- name: left_control
- name: left_shift
- name: left_option
- name: left_command
- name: right_control
- name: right_shift
- name: right_option
- name: right_command
- name: fn
- category: Controls and symbols
- name: return_or_enter
- name: escape
- name: delete_or_backspace
- name: delete_forward
- name: tab
- name: spacebar
- name: hyphen
  label: hyphen (-)
- name: equal_sign
  label: equal_sign (=)
- name: open_bracket
  label: open_bracket [
- name: close_bracket
  label: close_bracket ]
- name: backslash
  label: backslash (\)
- name: non_us_pound
- name: semicolon
  label: semicolon (;)
- name: quote
  label: quote (')
- name: grave_accent_and_tilde
  label: grave_accent_and_tilde ()
- name: comma
  label: comma (,)
- name: period
  label: period (.)
- name: slash
  label: slash (/)
- name: non_us_backslash
- category: Arrow keys
- name: up_arrow
- name: down_arrow
- name: left_arrow
- name: right_arrow
- name: page_up
- name: page_down
- name: home
- name: end
- category: Letter keys
- name: a
- name: b
- name: c
- name: d
- name: e
- name: f
- name: g
- name: h
- name: i
- name: j
- name: k
- name: l
- name: m
- name: n
- name: o
- name: p
- name: q
- name: r
- name: s
- name: t
- name: u
- name: v
- name: w
- name: x
- name: y
- name: z
- category: Number keys
- name: '1'
- name: '2'
- name: '3'
- name: '4'
- name: '5'
- name: '6'
- name: '7'
- name: '8'
- name: '9'
- name: '0'
- category: Function keys
- name: f1
- name: f2
- name: f3
- name: f4
- name: f5
- name: f6
- name: f7
- name: f8
- name: f9
- name: f10
- name: f11
- name: f12
- name: f13
- name: f14
- name: f15
- name: f16
- name: f17
- name: f18
- name: f19
- name: f20
- name: f21
  not_to: true
- name: f22
  not_to: true
- name: f23
  not_to: true
- name: f24
  not_to: true
- category: Media controls
- name: display_brightness_decrement
  not_from: true
- name: display_brightness_increment
  not_from: true
- name: mission_control
  not_from: true
- name: launchpad
  not_from: true
- name: dashboard
  not_from: true
- name: illumination_decrement
  not_from: true
- name: illumination_increment
  not_from: true
- name: rewind
  not_from: true
- name: play_or_pause
  not_from: true
- name: fastforward
  not_from: true
- name: mute
- name: volume_decrement
- name: volume_increment
- name: eject
  not_from: true
- name: apple_display_brightness_decrement
  not_from: true
- name: apple_display_brightness_increment
  not_from: true
- name: apple_top_case_display_brightness_decrement
  not_from: true
- name: apple_top_case_display_brightness_increment
  not_from: true
- category: Keypad keys
- name: keypad_num_lock
- name: keypad_slash
- name: keypad_asterisk
- name: keypad_hyphen
- name: keypad_plus
- name: keypad_enter
- name: keypad_1
- name: keypad_2
- name: keypad_3
- name: keypad_4
- name: keypad_5
- name: keypad_6
- name: keypad_7
- name: keypad_8
- name: keypad_9
- name: keypad_0
- name: keypad_period
- name: keypad_equal_sign
- name: keypad_comma
- category: Virtual Keys
- name: vk_none
  label: vk_none (disable this key)
  not_from: true
- category: Keys in pc keyboards
- name: print_screen
- name: scroll_lock
- name: pause
- name: insert
- name: application
- name: help
- name: power
- name: execute
  not_to: true
- name: menu
  not_to: true
- name: select
  not_to: true
- name: stop
  not_to: true
- name: again
  not_to: true
- name: undo
  not_to: true
- name: cut
  not_to: true
- name: copy
  not_to: true
- name: paste
  not_to: true
- name: find
  not_to: true
- category: International keys
- name: international1
- name: international2
  not_to: true
- name: international3
- name: international4
  not_to: true
- name: international5
  not_to: true
- name: international6
  not_to: true
- name: international7
  not_to: true
- name: international8
  not_to: true
- name: international9
  not_to: true
- name: lang1
- name: lang2
- name: lang3
  not_to: true
- name: lang4
  not_to: true
- name: lang5
  not_to: true
- name: lang6
  not_to: true
- name: lang7
  not_to: true
- name: lang8
  not_to: true
- name: lang9
  not_to: true
- category: Japanese
- name: japanese_eisuu
  label: 英数キー
- name: japanese_kana
  label: かなキー
- name: japanese_pc_nfer
  label: PCキーボードの無変換キー
  not_to: true
- name: japanese_pc_xfer
  label: PCキーボードの変換キー
  not_to: true
- name: japanese_pc_katakana
  label: PCキーボードのかなキー
  not_to: true
- category: Others
- name: keypad_equal_sign_as400
  not_to: true
- name: locking_caps_lock
  not_to: true
- name: locking_num_lock
  not_to: true
- name: locking_scroll_lock
  not_to: true
- name: alternate_erase
  not_to: true
- name: sys_req_or_attention
  not_to: true
- name: cancel
  not_to: true
- name: clear
  not_to: true
- name: prior
  not_to: true
- name: return
  label: rarely used return (HID usage 0x9e)
  not_to: true
- name: separator
  not_to: true
- name: out
  not_to: true
- name: oper
  not_to: true
- name: clear_or_again
  not_to: true
- name: cr_sel_or_props
  not_to: true
- name: ex_sel
  not_to: true
- name: left_alt
  label: left_alt (equal toleft_option)
- name: left_gui
  label: left_gui (equal toleft_command)
- name: right_alt
  label: right_alt (equal toright_option)
- name: right_gui
  label: right_gui (equal toright_command)
- name: vk_consumer_brightness_down
  label: vk_consumer_brightness_down (equal todisplay_brightness_decrement)
  not_from: true
- name: vk_consumer_brightness_up
  label: vk_consumer_brightness_up (equal todisplay_brightness_increment)
  not_from: true
- name: vk_mission_control
  label: vk_mission_control (equal tomission_control)
  not_from: true
- name: vk_launchpad
  label: vk_launchpad (equal tolaunchpad)
  not_from: true
- name: vk_dashboard
  label: vk_dashboard (equal todashboard)
  not_from: true
- name: vk_consumer_illumination_down
  label: vk_consumer_illumination_down (equal toillumination_decrement)
  not_from: true
- name: vk_consumer_illumination_up
  label: vk_consumer_illumination_up (equal toillumination_increment)
  not_from: true
- name: vk_consumer_previous
  label: vk_consumer_previous (equal torewind)
  not_from: true
- name: vk_consumer_play
  label: vk_consumer_play (equal toplay)
  not_from: true
- name: vk_consumer_next
  label: vk_consumer_next (equal tofastforward)
  not_from: true
- name: volume_down
  label: volume_down (equal tovolume_decrement)
- name: volume_up
  label: volume_up (equal tovolume_increment`)
  
** Letter frequencies
:PROPERTIES:
:ID:       0EAAC3EF-7D66-4CF5-ABF0-D561430D7B98
:END:
:LOGBOOK:
CLOCK: [2021-07-16 Fri 15:50]--[2021-07-16 Fri 16:52] =>  1:02
:END:

Source: [[https://en.wikipedia.org/wiki/Letter_frequency][Wikipedia]]

| letter |    freq | normalized | used |
|--------+---------+------------+------|
| E      | 0.13000 |         1. |      |
| T      | 0.09100 |  1.4285714 |      |
| A      | 0.08200 |  1.5853659 |      |
| O      | 0.07500 |  1.7333333 |      |
| I      | 0.07000 |  1.8571429 |      |
| N      | 0.06700 |  1.9402985 |      |
| S      | 0.06300 |  2.0634921 |      |
| H      | 0.06100 |  2.1311475 |      |
| R      | 0.06000 |  2.1666667 |      |
| D      | 0.04300 |  3.0232558 |      |
| L      | 0.04000 |       3.25 |      |
| C      | 0.02800 |  4.6428571 |      |
| U      | 0.02800 |  4.6428571 |      |
| M      | 0.02400 |  5.4166667 |      |
| W      | 0.02400 |  5.4166667 |      |
| F      | 0.02200 |  5.9090909 |      |
| G      | 0.02000 |        6.5 |      |
| Y      | 0.02000 |        6.5 |      |
| [[id:8C32B75E-1455-444F-B5F6-83DC8263D558][P]]      | 0.01900 |  6.8421053 | t    |
| B      | 0.01500 |  8.6666667 |      |
| V      | 0.00980 |  13.265306 |      |
| K      | 0.00770 |  16.883117 |      |
| [[id:0901DE3D-511F-4547-ACCD-3AAD9703DAAD][J]]      | 0.00150 |  86.666667 | t    |
| [[id:A670C98B-FCD0-4B4C-A3D9-C0DB143209AE][X]]      | 0.00150 |  86.666667 | t    |
| Q      | 0.00095 |  136.84211 | t    |
| Z      | 0.00074 |  175.67568 | t    |
#+TBLFM: $3=@2$2/$2

* Profiles
:PROPERTIES:
:ID:       B42AA5C9-7EB9-415A-ACFE-BBB532055EFE
:END:
:LOGBOOK:
CLOCK: [2021-07-21 Wed 11:07]--[2021-07-21 Wed 11:30] =>  0:23
CLOCK: [2021-03-19 Fri 19:11]--[2021-03-19 Fri 20:01] =>  0:50
CLOCK: [2021-03-19 Fri 13:13]--[2021-03-19 Fri 13:17] =>  0:04
CLOCK: [2021-03-19 Fri 12:47]--[2021-03-19 Fri 13:10] =>  0:23
:END:

It seems that there is no way to set the relevant delay for a simlayer, so the only alternative is to recreate the ~spacebar~ simlayer functionality as a series of individual modifications. Then the delay would, I believe, be controlled by the ~sim~ variable (since ~spacebar~ + each of the keys it currently modifies in the simlayer would be considered simultaneous key presses).

#+begin_src clojure
{
:profiles {
           :Default {:default true
#+end_src

** alone
:PROPERTIES:
:ID:       79309E80-010E-4979-871B-250DC69E83F6
:END:
:LOGBOOK:
CLOCK: [2021-03-19 Fri 20:35]--[2021-03-19 Fri 21:45] =>  1:10
:END:
[[https://karabiner-elements.pqrs.org/docs/json/complex-modifications-manipulator-definition/to-if-alone/][alone]] (~to_if_alone_timeout_miliseconds~): if a key is held for at least this long, it will not trigger its alone mapping when released.

Example:

#+begin_src clojure :tangle no
{:des "caps -> escape (alone) left_option (held)"
 :rules [
         [:##caps_lock :left_option nil {:alone :escape}]
         ]}
#+end_src

If ~caps_lock~ is held for at least 100 miliseconds, it will not trigger ~escape~.

#+begin_src clojure
:alone   200
#+end_src

** held
:PROPERTIES:
:ID:       91903AB1-3031-492E-A0E1-7896F0AB783D
:END:
[[https://karabiner-elements.pqrs.org/docs/json/complex-modifications-manipulator-definition/to-if-held-down/][held]] (~to_if_held_down_threshold_miliseconds~): if a key is held for at least this long, it will trigger its held mapping.

#+begin_src clojure
:held    350
#+end_src

** delay
:PROPERTIES:
:ID:       F77B2B06-ECE4-4B51-842E-AFF8A23AC6AD
:END:

[[https://karabiner-elements.pqrs.org/docs/json/complex-modifications-manipulator-definition/to-delayed-action/][delay]] (~to_delayed_action_delay_miliseconds~): For rules defining some behavior when a succession of two keys is pressed, the second key will trigger the behavior if pressed within this many miliseconds after the first key. I haven't defined any such rules, so the value below has no effect on my configuration.

#+begin_src clojure
:delay   300
#+end_src

** sim
:PROPERTIES:
:ID:       2385C6F9-C9AD-4613-B9C0-E67C4D99CF2F
:END:
:LOGBOOK:
CLOCK: [2021-07-16 Fri 21:54]--[2021-07-16 Fri 22:04] =>  0:10
:END:

[[https://karabiner-elements.pqrs.org/docs/json/complex-modifications-manipulator-definition/from/simultaneous/][sim]] (~simultaneous_threshold_miliseconds~): keys need to be pressed within these many miliseconds to be considered simultaneous. This doesn't apply to modifier keys, but to "normal" keys (e.g. ~q~ + ~k~ to launch karabiner).

#+begin_src clojure
:sim   200
#+end_src
** simlayer threshold
:PROPERTIES:
:ID:       4A9E508A-75F3-4D99-9C55-D40C51F51702
:END:

#+begin_src clojure
:simlayer-threshold 250}} ; default
#+end_src

* Applications
:PROPERTIES:
:ID:       55F2D50D-3B4B-4AF9-A800-E2E4A2F22D63
:END:

#+begin_src clojure
:applications {
               :emacs ["org.gnu.Emacs"]
               :chrome ["com.google.Chrome"]
               :anki ["net.ankiweb.dtop"]
               :steam [:paths ".*/Application Support/Steam.*"]
               }
#+end_src

* Devices
:PROPERTIES:
:ID:       EDA2FC19-4435-4077-8AC9-35A8A1199FCB
:END:

#+begin_src clojure
 :devices {
          :moonlander [{:vendor_id 12951 }]
          }
#+end_src

* Layers
:PROPERTIES:
:ID:       369A7942-816B-433F-92F7-46EA80BC1CEB
:END:
:LOGBOOK:
CLOCK: [2022-06-07 Tue 14:51]--[2022-06-07 Tue 15:24] =>  0:33
CLOCK: [2021-07-23 Fri 09:42]--[2021-07-23 Fri 10:00] =>  0:18
CLOCK: [2021-07-23 Fri 08:40]--[2021-07-23 Fri 09:27] =>  0:47
CLOCK: [2021-07-14 Wed 12:10]--[2021-07-14 Wed 12:49] =>  0:39
CLOCK: [2021-07-13 Tue 09:00]--[2021-07-13 Tue 09:19] =>  0:19
CLOCK: [2021-06-15 Tue 19:28]--[2021-06-15 Tue 19:40] =>  0:12
CLOCK: [2021-03-20 Sat 21:48]--[2021-03-20 Sat 21:56] =>  0:08
:END:

#+begin_src clojure
:layers {
         :quote-mode {:key :quote :condi :chrome} ; site-specific macros (Chrome)
         }
#+end_src

#+begin_src clojure
:simlayers {
            :launch_mode {:key :f24}
            :j-mode {:key :j} ; killing
            :l-mode {:key :l} ; org headings
            :p-mode {:key :p} ; media/mouse
            :q-mode {:key :q} ; apps
            :x-mode {:key :x} ; avy
            :z-mode {:key :z} ; movement
            :comma-mode {:key :comma} ; transposition
            :period-mode {:key :period} ; buffers
            :semicolon-mode {:key :semicolon} ; numbers and symbols
            :slash-mode {:key :slash} ; files (Emacs) | app-specific macros (outside Emacs)
            }
#+end_src

** TODO [#4] Ask how to apply modifiers to simlayers
:PROPERTIES:
:Effort:   0:30
:ID:       7E78549B-98AF-4287-84A7-E09996BF4810
:END:
** Archive                                                                                                             :ARCHIVE:
:PROPERTIES:
:ID:       08B6968B-6DB5-426F-AB52-79D33972E1D0
:END:
*** DONE Find way to eliminate accidental triggers
CLOSED: [2021-07-16 Fri 21:27]
:PROPERTIES:
:ARCHIVE_TIME: 2021-07-16 Fri 21:27
:ID:       D60985A7-AE5E-4565-B862-7641318071E4
:END:
:STATES:
- Not scheduled, was "[2021-07-16 Fri]" on [2021-07-16 Fri 21:27]
:END:
:LOGBOOK:
CLOCK: [2021-07-16 Fri 20:05]--[2021-07-16 Fri 21:14] =>  1:09
:END:
* Templates
:PROPERTIES:
:ID:       B03B897C-779E-431A-B78A-466935EF011A
:END:
#+begin_src clojure
:templates {:alfred "osascript -e 'tell application \"Alfred 4\" to run trigger \"%s\" in workflow \"%s\" with argument \"%s\"'"
            :km "osascript -e 'tell application \"Keyboard Maestro Engine\" to do script \"%s\"'"
            :open "osascript -e 'tell application \"%s\" to activate'"
            }
#+end_src

* Main
:PROPERTIES:
:ID:       43502060-D6EE-479A-8F1B-080A37DD85C4
:END:
:LOGBOOK:
CLOCK: [2022-05-07 Sat 10:30]--[2022-05-07 Sat 12:00] =>  1:30
CLOCK: [2021-07-25 Sun 13:33]--[2021-07-25 Sun 13:44] =>  0:11
CLOCK: [2021-03-20 Sat 20:47]--[2021-03-20 Sat 20:59] =>  0:12
CLOCK: [2021-02-26 Fri 12:43]--[2021-02-26 Fri 13:02] =>  0:19
:END:

#+begin_src clojure
:main [
#+end_src
 
** individual bindings
:PROPERTIES:
:ID:       BEA53755-930D-4A90-B3AD-18D8E6A1B301
:END:
:LOGBOOK:
CLOCK: [2022-08-04 Thu 22:29]--[2022-08-05 Fri 00:15] =>  1:46
CLOCK: [2022-06-09 Thu 16:12]--[2022-06-09 Thu 16:12] =>  0:00
CLOCK: [2022-05-07 Sat 13:53]--[2022-05-07 Sat 14:18] =>  0:25
CLOCK: [2022-05-06 Fri 22:21]--[2022-05-06 Fri 22:45] =>  0:24
CLOCK: [2021-07-04 Sun 11:26]--[2021-07-04 Sun 11:52] =>  0:26
CLOCK: [2021-07-04 Sun 11:18]--[2021-07-04 Sun 11:23] =>  0:05
CLOCK: [2021-06-15 Tue 18:53]--[2021-06-15 Tue 18:55] =>  0:02
CLOCK: [2021-06-03 Thu 07:50]--[2021-06-03 Thu 08:14] =>  0:24
CLOCK: [2021-02-26 Fri 17:08]--[2021-02-26 Fri 17:34] =>  0:26
CLOCK: [2021-02-26 Fri 10:21]--[2021-02-26 Fri 10:40] =>  0:19
CLOCK: [2021-02-25 Thu 16:23]--[2021-02-25 Thu 17:17] =>  0:54
CLOCK: [2021-02-25 Thu 15:59]--[2021-02-25 Thu 16:19] =>  0:20
CLOCK: [2021-02-09 Tue 17:33]--[2021-02-09 Tue 17:42] =>  0:09
CLOCK: [2021-06-02 Wed 10:15]--[2021-06-02 Wed 10:26] =>  0:11
CLOCK: [2021-03-30 Tue 14:44]--[2021-03-30 Tue 15:00] =>  0:16
CLOCK: [2021-03-22 Mon 18:12]--[2021-03-22 Mon 18:45] =>  0:33
CLOCK: [2021-02-26 Fri 17:37]--[2021-02-26 Fri 17:46] =>  0:09
CLOCK: [2022-03-14 Mon 11:21]--[2022-03-14 Mon 11:37] =>  0:16
CLOCK: [2021-07-25 Sun 16:09]--[2021-07-25 Sun 16:11] =>  0:02
CLOCK: [2021-03-28 Sun 18:47]--[2021-03-28 Sun 19:01] =>  0:14
CLOCK: [2021-03-23 Tue 19:30]--[2021-03-23 Tue 19:38] =>  0:08
:END:

*** shared
:PROPERTIES:
:ID:       39F5EF4F-7354-4E13-833F-D250C4F597A9
:END:

**** caps_lock
:PROPERTIES:
:ID:       20033DF1-9596-4257-8C3C-8A90BE97B221
:END:
#+begin_src clojure
{:des "caps_lock → C-g (alone) | left_option (held)"
 :rules [
         [:##caps_lock :left_option :emacs {:alone :!Tg}]
         ]}
#+end_src

#+begin_src clojure
{:des "outside Emacs, caps → escape (alone) | left_option (held)"
 :rules [
         [:##caps_lock :left_option nil {:alone :escape}]
         ]}
#+end_src

**** left_shift
:PROPERTIES:
:ID:       CF0E3547-DE12-40CE-8BBB-4347FFEE7401
:END:
#+begin_src clojure
{:des "on Emacs, left_shift → right_command (alone) | hyphen (held)"
 :rules [
         [:##left_shift :!Oright_command :emacs {:alone :hyphen}]
         ]}
#+end_src

#+begin_src clojure
{:des "outside Emacs, left_shift → Option + control (alone) | hyphen (held)"
 :rules [
         [:##left_shift :!Oleft_control nil {:alone :hyphen}]
         ]}
#+end_src

**** left_control
:PROPERTIES:
:ID:       E5FED8CC-8FA4-4964-87EF-4801A2B91848
:END:
#+begin_src clojure
{:des "on Emacs, left_control → command + tab (alone) | left_command (held)"
 :rules [
          [:!Ch :!QCOWh :emacs] ; circunvent macOS command + h
          [:!CQh :!QTCWh :emacs] ; circunvent macOS command + option + h
         [:##left_control :!Qleft_command [:!steam :emacs] {:alone :!Ctab}]
         ]}
#+end_src

#+begin_src clojure
{:des "outside Emacs, left_control → command + tab (alone) | left_option + left_command (held)"
 :rules [
         [:##left_control :!Oleft_command [:!steam :!emacs] {:alone :!Ctab}]
         ]}
#+end_src

**** right_shift
:PROPERTIES:
:ID:       18FD5116-6D73-4B5D-9379-A0DD1D01970F
:END:
#+begin_src clojure
{:des "on Emacs, right_shift → en dash (alone) | Super + Alt (held)"
 :rules [
         [:right_shift :!Wright_command :emacs {:alone :!Ehyphen}]
         ]}
#+end_src

#+begin_src clojure
{:des "outside Emacs, right_shift → en dash (alone) | right_option + right_control (held)"
 :rules [
         [:##right_shift :!Wright_option nil {:alone :!Ehyphen}]
         ]}
#+end_src

**** backslash
:PROPERTIES:
:ID:       18AA9398-C7DA-4FA2-BC6A-E8C0382D75C5
:END:
:LOGBOOK:
CLOCK: [2021-07-25 Sun 18:34]--[2021-07-25 Sun 18:46] =>  0:12
CLOCK: [2021-07-25 Sun 17:23]--[2021-07-25 Sun 17:58] =>  0:35
CLOCK: [2021-07-25 Sun 16:11]--[2021-07-25 Sun 17:02] =>  0:51
:END:

#+begin_src clojure
{:des "On Emacs: diacritics if pressed in succession, otherwise hyper-super modifier"
 :rules [:emacs
         [:backslash :!Cright_control [:!blocked] {:alone ["ctrl" 1] :delayed {:invoked ["ctrl" 0]}}]
         :ctrl
         [:a :!Ea nil {:afterup ["ctrl" 0]}]
         [:b :!Eb nil {:afterup ["ctrl" 0]}]
         [:c :!Ec nil {:afterup ["ctrl" 0]}]
         [:d :!Ed nil {:afterup ["ctrl" 0]}]
         [:e :!Ee nil {:afterup ["ctrl" 0]}]
         [:f :!Ef nil {:afterup ["ctrl" 0]}]
         [:g :!Eg nil {:afterup ["ctrl" 0]}]
         [:h :!Eh nil {:afterup ["ctrl" 0]}]
         [:i :!Ei nil {:afterup ["ctrl" 0]}]
         [:j :!Ej nil {:afterup ["ctrl" 0]}]
         [:k :!Ek nil {:afterup ["ctrl" 0]}]
         [:l :!El nil {:afterup ["ctrl" 0]}]
         [:m :!Em nil {:afterup ["ctrl" 0]}]
         [:n :!En nil {:afterup ["ctrl" 0]}]
         [:o :!Eo nil {:afterup ["ctrl" 0]}]
         [:p :!Ep nil {:afterup ["ctrl" 0]}]
         [:q :!Eq nil {:afterup ["ctrl" 0]}]
         [:r :!Er nil {:afterup ["ctrl" 0]}]
         [:s :!Es nil {:afterup ["ctrl" 0]}]
         [:t :!Et nil {:afterup ["ctrl" 0]}]
         [:u :!Eu nil {:afterup ["ctrl" 0]}]
         [:v :!Ev nil {:afterup ["ctrl" 0]}]
         [:w :!Ew nil {:afterup ["ctrl" 0]}]
         [:x :!Ex nil {:afterup ["ctrl" 0]}]
         [:y :!Ey nil {:afterup ["ctrl" 0]}]
         [:z :!Ez nil {:afterup ["ctrl" 0]}]
         [:0 :!E0 nil {:afterup ["ctrl" 0]}]
         [:1 :!E1 nil {:afterup ["ctrl" 0]}] ; ¡
         [:2 :!E2 nil {:afterup ["ctrl" 0]}]
         [:3 :!E3 nil {:afterup ["ctrl" 0]}]
         [:4 :!E4 nil {:afterup ["ctrl" 0]}]
         [:5 :!E5 nil {:afterup ["ctrl" 0]}]
         [:6 :!E6 nil {:afterup ["ctrl" 0]}]
         [:7 :!E7 nil {:afterup ["ctrl" 0]}]
         [:8 :!E8 nil {:afterup ["ctrl" 0]}]
         [:9 :!E9 nil {:afterup ["ctrl" 0]}]
         [:slash :!SEslash nil {:afterup ["ctrl" 0]}] ; ¿
         ]
 }
#+end_src

*** internal keyboard
:PROPERTIES:
:ID:       533B81E8-E738-4374-88D0-4EE942561659
:END:
**** tab
:PROPERTIES:
:ID:       06A8716B-F75B-4B6C-80BC-C331FDC401FB
:END:

#+begin_src clojure
{:des "on Emacs, equal_sign → equal_sign (alone) | Alt (held)"
 :rules [
         [:##tab :right_command [:!moonlander :emacs] {:alone :equal_sign}]
         ]}
#+end_src

#+begin_src clojure
{:des "outside Emacs, equal_sign → equal_sign (alone) | left_shift + left_option (held)"
 :rules [
         [:##tab :!Sleft_option :!moonlander  {:alone :equal_sign}]
         ]}
#+end_src

**** left_option
:PROPERTIES:
:ID:       F39F132B-8D79-4461-A07F-642827D7957A
:END:
#+begin_src clojure
{:des "delete_forward → toggle tabs (alone) | left_shift (held)"
 :rules [
         [:##left_option :left_shift :!moonlander {:alone :!CT0}]
         ]}
#+end_src

**** left_command
:PROPERTIES:
:ID:       F35E661F-F9C4-4950-931F-DCAA5E668859
:END:
#+begin_src clojure
{:des "delete_forward → toggle tabs (alone) | left_shift (held)"
 :rules [
         [:##left_command :left_command [:!moonlander :!steam] {:alone :return_or_enter}]
         ]}
#+end_src

**** right_command
:PROPERTIES:
:ID:       EE9EC966-6B9E-4C10-AB37-2D932D4426A0
:END:

#+begin_src clojure
{:des "spacebar → tab (alone) | left_control (held)"
 :rules [
         [:##right_command :left_control :!moonlander {:alone :tab}]
         ]}
#+end_src

**** right_option
:PROPERTIES:
:ID:       E35A6F0B-BD09-4160-BC74-E1B8090C70AD
:END:

#+begin_src clojure
{:des "on Emacs, right_control → toggle Emacs/Chrome (alone) | Control + Alt (held)"
 :rules [
         [:##right_option :!Tright_command [:!moonlander :emacs] {:alone :f18}]
         ]}
#+end_src

#+begin_src clojure
{:des "outside Emacs, right_control → toggle Emacs/Chrome (alone) | righ_command + right_control (held)"
 :rules [
         [:##right_option :!Qright_control :!moonlander {:alone :f18}]
         ]}
#+end_src

**** return_or_enter
:PROPERTIES:
:ID:       397F7E6A-A4DB-4FC8-84C7-ADB6CC2D9E2A
:END:
Note that we use a simple modification to map ~return_or-enter~ to ~quote~, because we later define a ~quote~ simlayer, which works if the mapping is defined via a simple modification, but not via a complex modification.

#+begin_src clojure
{:des "on Emacs, return_or_enter → quote (alone) | super (held)"
 :rules [
         [:##quote :right_control [:!moonlander :emacs] {:alone :quote}]
         ]}
#+end_src

*** moonlander
:PROPERTIES:
:ID:       FC41F58A-AFDC-4F61-80C8-70AF5987AF8D
:END:
**** equal_sign
:PROPERTIES:
:ID:       7A4C371E-862F-4F1D-80D9-4E33869AEDE7
:END:
#+begin_src clojure
{:des "on Emacs, equal_sign → equal_sign (alone) | Alt (held)"
 :rules [
         [:##equal_sign :right_command [:moonlander :emacs] {:alone :equal_sign}]
         ]}
#+end_src

#+begin_src clojure
{:des "outside Emacs, equal_sign → equal_sign (alone) | left_shift + left_option (held)"
 :rules [
         [:##equal_sign :!Sleft_option :moonlander  {:alone :equal_sign}]
         ]}
#+end_src

**** delete_or_backspace
:PROPERTIES:
:ID:       CC3880F6-F71B-492D-8F0E-585ADB552004
:END:
#+begin_src clojure
{:des "delete_or_backspace → return_or_enter (alone) | left_command (held)"
 :rules [
         [:##delete_or_backspace :left_command :moonlander {:alone :return_or_enter}]
         ]}
#+end_src

**** delete_forward
:PROPERTIES:
:ID:       C016D30A-E2DF-4E28-89A0-90DDD9293D29
:END:
#+begin_src clojure
{:des "delete_forward → toggle tabs (alone) | left_shift (held)"
 :rules [
         [:##delete_forward :left_shift :moonlander {:alone :!CT0}]
         ]}
#+end_src

**** tab
:PROPERTIES:
:ID:       D9295C31-3375-4F78-974C-9EDDEFA6E8A3
:END:
#+begin_src clojure
{:des "tab → tab (alone) | left_control (held)"
 :rules [
         [:##tab :left_control :moonlander {:alone :tab}]
         ]}
#+end_src

**** right_control
:PROPERTIES:
:ID:       30827877-0622-4450-A217-56C7A05CC20F
:END:
#+begin_src clojure
{:des "on Emacs, right_control → toggle Emacs/Chrome (alone) | Control + Alt (held)"
 :rules [
         [:##right_control :!Tright_command [:moonlander :emacs] {:alone :f18}]
         ]}
#+end_src

#+begin_src clojure
{:des "outside Emacs, right_control → toggle Emacs/Chrome (alone) | righ_command + right_control (held)"
 :rules [
         [:##right_control :!Qright_control :moonlander {:alone :f18}]
         ]}
#+end_src

**** quote
:PROPERTIES:
:ID:       D14C4590-0118-47A1-8095-E7A18EC694C0
:END:
#+begin_src clojure
{:des "on Emacs, quote → quote (alone) | super (held)"
 :rules [
         [:##quote :right_control [:moonlander :emacs] {:alone :quote}]
         ]}
#+end_src

*** misc
:PROPERTIES:
:ID:       9B3B0F27-91D6-4B41-ACFE-103C65F3A231
:END:
A normal Command+Spacebar event triggered within Emacs is intercepted by OSX, given the existing global shortcut.

#+begin_src clojure
{:des "On Emacs, command + space → trigger different events on Emacs and elsewhere"
 :rules [
         [:!Cspacebar :!QCOWspacebar :emacs]
         ]}
#+end_src

Similarly, OSX intercepts Command+h, so we circumvent it by creating a new mapping:

#+begin_src clojure
{:des "On Emacs, disable OSX behavior of command + ?"
 :rules [
         [:!CSslash :!QCOWSslash :emacs]
         ]}
#+end_src

#+begin_src clojure
{:des "On Emacs, disable OSX behavior of command + Q"
 :rules [
         [:!CSq :!QCOWq :emacs]
         ]}
#+end_src

On Emacs, caps lock triggers C-g instead of escape. So we create a reverse mapping:

#+begin_src clojure
{:des "On Emacs, C-g → C-ESC"
 :rules [
         [:!Tg :!Tescape :emacs]
         ]}
#+end_src

** active layers
:PROPERTIES:
:ID:       348C5A9E-09EC-4E0C-B03F-4C347B016E36
:END:
*** j-mode
:PROPERTIES:
:ID:       0901DE3D-511F-4547-ACCD-3AAD9703DAAD
:END:
:LOGBOOK:
CLOCK: [2021-12-01 Wed 17:12]--[2021-12-01 Wed 17:27] =>  0:15
:END:
#+begin_src clojure
{:des "j-mode (deletion)"
 :rules [:j-mode
         [:a :!TCOa :emacs]
         [:!Wa :!TCOWa :emacs]
         [:!WQa :!TCOWQa :emacs]
         [:s :!TCOs :emacs]
         [:s :delete_or_backspace]
         [:d :!TCOd :emacs]
         [:d :delete_forward]
         [:f :!TCOf :emacs]
         [:!Wf :!TCOWf :emacs]
         [:!WQf :!TCOWQf :emacs]
         [:q :!TCOq :emacs]
         [:!Wq :!TCOWq :emacs]
         [:!WQq :!TCOWQq :emacs]
         [:q :!Odelete_or_backspace]
         [:w :!TCOw :emacs]
         [:!Ww :!TCOWw :emacs]
         [:!WQw :!TCOWQw :emacs]
         [:w :!Cdelete_or_backspace]
         [:e :!TCOe :emacs]
         [:!We :!TCOWe :emacs]
         [:!WQe :!TCOWQe :emacs]
         [:e :!Tk]
         [:r :!TCOr :emacs]
         [:!Wr :!TCOWr :emacs]
         [:!WQr :!TCOWQr :emacs]
         [:r :!Odelete_forward]
         [:z :!TCOz :emacs]
         [:!Wz :!WTCOz :emacs]
         [:!WQz :!WQTCOz :emacs]
         [:z :!Cdelete_or_backspace]
         [:x :!TCOx :emacs]
         [:!Wx :!TCOWx :emacs]
         [:!WQx :!TCOWQx :emacs]
         [:x :!COleft_arrow]
         [:c :!TCOc :emacs]
         [:!Wc :!TCOWc :emacs]
         [:!WQc :!TCOWQc :emacs]
         [:c :!COright_arrow]
         [:v :!TCOv :emacs]
         [:!Wv :!TCOWv :emacs]
         [:!WQv :!TCOWQv :emacs]
         [:v :!Cdelete_forward]
         [:b :!TCOb :emacs]
         [:t :!TCOt :emacs]
         [:t :home]
         [:g :!TCOg :emacs]
         [:g :end]
         [:!Wd :!TCOWd :emacs]
         [:!Ws :!TCOWs :emacs]
         [:equal_sign :!TCOequal_sign :emacs]
         [:caps_lock [:left_arrow :right_arrow] :emacs]
         ]}
#+end_src
*** Cj-mode
:PROPERTIES:
:ID:       7898DDC0-CE2C-45A7-A418-A75CEFA743AC
:END:
:LOGBOOK:
CLOCK: [2022-07-24 Sun 18:35]--[2022-07-24 Sun 18:58] =>  0:23
:END:
#+begin_src clojure
{:des "Command-j (copy)"
 :rules [
         [:!Cj [ "my-layer-mode"  1] nil {:afterup ["my-layer-mode" 0] :alone :!Cj}]
         :my-layer-mode
         [:##a :!TCOWQa :emacs]
         [:##b :!TCOWQb :emacs]
         [:##c :!TCOWQc :emacs]
         [:##d :!TCOWQd :emacs]
         [:##e :!TCOWQe :emacs]
         [:##f :!TCOWQf :emacs]
         [:##g :!TCOWQg :emacs]
         [:##h :!TCOWQh :emacs]
         [:##i :!TCOWQi :emacs]
         [:##k :!TCOWQk :emacs]
         [:##l :!TCOWQl :emacs]
         [:##m :!TCOWQm :emacs]
         [:##n :!TCOWQn :emacs]
         [:##o :!TCOWQo :emacs]
         [:##p :!TCOWQp :emacs]
         [:##q :!TCOWQq :emacs]
         [:##r :!TCOWQr :emacs]
         [:##s :!TCOWQs :emacs]
         [:##t :!TCOWQt :emacs]
         [:##u :!TCOWQu :emacs]
         [:##v :!TCOWQv :emacs]
         [:##w :!TCOWQw :emacs]
         [:##x :!TCOWQx :emacs]
         [:##y :!TCOWQy :emacs]
         [:##z :!TCOWQz :emacs]
         ]}
#+end_src
*** CSj-mode
:PROPERTIES:
:ID:       DAEB0BD5-535B-42E1-9170-C1039B8EC794
:END:
:LOGBOOK:
CLOCK: [2022-07-24 Sun 18:58]--[2022-07-24 Sun 19:17] =>  0:19
:END:
#+begin_src clojure
{:des "Comand-shift-j (delete)"
 :rules [
         [:!CSj [ "my-layer-mode"  1] nil {:afterup ["my-layer-mode" 0] :alone :!CSj}]
         :my-layer-mode
         [:##a :!QTCOa :emacs]
         [:##b :!QTCOb :emacs]
         [:##c :!QTCOc :emacs]
         [:##d :!QTCOd :emacs]
         [:##e :!QTCOe :emacs]
         [:##f :!QTCOf :emacs]
         [:##g :!QTCOg :emacs]
         [:##h :!QTCOh :emacs]
         [:##i :!QTCOi :emacs]
         [:##k :!QTCOk :emacs]
         [:##l :!QTCOl :emacs]
         [:##m :!QTCOm :emacs]
         [:##n :!QTCOn :emacs]
         [:##o :!QTCOo :emacs]
         [:##p :!QTCOp :emacs]
         [:##q :!QTCOq :emacs]
         [:##r :!QTCOr :emacs]
         [:##s :!QTCOs :emacs]
         [:##t :!QTCOt :emacs]
         [:##u :!QTCOu :emacs]
         [:##v :!QTCOv :emacs]
         [:##w :!QTCOw :emacs]
         [:##x :!QTCOx :emacs]
         [:##y :!QTCOy :emacs]
         [:##z :!QTCOz :emacs]
         ]}
#+end_src

*** l-mode
:PROPERTIES:
:ID:       C1FE60BD-9863-4E45-93F7-3E23DC589DDA
:END:
#+begin_src clojure
{:des "l-mode (deletion)"
 :rules [:l-mode
         [:a :!TCOWa :emacs]
         [:b :!TCOWb :emacs]
         [:c :!TCOWc :emacs]
         [:d :!TCOWd :emacs]
         [:e :!TCOWe :emacs]
         [:f :!TCOWf :emacs]
         [:g :!TCOWg :emacs]
         [:h :!TCOWh :emacs]
         [:i :!TCOWi :emacs]
         [:j :!TCOWj :emacs]
         [:m :!TCOWm :emacs]
         [:n :!TCOWn :emacs]
         [:o :!TCOWo :emacs]
         [:p :!TCOWp :emacs]
         [:q :!TCOWq :emacs]
         [:r :!TCOWr :emacs]
         [:s :!TCOWs :emacs]
         [:t :!TCOWt :emacs]
         [:u :!TCOWu :emacs]
         [:v :!TCOWv :emacs]
         [:w :!TCOWw :emacs]
         [:z :!TCOWz :emacs]
         [:x :!TCOWx :emacs]
         [:y :!TCOWy :emacs]
         [:period :!TCOWperiod :emacs]
         ]}
#+end_src

*** p-mode
:PROPERTIES:
:ID:       8C32B75E-1455-444F-B5F6-83DC8263D558
:END:

#+begin_src clojure
{:des "p-mode (media controls)"
 :rules [:p-mode
         ;; [: :display_brightness_increment]
         ;; [: :launchpad]
         ;; [: :mission_control]
         [:a {:mkey {:x -1500}}]
         [:b :!CS5] ; Screenshot and recording options
         [:c :!CS4] ; Save picture of selected area to a file
         [:d {:mkey {:y 1500}}]
         [:e {:mkey {:y 4500}}]
         [:f {:mkey {:x 1500}}]
         [:g :!QWERg] ; Rectangle, half right
         [:h :!QWERh] ; Rectangle, center
         [:i [:km "Use Play to control Spotify not shitty Apple Music"]]
         [:j :volume_decrement]
         [:k :mute]
         [:l :fastforward]
         [:m :!CTS0] ; dictation
         [:n :!CTS1] ; read aloud
         [:o :rewind]
         [:q {:mkey {:x -4500}}]
         [:r {:mkey {:x 4500}}]
         [:s {:mkey {:y -1500}}]
         ;; [:return_or_enter :!QWERreturn_or_enter] ; doesn't work
         [:spacebar :button1]
         [:tab :button2]
         [:t :!QWERt] ; Recntangle, center
         [:u :volume_increment] ;
         [:v :!CTS4] ; Copy picture of selected area to the clipboard
         [:w {:mkey {:y -4500}}]
         [:x :!CTS3] ; Copy picture of screen to the clipboard
         [:y :!QWERy] ; Rectangle, maximize
         [:z :!CS3] ; Save picture of screen as a file
         [:comma :!QWERperiod] ; 
         ]}
#+end_src

*** q-mode
:PROPERTIES:
:ID:       B3028ED3-0E12-4CA5-AC14-B89DECB5C7D8
:END:
#+begin_src clojure
{:des "q-mode (apps)"
 :rules [:q-mode
         [:d [:km "Activate: Discord"]]
         [:e [:km "Activate: Emacs"]]
         [:f [:km "Activate: Finder"]]
         [:g [:km "Activate: Goldendict"]]
         [:h [:km "Activate: Chrome"]]
         [:i [:km "Activate: Anki"]]
         [:m [:km "Activate: Media Center"]]
         [:k [:km "Activate: Keyboard Maestro"]]
         [:l [:km "Activate: Calendar"]]
         [:o [:km "Activate: Zotero"]]
         [:p [:km "Activate: Preview"]]
         [:r [:km "Activate: Karabiner-Elements"]]
         [:s [:km "Activate: Slack"]]
         [:t [:km "Activate: Terminal"]]
         [:u [:km "Activate: QBittorrent"]]
         [:v [:km "Activate: VLC"]]
         [:w [:km "Activate: HoudahSpot"]]
         [:x [:km "Activate: Firefox"]]
         [:y [:km "Activate: Spotify"]]
         ]}
#+end_src

*** x-mode
:PROPERTIES:
:ID:       A670C98B-FCD0-4B4C-A3D9-C0DB143209AE
:END:
:LOGBOOK:
CLOCK: [2021-07-16 Fri 17:34]--[2021-07-16 Fri 18:32] =>  0:58
CLOCK: [2021-06-03 Thu 15:17]--[2021-06-03 Thu 15:47] =>  0:30
CLOCK: [2021-06-03 Thu 08:14]--[2021-06-03 Thu 09:14] =>  1:00
CLOCK: [2021-06-01 Tue 17:30]--[2021-06-01 Tue 18:07] =>  0:37
CLOCK: [2021-04-07 Wed 13:09]--[2021-04-07 Wed 13:17] =>  0:08
CLOCK: [2021-03-25 Thu 14:14]--[2021-03-25 Thu 14:59] =>  0:45
CLOCK: [2021-03-25 Thu 09:30]--[2021-03-25 Thu 10:27] =>  0:57
CLOCK: [2021-03-25 Thu 08:25]--[2021-03-25 Thu 08:56] =>  0:31
CLOCK: [2021-03-23 Tue 17:52]--[2021-03-23 Tue 17:55] =>  0:03
CLOCK: [2021-03-23 Tue 09:13]--[2021-03-23 Tue 09:24] =>  0:11
CLOCK: [2021-03-21 Sun 11:00]--[2021-03-21 Sun 11:03] =>  0:03
CLOCK: [2021-03-21 Sun 07:33]--[2021-03-21 Sun 09:05] =>  2:17
CLOCK: [2021-03-17 Wed 09:14]--[2021-03-17 Wed 09:19] =>  0:05
CLOCK: [2021-03-09 Tue 17:25]--[2021-03-09 Tue 17:47] =>  0:22
CLOCK: [2021-03-01 Mon 11:46]--[2021-03-01 Mon 12:05] =>  0:19
:END:

#+begin_src clojure
{:des "x-mode (avy)"
 :rules [:x-mode
         [:a :!TCWa :emacs]
         [:b :!TCWb :emacs]
         [:c :!TCWc :emacs]
         [:d :!TCWd :emacs]
         [:e :!TCWe :emacs]
         [:f :!TCWf :emacs]
         [:g :!TCWg :emacs]
         [:h :!TCWh :emacs]
         [:i :!TCWi :emacs]
         [:j :!TCWj :emacs]
         [:k :!TCWk :emacs]
         [:l :!TCWl :emacs]
         [:m :!TCWm :emacs]
         [:n :!TCWn :emacs]
         [:o :!TCWo :emacs]
         [:p :!TCWp :emacs]
         [:q :!TCWq :emacs]
         [:r :!TCWr :emacs]
         [:s :!TCWs :emacs]
         [:t :!TCWt :emacs]
         [:u :!TCWu :emacs]
         [:v :!TCWv :emacs]
         [:w :!TCWw :emacs]
         [:z :!TCWz :emacs]
         [:y :!TCWy :emacs]
         [:period :!TCWperiod :emacs]
         [:return_or_enter :!TCWreturn_or_enter :emacs]
         [:comma :!TCWcomma :emacs]
         [:slash :!TCWslash :emacs]
         [:spacebar :!TCWspacebar :emacs]
         ]}
#+end_src

*** z-mode
:PROPERTIES:
:ID:       303127EC-3362-408C-9A3B-45C2A108D994
:END:
:LOGBOOK:
CLOCK: [2022-07-06 Wed 15:55]--[2022-07-06 Wed 15:56] =>  0:01
CLOCK: [2021-12-23 Thu 15:40]--[2021-12-23 Thu 15:58] =>  0:18
CLOCK: [2021-12-23 Thu 15:20]--[2021-12-23 Thu 15:37] =>  0:17
CLOCK: [2021-11-25 Thu 20:28]--[2021-11-25 Thu 21:07] =>  0:39
CLOCK: [2021-06-03 Thu 15:17]--[2021-06-03 Thu 15:47] =>  0:30
CLOCK: [2021-06-03 Thu 08:14]--[2021-06-03 Thu 09:14] =>  1:00
CLOCK: [2021-06-01 Tue 17:30]--[2021-06-01 Tue 18:07] =>  0:37
CLOCK: [2021-04-07 Wed 13:09]--[2021-04-07 Wed 13:17] =>  0:08
CLOCK: [2021-03-25 Thu 14:14]--[2021-03-25 Thu 14:59] =>  0:45
CLOCK: [2021-03-25 Thu 09:30]--[2021-03-25 Thu 10:27] =>  0:57
CLOCK: [2021-03-25 Thu 08:25]--[2021-03-25 Thu 08:56] =>  0:31
CLOCK: [2021-03-23 Tue 17:52]--[2021-03-23 Tue 17:55] =>  0:03
CLOCK: [2021-03-23 Tue 09:13]--[2021-03-23 Tue 09:24] =>  0:11
CLOCK: [2021-03-21 Sun 11:00]--[2021-03-21 Sun 11:03] =>  0:03
CLOCK: [2021-03-21 Sun 07:33]--[2021-03-21 Sun 09:05] =>  2:17
CLOCK: [2021-03-17 Wed 09:14]--[2021-03-17 Wed 09:19] =>  0:05
CLOCK: [2021-03-09 Tue 17:25]--[2021-03-09 Tue 17:47] =>  0:22
CLOCK: [2021-03-01 Mon 11:46]--[2021-03-01 Mon 12:05] =>  0:19
:END:

[2021-03-23 Tue 09:18] I've added ~##~ to ~u~ and ~p~. This allows for the use of shift. Not sure if this addition will have any unexpected side effects, so testing it on these two words only. If everything looks fine in a few days, you can extend this modification to all other relevant letters.

[2021-03-25 Thu 08:30] Next task is to create corresponding versions of many of the motion key mappings that move the screen rather than the cursor.

#+begin_src clojure
{:des "z-mode (navigation)"
 :rules [:z-mode
         [:j :left_arrow]
         [:##j :left_arrow]
         [:semicolon :right_arrow]
         [:##semicolon :right_arrow]
         [:k :up_arrow]
         [:!Ck :!WTQCk :emacs]
         [:!COk :!WTQCOk :emacs]
         [:##k :up_arrow]
         [:l :down_arrow]
         [:!Cl :!WTQCl :emacs]
         [:!COl :!WTQCOl :emacs]
         [:##l :down_arrow]
         [:m :!WTQm :emacs]
         [:!Sm :!WTQSm :emacs]
         [:##m :!Cleft_arrow]
         [:slash :!WTQz :emacs]
         [:!Sslash :!WTQSz :emacs]
         [:##slash :!Cright_arrow]
         [:comma :!WTQcomma :emacs]
         [:##comma :!Cup_arrow]
         [:period :!WTQperiod :emacs]
         [:##period :!Cdown_arrow]
         [:n :!WTQn :emacs]
         [:v :!WTQv :emacs]
         [:b :!WTQb :emacs]
         [:u :!WTQu :emacs]
         [:!Cu :!WTQCu :emacs]
         [:##u :!Oleft_arrow]
         [:p :!WTQp :emacs]
         [:!Cp :!WTQCp :emacs]
         [:##p :!Oright_arrow]
         [:i :!WTQi :emacs]
         [:!Ci :!WTQCi :emacs]
         [:!COi :!WTQCOi :emacs]
         [:##i :!Oup_arrow]
         [:o :!WTQo :emacs]
         [:!Co :!WTQCo :emacs]
         [:!COo :!WTQCOo :emacs]
         [:##o :!Odown_arrow]
         [:y :!WTQy :emacs]
         [:##y :page_up]
         [:h :!WTQh :emacs]
         [:##h :page_down]
         [:t :!WTQt :emacs]
         [:g :!WTQg :emacs]
         [:right_command :!WTQtab :emacs :!moonlander]
         [:tab :!WTQtab :emacs]
         [:##right_command :home :!moonlander]
         [:##tab :home]
         [:spacebar :!WTQspacebar :emacs]
         [:##spacebar :end]
         [:x :!WTQx]
         [:c :!WTQc]
         [:r [:!TCp :!TCh] :chrome] ; Google Docs previous heading
         [:r :!WTQr :emacs]
         [:f [:!TCn :!TCh] :chrome] ; Google Docs previous heading
         [:f :!WTQf]
         [:e :!WTQe :emacs]
         [:e [:km "Change selection to title case"] :!emacs]
         [:d :!QCOWd :emacs] ; WTQ intercepted by OSX
         [:d [:km "Change selection to sentence case"] :!emacs]
         [:w :!WTQw :emacs]
         [:w [:km "Remove hyphens from selection"] :!emacs]
         [:s :!WTQs :emacs]
         [:s [:km "Remove spaces from selection"] :!emacs]
         ]}
#+end_src

**** Archive                                                     :ARCHIVE:
:PROPERTIES:
:ID:       7B593652-CA37-4AC3-A8D4-D37DC779BBA3
:END:
***** DONE [#6] Configure karabiner to use Google Docs shortcuts
CLOSED: [2022-07-06 Wed 16:09]
:PROPERTIES:
:Effort:   0:30
:ID:       258E1C3A-267A-4030-AC51-C99F0F53D2D7
:ARCHIVE_TIME: 2022-07-06 Wed 16:09
:END:
:LOGBOOK:
CLOCK: [2022-07-06 Wed 15:56]--[2022-07-06 Wed 16:09] =>  0:13
:END:
https://support.google.com/docs/answer/179738?hl=en-GB&co=GENIE.:3DDesktop#zippy=%2Cmac-shortcuts

*** comma-mode
:PROPERTIES:
:ID:       4E6E7538-0296-485F-BFB0-DF1316DC32E2
:END:

#+begin_src clojure
{:des "comma-mode (transposition)"
 :rules [:comma-mode
         [:a :!QCOa :emacs]
         [:b :!QCOb :emacs]
         [:c :!QCOc :emacs]
         [:d :!QCOd :emacs]
         [:e :!QCOe :emacs]
         [:f :!QCOf :emacs]
         [:g :!QCOg :emacs]
         [:h :!QCOh :emacs]
         [:i :!QCOi :emacs]
         [:j :!QCOj :emacs]
         [:l :!QCOl :emacs]
         [:n :!QCOn :emacs]
         [:o :!QCOo :emacs]
         [:p :!QCOp :emacs]
         [:q :!QCOq :emacs]
         [:r :!QCOr :emacs]
         [:s :!QCOs :emacs]
         [:t :!QCOt :emacs]
         [:u :!QCOu :emacs]
         [:v :!QCOv :emacs]
         [:w :!QCOw :emacs]
         [:z :!QCOz :emacs]
         [:x :!QCOx :emacs]
         [:y :!QCOy :emacs]
         [:period :!QCOperiod :emacs]
         [:slash :!QCOslash :emacs]
         ]}
#+end_src

**** Archive                                                     :ARCHIVE:
:PROPERTIES:
:ID:       BAEB72F7-7C72-476C-9387-FDCFB3DA1D05
:END:
***** CANCELLED [#5] Replace comma simlayer with hydra
CLOSED: [2022-05-10 Tue 09:48]
:PROPERTIES:
:Effort:   1:00
:ARCHIVE_TIME: 2022-05-10 Tue 09:48
:ID:       F01A2977-23C0-4426-B14D-18264F4A7E1C
:END:

In general, don't use simlayers for non-iteratable and investment actions
*** period-mode
:PROPERTIES:
:ID:       6D08B8C7-EE4C-42E0-928D-6ED3F05B7005
:END:
:LOGBOOK:
CLOCK: [2021-06-22 Tue 11:46]--[2021-06-22 Tue 12:34] =>  0:48
CLOCK: [2021-06-22 Tue 11:28]--[2021-06-22 Tue 11:41] =>  0:13
:END:

#+begin_src clojure
{:des "period-mode (manipulation)"
 :rules [:period-mode
         [:a :!QCTa :emacs]
         [:b :!QCTb :emacs]
         [:c :!QCTc :emacs]
         [:d :!QCTd :emacs]
         [:e :!QCTe :emacs]
         [:f :!QCTf :emacs]
         [:g :!QCTg :emacs]
         [:h :!QCTh :emacs]
         [:i :!QCTi :emacs]
         [:j :!QCTj :emacs]
         [:k :!QCTk :emacs]
         [:l :!QCTl :emacs]
         [:m :!QCTm :emacs]
         [:n :!QCTn :emacs]
         [:o :!QCTo :emacs]
         [:p :!QCTp :emacs]
         [:q :!QCTq :emacs]
         [:r :!QCTr :emacs]
         [:s :!QCTs :emacs]
         [:t :!QCTt :emacs]
         [:u :!QCTu :emacs]
         [:v :!QCTv :emacs]
         [:w :!QCTw :emacs]
         [:x :!QCTx :emacs]
         [:y :!QCTy :emacs]
         [:z :!QCTz :emacs]
         [:comma :!QCTcomma :emacs]
         [:slash :!QCTslash :emacs]
         [:spacebar :!QCTspacebar :emacs]
         ]}
#+end_src

*** quote-mode
:PROPERTIES:
:ID:       FBF02867-9942-47E7-B201-DE86156E82F9
:END:

#+begin_src clojure
{:des "quote-mode (website-specific)"
 :rules [:quote-mode
         [:1 [:km "Local website 1"]]
         [:2 [:km "Local website 2"]]
         [:3 [:km "Local website 3"]]
         [:4 [:km "Local website 4"]]
         [:5 [:km "Local website 5"]]
         [:6 [:km "Local website 6"]]
         [:7 [:km "Local website 7"]]
         [:8 [:km "Local website 8"]]
         [:9 [:km "Local website 9"]]
         [:0 [:km "Local website 0"]]
         [:a [:km "Local website a"]]
         [:b [:km "Local website b"]]
         [:c [:km "Local website c"]]
         [:d [:km "Local website d"]]
         [:e [:km "Local website e"]]
         [:f [:km "Local website f"]]
         [:g [:km "Local website g"]]
         [:h [:km "Local website h"]]
         [:i [:km "Local website i"]]
         [:j [:km "Local website j"]]
         [:k [:km "Local website k"]]
         [:l [:km "Local website l"]]
         [:!Sl [:km "Local website Sl"]]
         [:!Cl [:km "Local website Cl"]]
         [:!CSl [:km "Local website CSl"]]
         [:m [:km "Local website m"]]
         [:n [:km "Local website n"]]
         [:o [:km "Local website o"]]
         [:p [:km "Local website p"]]
         [:r [:km "Local website r"]]
         [:s [:km "Local website s"]]
         [:t [:km "Local website t"]]
         [:u [:km "Local website u"]]
         [:y [:km "Local website y"]]
         [:z [:km "Local website z"]]
         [:x [:km "Local website x"]]
         [:v [:km "Local website v"]]
         [:w [:km "Local website w"]]
         [:semicolon [:km "Local website semicolon"]]
         [:comma [:km "Local website comma"]]
         [:period [:km "Local website period"]]
         [:slash [:km "Local website slash"]]
         [:return_or_enter [:km "Local website return_or_enter"]]
                                        ; [:spacebar [:km "Local website spacebar"]]
         ]}
#+end_src

*** semicolon-mode
:PROPERTIES:
:ID:       5BA69509-7C1B-4DD6-A54D-112902320CCB
:END:
:LOGBOOK:
CLOCK: [2022-04-12 Tue 13:41]--[2022-04-12 Tue 13:43] =>  0:02
:END:

#+begin_src clojure
{:des "semicolon (numbers and symbols)"
 :rules [:semicolon-mode
         ;; [:grave_accent_and_tilde :]
         [:##1 :!Ff1]
         [:##2 :!Ff2]
         [:##3 :!Ff3]
         [:##4 :!Ff4]
         [:##5 :!Ff5]
         [:##6 :!Ff6]
         [:##7 :!Ff7]
         [:##8 :!Ff8]
         [:##9 :!Ff9]
         [:##0 :!Ff10]
         ;; [:hyphen :]
         ;; [:equal_sign :]
         ;; [:open_bracket :]
         ;; [:close_bracket :]
         ;; [:backslash :]
         [:##a :!S5]
         [:##b :grave_accent_and_tilde]
         [:##c :open_bracket]
         [:##d :!S0]
         [:##e :!S3]
         [:##f :!S8]
         [:##g :!S6]
         [:##h :!S7]
         [:##i :8]
         [:##j :4]
         [:##k :5]
         [:##l :6]
         [:##m :1]
         [:##n :!Sgrave_accent_and_tilde]
         [:##o :9]
         [:##p :0]
         [:##q :!S1]
         [:##r :!S4]
         [:##s :!S9]
         [:##t :backslash]
         [:##u :7]
         [:##v :close_bracket]
         [:##w :!S2]
         [:##x :!Sclose_bracket]
         [:##y :!Sbackslash]
         [:##z :!Sopen_bracket]
         ;; [:semicolon :]
         ;; [:quote :]
         [:##comma :2]
         [:##period :3]
         ;; [:slash :]
         [:##spacebar :##0]
         [:!Sd :!Ebackslash]
         [:#SRf :!SEbackslash]
         ]}
#+end_src
*** Csemicolon-mode
:PROPERTIES:
:ID:       9250C45D-CD84-4817-AB50-34300903E007
:END:
:LOGBOOK:
CLOCK: [2022-06-07 Tue 15:24]--[2022-06-07 Tue 15:29] =>  0:05
:END:
This layer and the one below are needed to allow modifier keys to be passed to the ~semicolon-mode~ simlayer.

#+begin_src clojure
{:des "Command-semicolon (numbers and symbols)"
 :rules [
         [:!Csemicolon [ "my-layer-mode"  1] nil {:afterup ["my-layer-mode" 0] :alone :!Csemicolon}]
         :my-layer-mode
         ;; [:grave_accent_and_tilde :]
         [:##1 :!CFf1]
         [:##2 :!CFf2]
         [:##3 :!CFf3]
         [:##4 :!CFf4]
         [:##5 :!CFf5]
         [:##6 :!CFf6]
         [:##7 :!CFf7]
         [:##8 :!CFf8]
         [:##9 :!CFf9]
         [:##0 :!CFf10]
         ;; [:hyphen :]
         ;; [:equal_sign :]
         ;; [:open_bracket :]
         ;; [:close_bracket :]
         ;; [:backslash :]
         [:##a :!CS5]
         [:##b :!Cgrave_accent_and_tilde]
         [:##c :!Copen_bracket]
         [:##d :!CS0]
         [:##e :!CS3]
         [:##f :!CS8]
         [:##g :!CS6]
         [:##h :!CS7]
         [:##i :!CC8]
         [:##j :!C4]
         [:##k :!C5]
         [:##l :!C6]
         [:##m :!C1]
         [:##n :!CSgrave_accent_and_tilde]
         [:##o :!C9]
         [:##p :!C0]
         [:##q :!CS1]
         [:##r :!CS4]
         [:##s :!CS9]
         [:##t :!Cbackslash]
         [:##u :!C7]
         [:##v :!Cclose_bracket]
         [:##w :!CS2]
         [:##x :!CSclose_bracket]
         [:##y :!CSbackslash]
         [:##z :!CSopen_bracket]
         ;; [:semicolon :]
         ;; [:quote :]
         [:##comma :!C2]
         [:##period :!C3]
         ;; [:slash :]
         [:##spacebar :!C0]
         [:!Sd :!CEbackslash]
         [:#SRf :!CSEbackslash]
         ]}
#+end_src
*** Osemicolon-mode
:PROPERTIES:
:ID:       70FEF390-8401-46DE-8213-60694228AF71
:END:
:LOGBOOK:
CLOCK: [2022-06-07 Tue 15:30]--[2022-06-07 Tue 15:47] =>  0:17
:END:

#+begin_src clojure
{:des "Option-semicolon (numbers and symbols)"
 :rules [
         [:!Osemicolon [ "my-layer2-mode"  1] nil {:afterup ["my-layer2-mode" 0] :alone :!Osemicolon}]
         :my-layer2-mode
         ;; [:grave_accent_and_tilde :]
         [:##1 :!OFf1]
         [:##2 :!OFf2]
         [:##3 :!OFf3]
         [:##4 :!OFf4]
         [:##5 :!OFf5]
         [:##6 :!OFf6]
         [:##7 :!OFf7]
         [:##8 :!OFf8]
         [:##9 :!OFf9]
         [:##0 :!OFf10]
         ;; [:hyphen :]
         ;; [:equal_sign :]
         ;; [:open_bracket :]
         ;; [:close_bracket :]
         ;; [:backslash :]
         [:##a :!OS5]
         [:##b :!Ograve_accent_and_tilde]
         [:##c :!Oopen_bracket]
         [:##d :!OS0]
         [:##e :!OS3]
         [:##f :!OS8]
         [:##g :!OS6]
         [:##h :!OS7]
         [:##i :!OC8]
         [:##j :!O4]
         [:##k :!O5]
         [:##l :!O6]
         [:##m :!O1]
         [:##n :!OSgrave_accent_and_tilde]
         [:##o :!O9]
         [:##p :!O0]
         [:##q :!OS1]
         [:##r :!OS4]
         [:##s :!OS9]
         [:##t :!Obackslash]
         [:##u :!O7]
         [:##v :!Oclose_bracket]
         [:##w :!OS2]
         [:##x :!OSclose_bracket]
         [:##y :!OSbackslash]
         [:##z :!OSopen_bracket]
         ;; [:semicolon :]
         ;; [:quote :]
         [:##comma :!O2]
         [:##period :!O3]
         ;; [:slash :]
         [:##spacebar :!O0]
         [:!Sd :!OEbackslash]
         [:#SRf :!OSEbackslash]
         ]}
#+end_src

*** slash-mode
:PROPERTIES:
:ID:       87BE8B2A-1F3C-48C7-99D9-36A6D00F7399
:END:
:LOGBOOK:
CLOCK: [2021-06-03 Thu 20:44]--[2021-06-03 Thu 21:06] =>  0:22
:END:

#+begin_src clojure
{:des "slash simlyaer → files (Emacs) | app-specific macros (outside Emacs)"
 :rules [:slash-mode
         [:a :!COWa :emacs]
         [:b :!COWb :emacs]
         [:c :!COWc :emacs]
         [:d :!COWd :emacs]
         [:e :!COWe :emacs]
         [:f :!COWf :emacs]
         [:g :!COWg :emacs]
         [:h :!COWh :emacs]
         [:i :!COWi :emacs]
         [:j :!COWj :emacs]
         [:k :!COWk :emacs]
         [:l :!COWl :emacs]
         [:m :!COWm :emacs]
         [:n :!COWn :emacs]
         [:o :!COWo :emacs]
         [:p :!COWp :emacs]
         [:q :!COWq :emacs]
         [:r :!COWr :emacs]
         [:s :!COWs :emacs]
         [:t :!COWt :emacs]
         [:u :!COWu :emacs]
         [:v :!COWv :emacs]
         [:w :!COWw :emacs]
         [:x :!COWx :emacs]
         [:y :!COWy :emacs]
         [:z :!COWz :emacs]
         [:period :!COWperiod :emacs]
         [:comma :!COWcomma :emacs]
         ;; [:a [:km ""]]
         ;; [:b [:km ""]]
         ;; [:c [:km ""]]
         ;; [:d [:km ""]]
         ;; [:e [:km ""]]
         ;; [:f [:km ""]]
         ;; [:g [:km ""]]
         ;; [:h [:km ""]]
         ;; [:m [:km ""]]
         ;; [:n [:km ""]]
         ;; [:r [:km ""]]
         ;; [:u [:km ""]]
         ;; [:y [:km ""]]
         ;; [:z [:km ""]]
         ;; [:x [:km ""]]
         ;; [:v [:km ""]]
         ;; [:semicolon [:km ""]]
         ;; [:quote [:km ""]]
         ;; [:slash [:km ""]]
         ;; [:spacebar [:km ""]]
         [:a [:km "Local app a"] :!emacs]
         [:b [:km "Local app b"] :!emacs]
         [:c [:km "Local app c"] :!emacs]
         [:d [:km "Local app d"] :!emacs]
         [:e [:km "Local app e"] :!emacs]
         [:f [:km "Local app f"] :!emacs]
         [:g [:km "Local app g"] :!emacs]
         [:h [:km "Local app h"] :!emacs]
         [:i [:km "Local app i"] :!emacs]
         [:j [:km "Local app j"] :!emacs]
         [:k [:km "Local app k"] :!emacs]
         [:l [:km "Local app l"] :!emacs]
         [:m [:km "Local app m"] :!emacs]
         [:n [:km "Local app n"] :!emacs]
         [:o [:km "Local app o"] :!emacs]
         [:p [:km "Local app p"] :!emacs]
         [:q [:km "Local app q"] :!emacs]
         [:r [:km "Local app r"] :!emacs]
         [:s [:km "Local app s"] :!emacs]
         [:t [:km "Local app t"] :!emacs]
         [:u [:km "Local app u"] :!emacs]
         [:v [:km "Local app v"] :!emacs]
         [:w [:km "Local app w"] :!emacs]
         [:x [:km "Local app x"] :!emacs]
         [:y [:km "Local app y"] :!emacs]
         [:z [:km "Local app z"] :!emacs]
         [:semicolon [:km "Local app semicolon"] :!emacs]
         [:quote [:km "Local app quote"] :!emacs]
         [:comma [:km "Local app comma"] :!emacs]
         [:period [:km "Local app period"] :!emacs]
         [:return_or_enter [:km "Local app return_or_enter"] :!emacs]
         [:spacebar [:km "Local app spacebar"] :!emacs]
         [:escape [:km "Local app escape"] :!emacs]
         [:hyphen [:km "Local app hyphen"] :!emacs]
         ]}
#+end_src

*** end
:PROPERTIES:
:ID:       878439B7-635E-400A-B21F-670239A678F7
:END:
#+begin_src clojure :results silent
]}
#+end_src
** inactive layers
:PROPERTIES:
:ID:       B228F5AC-BC34-4908-A3A3-50B8AFF41A97
:END:
*** k-mode
:PROPERTIES:
:ID:       4A0DD582-A767-445D-8B9F-B6B8E98EB1D2
:END:

#+begin_src clojure :tangle no
{:des "k-mode (transposition)"
 :rules [:k-mode
         [:a :!TCOWQa :emacs] ;
         [:b :!TCOWQb :emacs] ;
         [:c :!TCOWQc :emacs] ;
         [:d :!TCOWQd :emacs] ;
         [:e :!TCOWQe :emacs] ;
         [:f :!TCOWQf :emacs] ;
         [:g :!TCOWQg :emacs] ;
         [:h :!TCOWQh :emacs] ;
         [:i :!TCOWQi :emacs] ;
         [:j :!TCOWQj :emacs] ;
         [:l :!TCOWQl :emacs] ;
         [:m :!TCOWQm :emacs] ;
         [:n :!TCOWQn :emacs] ;
         [:o :!TCOWQo :emacs] ;
         [:p :!TCOWQp :emacs] ;
         [:q :!TCOWQq :emacs] ;
         [:r :!TCOWQr :emacs] ;
         [:s :!TCOWQs :emacs] ;
         [:t :!TCOWQt :emacs] ;
         [:u :!TCOWQu :emacs] ;
         [:v :!TCOWQv :emacs] ;
         [:w :!TCOWQw :emacs] ;
         [:z :!TCOWQz :emacs] ;
         [:x :!TCOWQx :emacs] ;
         [:y :!TCOWQy :emacs] ;
         [:period :!TCOWQperiod :emacs] ;
         [:spacebar :!TCOWQspacebar :emacs] ;
         ]}
#+end_src

*** b-mode
:PROPERTIES:
:ID:       E1E84416-54BF-40A5-8482-F3ED1DE75F29
:END:

#+begin_src clojure :tangle no
{:des "b-key (Chrome tabs)"
 :rules [:b-mode
         ;; [:a [:km ""]]
         [:e [:km "Open: Effective Altruism Blogs"]]
         [:c [:km "Open: Finances"]]
         [:d [:km "Open: Clipboard"]]
         ;; [:e [:km ""]]
         [:f [:km "Open: Effective Altruism Forum"]]
         [:g [:km "Open: Library Genesis"]]
         [:h [:km "Open: Khan Academy"]]
         [:e [:km "Open: Gmail"]]
         ;; [:j [:km "Open: "]]
         [:k [:km "Open: Book search"]]
         [:l [:km "Open: LessWrong"]]
         [:m [:km "Open: Metaculus"]]
         ;; [:n [:km "Open: "]]
         ;; [:o [:km "Open: "]]
         [:p [:km "Open: Metaculus Pandemic"]]
                                        ; [:q [:km "Open: "]]
         [:r [:km "Open: Reaction time"]]
         [:s [:km "Open: Sci Hub"]]
         [:t [:km "Open: Worldcat"]]
         [:v [:km "Open: Drive"]]
         [:w [:km "Open: Wayback Machine"]]
         ;; [:x [:km ""]]
         [:y [:km "Open: YouTube"]]
         ;; [:z [:km ""]]
         ]}
#+end_src

**** TODO [#5] Use two-key chord for this
:PROPERTIES:
:Effort:   0:20
:ID:       441944E1-33ED-43E2-A1BB-D6F8A601677E
:END:
*** ?-mode
:PROPERTIES:
:ID:       42A014D7-D011-43E8-B401-9B080DF5AD61
:END:

#+begin_src clojure :tangle no
{:des "?-key (folders)"
 :rules [:?-mode
         [:a [:!Cd :a] :emacs]
         [:b [:!Cd :b] :emacs] ;
         [:c [:!Cd :c] :emacs] ;
         [:d [:!Cd :d] :emacs] ;
         [:e [:!Cd :e] :emacs] ;
         [:f [:!Cd :f] :emacs] ;
         [:g [:!Cd :g] :emacs] ;
         [:h [:!Cd :h] :emacs] ;
         [:i [:!Cd :i] :emacs] ;
         [:j [:!Cd :j] :emacs] ;
         [:k [:!Cd :k] :emacs] ;
         [:l [:!Cd :l] :emacs] ;
         [:m [:!Cd :m] :emacs] ;
         [:n [:!Cd :n] :emacs] ;
         [:o [:!Cd :o] :emacs] ;
         [:p [:!Cd :p] :emacs] ;
         [:q [:!Cd :q] :emacs] ;
         [:r [:!Cd :r] :emacs] ;
         [:s [:!Cd :s] :emacs] ;
         [:t [:!Cd :t] :emacs] ;
         [:u [:!Cd :u] :emacs] ;
         [:v [:!Cd :v] :emacs] ;'
         [:w [:!Cd :w] :emacs] ;
         [:y [:!Cd :y] :emacs] ;
         [:z [:!Cd :z] :emacs] ;
         [:period [:!Cd :period] :emacs] ;
         [:comma [:!Cd :comma]:emacs] ;
         [:a [:km "open: Apps"]]
         [:b [:km "open: Books"]]
         [:c [:km "open: Emacs"]]
         [:d [:km "open: Documentaries"]]
         ;; [:e [:km "open: "]]
         [:f [:km "open: Finance"]]
         ;; [:g [:km "open: "]]
         [:h [:km "open: Google Drive"]]
         [:i [:km "open: Anki"]]
         [:j [:km "open: Health"]]
         ;; [:k [:km "open: "]]
         [:l [:km "open: Library"]]
         [:m [:km "open: Metaculus"]]
         ;; [:n [:km "open: "]]
         [:o [:km "open: Org"]]
         [:p [:km "open: Audiobooks"]]
         ;; [:q [:km "open: "]]
         ;; [:r [:km "open: "]]
         ;; [:s [:km "open: "]]
         [:t [:km "open: Tango"]]
         [:u [:km "open: User"]]
         [:v [:km "open: Movies"]]
         [:w [:km "open: Downloads"]]
         [:y [:km "open: Music"]]
         ;; [:z [:km "open: "]]
         [:slash [:km "open: Root"]]
         ]}
#+end_src

*** enter + space pseudo-mode
:PROPERTIES:
:ID:       F47AD6F6-4B33-4411-81F7-3F6E27B85DDC
:END:
:LOGBOOK:
CLOCK: [2021-05-22 Sat 17:54]--[2021-05-22 Sat 18:05] =>  0:11
:END:

I'd like to make ~:spacebar~ behave as ~shift~ when pressed together with ~return_or_enter~. But the code below doesn't work.

#+begin_src clojure :tangle no
{:des ""
 :rules [
         :emacs
         [[:!Sspacebar :s] [:a]]
         ]}
#+end_src

*** zx-chord
:PROPERTIES:
:ID:       60726A89-2CDB-4B4E-91B4-2DF4D3D55EB6
:END:

Experimental; currently not tangled.

#+begin_src clojure :tangle no
{:des "zx-chord" :rules [[{:sim [:z :x]
                           :simo {:interrupt true
                                  :dorder :insensitive
                                  :uorder :insensitive
                                  :afterup {:set ["launch_mode" 0]}}} {:set ["launch_mode" 1]}]
                         [:condi :launch_mode :!open_mode]
#+end_src

