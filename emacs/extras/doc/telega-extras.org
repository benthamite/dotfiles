#+title: telega-extras: Extensions for Telega
#+author: Pablo Stafforini
#+email: pablo@stafforini.com
#+language: en
#+options: ':t toc:t author:t email:t num:t
#+startup: content
#+export_file_name: telega-extras.info
#+texinfo_filename: telega-extras.info
#+texinfo_dir_category: Emacs misc features
#+texinfo_dir_title: Telega Extras: (telega-extras)
#+texinfo_dir_desc: Extensions for Telega

This manual describes the features and customization options for the Emacs Lisp file =telega-extras.el=.

* Overview
:PROPERTIES:
:CUSTOM_ID: h:overview
:END:

=telega-extras.el= provides extensions for the =telega= package, an Emacs client for the Telegram messaging service. These extensions focus on buffer switching, message interaction, file handling, audio transcription, and managing specific chats/topics.

The main features include:

- An enhanced command (~telega-extras-switch-to~) to switch to Telega buffers with cycling behavior.
- Capturing messages with Org Capture.
- Commands to quickly view archive or main chat lists.
- Sending marked files from Dired as attachments.
- Attaching the most recent file from the downloads directory.
- A "smart enter" command that acts contextually on URLs, buttons, or sends the message.
- Commands to transcribe audio messages, optionally sharing the transcript automatically.
- Commands to download message attachments.
- Functions and a transient menu to quickly open specific chats or topics defined in a custom variable.

* User Options
:PROPERTIES:
:CUSTOM_ID: h:user-options
:END:

This section details the user-configurable variables provided by =telega-extras.el=.

** ~telega-extras-auto-share-audio-transcript~
:PROPERTIES:
:CUSTOM_ID: h:telega-extras-auto-share-audio-transcript
:END:

#+vindex: telega-extras-auto-share-audio-transcript
If non-nil, automatically attempt to share the transcript as a reply after successfully transcribing an audio message sent by the user using ~telega-extras-transcribe-audio~. Defaults to =nil=.

** ~telega-extras-chats~
:PROPERTIES:
:CUSTOM_ID: h:telega-extras-chats
:END:

#+vindex: telega-extras-chats
A plist storing information about specific Telegram chats and their topics, used by ~telega-extras-open-chat~ and the ~telega-extras-menu~. The structure should follow the type specification: a plist containing chat names (strings) mapping to chat IDs (integers) and optionally a nested plist of topic names (strings) mapping to topic IDs (integers). Defaults to =nil=. See the source code docstring for a detailed example structure.

* Commands
:PROPERTIES:
:CUSTOM_ID: h:commands
:END:

=telega-extras.el= provides the following interactive commands:

** Switch to Telega (Enhanced)
:PROPERTIES:
:CUSTOM_ID: h:telega-extras-switch-to
:END:

#+findex: telega-extras-switch-to
The command ~telega-extras-switch-to~ provides an enhanced way to navigate Telega buffers:
- If no Telega buffer exists, it starts Telega.
- If a Telega buffer exists but is not current, it switches to it.
- If the current buffer is a Telega chat buffer:
  - If the point is not at the end, it moves the point to the end.
  - If the point is already at the end, it kills the chat buffer and switches to the Telega root buffer.
- If the current buffer is the Telega root buffer (=*Telega Root*=):
  - If the active filter is 'archive':
    - If the point is at the top (line 3), it resets the filters (showing 'main').
    - Otherwise, it moves the point to the top (line 3).
  - If the active filter is not 'archive':
    - If the point is not at the top (line 4), it moves the point to the top (line 4).
    - (Implicitly, if already at the top, nothing happens).

** Capture Chat Message with Org Capture
:PROPERTIES:
:CUSTOM_ID: h:telega-extras-chat-org-capture
:END:

#+findex: telega-extras-chat-org-capture
The command ~telega-extras-chat-org-capture~ captures the Telega message at point into an Org mode note using =org-capture=. It first stores an Org link to the message using =org-store-link= and then invokes =org-capture= with the "n" template key (assuming this template is configured to use the stored link).

** View Archive/Main Chat List
:PROPERTIES:
:CUSTOM_ID: h:view-archive-main
:END:

#+findex: telega-extras-view-archive
The command ~telega-extras-view-archive~ resets any active filters in the Telega root buffer and then applies the 'archive' filter, showing only archived chats.

#+findex: telega-extras-view-main
The command ~telega-extras-view-main~ resets any active filters and applies the 'main' filter (the default view).

** Send Marked Dired Files
:PROPERTIES:
:CUSTOM_ID: h:telega-extras-dired-attach-send
:END:

#+findex: telega-extras-dired-attach-send
When executed in a Dired buffer, the command ~telega-extras-dired-attach-send~ sends all marked files as attachments in a selected Telegram chat.
1. It retrieves the list of marked files using =dired-get-marked-files=.
2. It prompts the user to select a destination chat using =telega-completing-read-chat=.
3. It switches to the selected chat buffer.
4. For each marked file, it determines the appropriate attachment type (audio, video, photo, or generic file) using ~telega-extras-dired-attach-func~ based on the file extension.
5. It calls the corresponding =telega-chatbuf-attach-*= function for each file.

** Attach Most Recent Download
:PROPERTIES:
:CUSTOM_ID: h:telega-extras-chatbuf-attach-most-recent-file
:END:

#+findex: telega-extras-chatbuf-attach-most-recent-file
The command ~telega-extras-chatbuf-attach-most-recent-file~ finds the most recently modified file in the downloads directory (specified by =paths-dir-downloads=, presumably defined elsewhere, using ~files-extras-newest-file~) and attaches it to the current Telega chat buffer using =telega-chatbuf-attach-file=.

** Smart Enter
:PROPERTIES:
:CUSTOM_ID: h:telega-extras-smart-enter
:END:

#+findex: telega-extras-smart-enter
The command ~telega-extras-smart-enter~ performs a context-dependent action when invoked in a Telega chat buffer:
- If the point is on a URL, it opens the URL using =browse-url-at-point=.
- If the point is on a button, it activates the button using =push-button=.
- Otherwise, it sends the content of the input area as a message using =telega-chatbuf-input-send=.

** Transcribe Audio Message
:PROPERTIES:
:CUSTOM_ID: h:telega-extras-transcribe-audio
:END:

#+findex: telega-extras-transcribe-audio
The command ~telega-extras-transcribe-audio~ initiates speech recognition for the audio message at point (or the optionally provided MESSAGE). It calls the internal =telega--recognizeSpeech= function. If ~telega-extras-auto-share-audio-transcript~ is non-nil and the message was sent by the current user, it also calls ~telega-extras-maybe-share-audio-transcript~ to attempt sharing the result.

** Download File Attachment
:PROPERTIES:
:CUSTOM_ID: h:telega-extras-download-file
:END:

#+findex: telega-extras-download-file
The command ~telega-extras-download-file~ downloads the file attachment associated with the message at point (or the optionally provided MESSAGE) using =telega-msg-save=.

** Open Specific Chat/Topic Menu
:PROPERTIES:
:CUSTOM_ID: h:telega-extras-menu
:END:

#+findex: telega-extras-menu
The command ~telega-extras-menu~ displays a transient menu allowing the user to quickly open predefined chats and topics stored in ~telega-extras-chats~. The example shows entries for a "Tl√∂n" chat with "General", "Social", "Emacs", and "Meta" topics. Selecting an item calls ~telega-extras-open-chat~.

* Helper Functions
:PROPERTIES:
:CUSTOM_ID: h:helper-functions
:END:

- ~telega-extras-dired-attach-func~: Determines the correct =telega-chatbuf-attach-*= function based on a file's extension.
- ~telega-extras-message-has-audio-p~: Checks if a Telega message is a voice note.
- ~telega-extras-maybe-share-audio-transcript~: Sets up timers to periodically check for and share a transcript if auto-sharing is enabled.
- ~telega-extras-get-audio-transcript~: Retrieves the transcript text from a message object if speech recognition is complete.
- ~telega-extras-maybe-get-audio-transcript~: Checks if a transcript is ready and calls processing/sharing functions. Called by the timer.
- ~telega-extras-post-audio-transcript~: Formats and sends the transcript as a reply to the original audio message.
- ~telega-extras-cancel-timer-when-active~: Safely cancels a timer if it's active.
- ~telega-extras-cancel-audio-timers~: Cancels both the transcript check timer and the timeout timer.
- ~telega-extras-open-chat~: Opens a specific chat and optionally navigates to a topic based on names defined in ~telega-extras-chats~.
- ~telega-extras-get-id~: Looks up the numerical chat ID and optionally topic ID based on names provided from ~telega-extras-chats~.
- ~telega-extras-get-last-topic-message~: Retrieves the last message object within a specific topic thread.

* Internal Variables
:PROPERTIES:
:CUSTOM_ID: h:internal-variables
:END:

- ~telega-extras-audio-transcript-timer~: Holds the timer object for periodically checking transcript status.
- ~telega-extras-audio-transcript-timeout-timer~: Holds the timer object for cancelling the transcript check after a timeout.

* Indices
:PROPERTIES:
:CUSTOM_ID: h:indices
:END:

** Function index
:PROPERTIES:
:INDEX: fn
:CUSTOM_ID: h:function-index
:END:

** Variable index
:PROPERTIES:
:INDEX: vr
:CUSTOM_ID: h:variable-index
:END:
