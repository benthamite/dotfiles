#+title: Leo's config

* code overrides
:PROPERTIES:
:ID:       1DDFC928-66D5-4E09-B85C-7844082044D7
:END:

#+begin_src emacs-lisp :tangle (print tlon-init-code-overrides-path)
(
 (:ps/org-id-add-ids-to-headings-in-file . ((ignore)))
 )
#+end_src

* post init
:PROPERTIES:
:ID:       86F0B93D-E2A3-4064-977D-1002602B58F3
:END:

#+begin_src emacs-lisp :tangle (print tlon-init-post-init-path)
(when (eq system-type 'darwin) ;; mac specific settings
  (setq mac-right-option-modifier 'meta)
  (setq mac-command-modifier 'hyper)
  (setq mac-option-modifier 'alt)
  (setq mac-right-command-modifier 'super))
(tool-bar-mode -1)
(global-set-key [kp-delete] 'delete-char)   ;; sets fn-delete to be right-delete
(global-set-key (kbd "<home>") 'beginning-of-line)
(global-set-key (kbd "<end>") 'end-of-line)
(global-set-key (kbd "<S-right>") 'other-window)
(global-set-key (kbd "<S-left>") 'other-window)
(global-set-key (kbd "<A-right>") 'end-of-buffer)
(global-set-key (kbd "<A-left>") 'beginning-of-buffer)
(with-eval-after-load "org"
  (define-key org-mode-map (kbd "<M-right>") nil)
  (define-key org-mode-map (kbd "<M-left>") nil)
  (define-key org-mode-map (kbd "<M-up>") nil)
  (define-key org-mode-map (kbd "<M-down>") nil)
  (define-key org-mode-map (kbd "<M-S-right>") nil)
  (define-key org-mode-map (kbd "<M-S-left>") nil)
  (define-key org-mode-map (kbd "<M-S-up>") nil)
  (define-key org-mode-map (kbd "<M-S-down>") nil)
  (global-set-key (kbd "<H-right>") 'org-metaright)
  (global-set-key (kbd "<H-left>") 'org-metaleft)
  (global-set-key (kbd "<H-up>") 'org-metaup)
  (global-set-key (kbd "<H-down>") 'org-metadown)
  (global-set-key (kbd "<M-right>") 'forward-word)
  (global-set-key (kbd "<M-left>") 'backward-word)
  )
(with-eval-after-load "markdown-mode"
  (define-key markdown-mode-map (kbd "s-u") 'tlon-bae-insert-eawiki-url))
(defvar ps/file-cookies (file-name-concat ps/dir-downloads "cookies.txt"))
(defun ps/internet-archive-download-ACSM ()
  "Download and open ACSM file from Internet Archive URL in kill
ring.

NB: You need to have previously borrowed the book for the command
to work. The command will work even if the book was borrowed for
one hour only."
  (interactive)
  (if (string-search "archive.org" (current-kill 0))
      (progn
        (let* ((prefix "https://archive.org/services/loans/loan/?action=media_url&identifier=")
               (suffix "&format=pdf&redirect=1")
               (id (replace-regexp-in-string
                    "\\(http.*?details/\\)\\([_[:alnum:]]*\\)\\(.*\\)"
                    "\\2"
                    (current-kill 0)))
               (url (concat prefix id suffix))
               (acsm-file (file-name-concat ps/dir-downloads "book.acsm")))
          ;; Download the Internet Archive cookies to a file so `wget' can authenticate:
          ;; askubuntu.com/questions/161778/how-do-i-use-wget-curl-to-download-from-a-site-i-am-logged-into
          ;; Then replace the path below with the location of the downloaded cookies file.
          (save-window-excursion
            (let ((shell-command-buffer-name-async "*internet-archive-download-ACSM*"))
              (async-shell-command
               (format
                "wget --load-cookies='%s' '%s' -O '%s'"
                ps/file-cookies url acsm-file))
              ;; (sleep-for 2)
              ;; (async-shell-command
              ;; (format
              ;; "open %s"
              ;; "/users/cartago/downloads/book.acsm"))
              ))
          (dired ps/dir-downloads)
          ))
    (user-error "You forgot to copy the URL!")))

(setq telega-server-libs-prefix "/Users/cartago/source/td/tdlib")
(setq mac-function-modifier '(:button 2))

;; If Emacs doesn't find an ID, run `M-x org-id-update-id-locations'
(dolist (template `(("xxx" "Tlön: test" entry
		     (id "49adbb3e-b542-4752-a67b-16bc2eb44624")
		     "** TODO %?\n" :empty-lines 1 :prepend t)
		    ("r" "Tlön: RAE" entry
		     (id "604dbb4c-4948-492e-b1cd-84b0a1451b4a")
		     "** TODO %?\n" :empty-lines 1 :prepend t)
		    ("f" "Tlön: FM" entry
		     (id "5d94a97f-701f-4d0d-94ad-ff1b88bf0e82")
		     "** TODO %?\n" :empty-lines 1 :prepend t)
		    ("d" "Tlön: LBDLH" entry
		     (id "0d6d7ebb-bb51-4505-9a29-68b79f8c12de")
		     "** TODO %?\n" :empty-lines 1 :prepend t)
		    ("u" "Tlön: EAN" entry
		     (id "8b9c313a-3630-4b77-b924-a8f7f9e52d8d")
		     "** TODO %?\n" :empty-lines 1 :prepend t)
		    ("h" "Tlön: HEAR" entry
		     (id "f3f14f2f-2b74-4ea7-a84f-4d9aae458201")
		     "** TODO %?\n" :empty-lines 1 :prepend t)
		    ("g" "Tlön: GPE" entry
		     (id "e9b7041f-8721-495f-b5f7-97ad83ae061c")
		     "** TODO %?\n" :empty-lines 1 :prepend t)
		    ("c" "Tlön: Core" entry
		     (id "68f0150e-9b0d-4bab-86c0-2bf878e19d9e")
		     "** TODO %?\n" :empty-lines 1 :prepend t)
		    ("s" "To sort" entry
		     (id "107D27EC-B193-444E-B65B-9B1AD2A7CC65")
		     "** TODO %?\n" :empty-lines 1 :prepend t)
		    ("m" "Tlön: Core: messaging" entry
		     (id "9387B56D-2940-4FB0-91EF-92879D58659E")
		     "** TODO %?\n" :empty-lines 1 :prepend t)
		    ("e" "Tlön: Core: debugging Emacs" entry
		     (id "8402F53C-F547-4705-B79E-24D6286D2C9E")
		     "** TODO %?\n" :empty-lines 1 :prepend t)
		    ("t" "Tlön: Core: Project t" entry
		     (id "12645897-A06F-44DD-876D-0FFC47D0E742")
		     "** TODO %?\n" :empty-lines 1 :prepend t)
		    ("tb" "tlon: bae")
		    ("tbP" "Tlön: BAE: Process topic (via org-capture)" entry
		     (id "63513494-AB03-4B21-ABD6-8EB3073A7973")
		     "** TODO [#5] %c" :immediate-finish t :empty-lines 1 :prepend t :jump-to-captured t)
		    ("tbU" "Tlön: BAE: Publish topic (via org-capture)" entry
		     (id "E02FC35D-DE88-4848-8EC2-AD82A2F32827")
		     "** TODO [#5] %c" :immediate-finish t :empty-lines 1 :prepend t :jump-to-captured t)
		    ("tbV" "Tlön: BAE: Review topic (via org-capture)" entry
		     (id "51A1AD3A-5D03-48D1-A52F-AF43528FFA27")
		     "** TODO [#5] %c" :immediate-finish t :empty-lines 1 :prepend t :jump-to-captured t)
		    ("tbR" "Tlön: BAE: Revise topic (via org-capture)" entry
		     (id "E3205CCE-70EB-4CD8-B276-6C391409FB40")
		     "** TODO [#5] %c" :immediate-finish t :empty-lines 1 :prepend t :jump-to-captured t)
		    ("tbW" "Tlön: BAE: Rewrite topic (via org-capture)" entry
		     (id "7480E01B-31CF-477D-8E49-FC71F8AA11A1")
		     "** TODO [#5] %c" :immediate-finish t :empty-lines 1 :prepend t :jump-to-captured t)
		    ("tbT" "Tlön: BAE: Translate topic (via org-capture)" entry
		     (id "0805A30F-2F57-483B-8B7B-4F1755B195B1")
		     "** TODO [#5] %c" :immediate-finish t :empty-lines 1 :prepend t :jump-to-captured t)
		    ("tbI" "Tlön: BAE: Import topic (via org-capture)" entry
		     (id "18A94B9A-E256-4684-A36C-ED26FCE1AD08")
		     "** TODO [#5] %c" :immediate-finish t :empty-lines 1 :prepend t :jump-to-captured t)
		    ("tbM" "Tlön: BAE: Misc [via org-capture] Misc" entry
		     (id "7CCD6226-DB0A-4742-9277-955FCB276137")
		     "** TODO [#5] %a\n" :empty-lines 1 :prepend t  :immediate-finish t)
		    ("p" "GPT-4" entry
		     (id "FDF39DE4-293F-47B5-9D6D-AA4D68F99CF5")
		     "* %?\n\n" :empty-lines 1 :prepend t :jump-to-captured t)))
  (add-to-list 'org-capture-templates template))

(defun ps/org-capture-before-finalize-hook-function ()
  "Define behavior of `org-capture-before-finalize-hook'."
  (pcase (plist-get org-capture-plist :key)
    ("p"
     (org-ai-mode)
     (org-narrow-to-subtree)
     (forward-line)
     (forward-line)
     (ps/yasnippet-expand-by-key "ai")
     (message "finished"))))  
  
(defhydra hydra-org-work
  (:hint nil
         :idle 0
         :color blue)
  "Tlön dashboard"
  ("b" (org-id-goto "49adbb3e-b542-4752-a67b-16bc2eb44624") "BAE")
  ("r" (org-id-goto "604dbb4c-4948-492e-b1cd-84b0a1451b4a") "RAE")
  ("f" (org-id-goto "5d94a97f-701f-4d0d-94ad-ff1b88bf0e82") "FM")
  ("d" (org-id-goto "0d6d7ebb-bb51-4505-9a29-68b79f8c12de") "LBDLHD")
  ("u" (org-id-goto "8b9c313a-3630-4b77-b924-a8f7f9e52d8d") "EAN")
  ("h" (org-id-goto "f3f14f2f-2b74-4ea7-a84f-4d9aae458201") "HEAR")
  ("g" (org-id-goto "e9b7041f-8721-495f-b5f7-97ad83ae061c") "GPE")
  ("c" (org-id-goto "68f0150e-9b0d-4bab-86c0-2bf878e19d9e") "Core")
  ("s" (org-id-goto "107D27EC-B193-444E-B65B-9B1AD2A7CC65") "To sort")
  ("m" (org-id-goto "9387B56D-2940-4FB0-91EF-92879D58659E") "Messaging")
  ("e" (org-id-goto "8402F53C-F547-4705-B79E-24D6286D2C9E") "debugging Emacs")
  ("t" (org-id-goto "12645897-A06F-44DD-876D-0FFC47D0E742") "Project t")
  )


(global-set-key (kbd "H-;") 'hydra-org-work/body)
(put 'scroll-left 'disabled nil)


(setq telega-server-libs-prefix "/Users/cartago/source/td/tdlib")

(ps/modus-themes-load-theme-conditionally)

(setq org-cite-global-bibliography (list ps/file-tlon-bibliography-new
      ps/file-tlon-bibliography-old))

(setq warning-minimum-level :error)
#+end_src

* tangle flags
:PROPERTIES:
:ID:       A4E7C5AD-1E55-4C6F-B0E5-8320D282A886
:END:

#+begin_src emacs-lisp :tangle (print tlon-init-tangle-flags-path)
(
 (:ps/anki-editor . nil)
 (:ps/copilot . nil)
 (:ps/corfu-terminal . nil)
 (:ps/corfu-doc-terminal . nil)
 (:ps/erc . nil)
 (:ps/espotify . nil)
 (:ps/hammy . nil)
 (:ps/keytar . nil)
 (:ps/lsp-grammarly . t)
 (:ps/midnight . nil)
 (:ps/mu4e . nil)
 (:ps/org-gcal . nil)
 (:ps/org-roam . nil)
 (:ps/org2blog . nil)
 (:ps/orgmdb . nil)
 (:ps/remember . nil)
 (:ps/slack . nil)
 (:ps/twittering-mode . t)
 (:ps/vulpea . nil)
 )
#+end_src

* variables override
:PROPERTIES:
:ID:       0B85812B-1620-4F40-A5BA-534626B6B112
:END:

#+begin_src emacs-lisp :tangle (print tlon-init-variables-override-path)
(
 (ps/personal-name . "Leonardo Picón")
 (ps/personal-gmail . "leonardodecartago@gmail.com")
 (ps/personal-email . "")
 (ps/personal-phone . "‭+34 635 304 503‬")
 (ps/personal-gpe-email . "leo@globalprioritiesencyclopedia.org")
 (ps/dir-root . (file-name-as-directory (expand-file-name "/")))
 (ps/dir-system-apps . (file-name-concat ps/dir-root "Applications/"))
 (ps/dir-user . (file-name-concat ps/dir-root "Users/cartago/"))
 (ps/dir-dropbox . (file-name-concat ps/dir-user "Library/CloudStorage/Dropbox/"))
 (ps/dir-google-drive . (file-name-concat ps/dir-user "Google Drive/"))
 (ps/dir-downloads . (file-name-concat ps/dir-user "Downloads/"))
 (ps/dir-tlon-biblioteca-altruismo-eficaz . (file-name-concat ps/dir-user "source/biblioteca-altruismo-eficaz/"))
 (ps/dir-emacs .   user-emacs-directory)
 (ps/dir-google-drive . (file-name-concat ps/dir-user "google drive/"))
 (ps/dir-music . (file-name-concat ps/dir-google-drive "music/"))
 (ps/dir-movies . (file-name-concat ps/dir-user "movies/"))
 (ps/dir-finance . (file-name-concat ps/dir-google-drive "finance/"))
 (ps/dir-audiobooks . (file-name-concat ps/dir-google-drive "audiobooks/"))
 (ps/dir-music-tango . (file-name-concat ps/dir-music "tango/"))
 (ps/dir-music-popular . (file-name-concat ps/dir-music "popular/"))
 (ps/dir-music-classical . (file-name-concat ps/dir-music "classical/"))
 (ps/dir-music-to-sort . (file-name-concat ps/dir-music "to sort/"))
 (ps/dir-anki . "")
 (ps/dir-archive . "")
 (ps/dir-inactive . "")
 (ps/dir-bibliography . (file-name-concat ps/dir-dropbox "bibliography/"))
 (ps/dir-csl-styles . (file-name-concat ps/dir-bibliography "styles/"))
 (ps/dir-csl-locales . (file-name-concat ps/dir-bibliography "locales/"))
 (ps/dir-blog . "")
 (ps/dir-journal . "")
 (ps/dir-wiki . "")
 (ps/dir-wiki-entries . "")
 (ps/dir-wiki-references . "")
 (ps/dir-dotfiles . (file-name-concat ps/dir-user "source/dotfiles/"))
 (ps/dir-dotemacs . (file-name-concat ps/dir-user "source/dotfiles/emacs/"))
 (ps/dir-karabiner . "")
 (ps/dir-bibliographic-notes .   (file-name-concat ps/dir-dropbox "bibliographic-notes/"))
 (ps/dir-yasnippets . (file-name-concat ps/dir-dotemacs "yasnippets/"))
 (ps/dir-abbrev . (file-name-concat ps/dir-dotemacs "abbrev/"))
 (ps/dir-private . (file-name-concat ps/dir-dropbox "private/"))
 (ps/dir-ledger . (file-name-concat ps/dir-dropbox "ledger/"))
 (ps/dir-notes . "")
 (ps/dir-people . "")
 (ps/dir-android . "")
 (ps/dir-ade . (file-name-concat ps/dir-user "Documents/Digital Editions/"))
 (ps/dir-library-pdf . (file-name-concat ps/dir-google-drive "library-pdf/"))
 (ps/dir-library-html . (file-name-concat ps/dir-google-drive "library-html/"))
 (ps/dir-library-media . (file-name-concat ps/dir-google-drive "library-media/"))
 (ps/dir-emacs-var . (file-name-concat ps/dir-emacs "var/"))
 (ps/dir-source . (file-name-concat ps/dir-user "source/"))
 (ps/dir-tlon-docs . (file-name-concat ps/dir-source "tlon-docs/"))
 (ps/dir-translation-server . (file-name-concat ps/dir-source "translation-server/"))
 (ps/dir-PW . "")
 (ps/dir-google-drive-tlon . (file-name-concat ps/dir-google-drive "tlon/"))
 (ps/dir-google-drive-tlon-BAE . (file-name-concat ps/dir-google-drive-tlon "BAE/"))
 (ps/dir-google-drive-tlon-EAN . (file-name-concat ps/dir-google-drive-tlon "EAN/"))
 (ps/dir-google-drive-tlon-FM . (file-name-concat ps/dir-google-drive-tlon "FM/"))
 (ps/dir-google-drive-tlon-GPE . (file-name-concat ps/dir-google-drive-tlon "GPE/"))
 (ps/dir-google-drive-tlon-HEAR . (file-name-concat ps/dir-google-drive-tlon "HEAR/"))
 (ps/dir-google-drive-tlon-LBDLH . (file-name-concat ps/dir-google-drive-tlon "LBDLH/"))
 (ps/dir-google-drive-tlon-LP . (file-name-concat ps/dir-google-drive-tlon "LP/"))
 (ps/dir-google-drive-tlon-RAE . (file-name-concat ps/dir-google-drive-tlon "RAE/"))
 (ps/dir-google-drive-tlon-RCG . (file-name-concat ps/dir-google-drive-tlon "RCG/"))
 (ps/dir-dropbox-tlon . (file-name-concat ps/dir-dropbox "tlon/"))
 (ps/dir-google-drive-tlon-core . (file-name-concat ps/dir-google-drive-tlon "core/"))
 (ps/dir-google-drive-tlon-fede . (file-name-concat ps/dir-google-drive-tlon "fede/"))
 (ps/dir-google-drive-tlon-leo . (file-name-concat ps/dir-google-drive-tlon "leo/"))
 (ps/dir-dropbox-tlon-core . (file-name-concat ps/dir-dropbox-tlon "core/"))
 (ps/dir-dropbox-tlon-leo . (file-name-concat ps/dir-dropbox-tlon "leo/"))
 (ps/dir-dropbox-tlon-fede . (file-name-concat ps/dir-dropbox-tlon "fede/"))
 (ps/dir-dropbox-tlon-ledger . (file-name-concat ps/dir-dropbox-tlon-core "ledger/"))
 (ps/dir-dropbox-tlon-pass . (file-name-concat ps/dir-dropbox-tlon-core "pass/"))
 (ps/dir-dropbox-tlon-BAE . (file-name-concat ps/dir-dropbox-tlon "BAE/"))
 (ps/dir-dropbox-tlon-EAN . (file-name-concat ps/dir-dropbox-tlon "EAN/"))
 (ps/dir-dropbox-tlon-FM . (file-name-concat ps/dir-dropbox-tlon "FM/"))
 (ps/dir-dropbox-tlon-GPE . (file-name-concat ps/dir-dropbox-tlon "GPE/"))
 (ps/dir-dropbox-tlon-HEAR . (file-name-concat ps/dir-dropbox-tlon "HEAR/"))
 (ps/dir-dropbox-tlon-LBDLH . (file-name-concat ps/dir-dropbox-tlon "LBDLH/"))
 (ps/dir-dropbox-tlon-LP . (file-name-concat ps/dir-dropbox-tlon "LP/"))
 (ps/dir-dropbox-tlon-RAE . (file-name-concat ps/dir-dropbox-tlon "RAE/"))
 (ps/dir-dropbox-tlon-RCG . (file-name-concat ps/dir-dropbox-tlon "RCG/"))
 (ps/dir-emacs-local . (file-name-concat ps/dir-emacs "local/"))
 (ps/dir-org .   ps/dir-dropbox-tlon-leo)
 (ps/dir-org-roam . "")
 (ps/dir-org-images . "")
 (ps/dir-websites . "")
 (ps/dir-calibre . (file-name-concat ps/dir-downloads "Calibre/"))
 (ps/dir-all-repos . ps/dir-people)
 (ps/file-notes . (file-name-concat ps/dir-org "notes.org"))
 (ps/file-inbox-desktop . (file-name-concat ps/dir-android "inbox-desktop.org"))
 (ps/file-inbox-mobile . (file-name-concat ps/dir-android "inbox-mobile.org"))
 (ps/file-calendar . (file-name-concat ps/dir-android "calendar.org"))
 (ps/file-feeds-pablo . "")
 (ps/file-tlon-feeds . (file-name-concat ps/dir-dropbox-tlon-core "feeds.org"))
 (ps/file-anki . "")
 (ps/file-init . (file-name-concat ps/dir-dotemacs "init.el"))
 (ps/file-config . (file-name-concat ps/dir-dotemacs "config.org"))
 (ps/file-karabiner . "")
 (ps/file-karabiner-edn . "")
 (ps/file-bibliography . (file-name-concat ps/dir-bibliography "old.bib"))
 (ps/file-bibliography-old . (file-name-concat ps/dir-bibliography "old.bib"))
 (ps/file-bibliography-new . (file-name-concat ps/dir-bibliography "new.bib"))
 (ps/file-bibliography-emacs . (file-name-concat ps/dir-bibliography "emacs.bib"))
 (ps/file-wiki-notes . (file-name-concat ps/dir-wiki "wiki-notes.org"))
 (ps/file-wiki-published . (file-name-concat ps/dir-wiki "wiki-published.org"))
 (ps/file-wiki-help . (file-name-concat ps/dir-wiki "wiki-help.org"))
 (ps/file-library . (file-name-concat ps/dir-notes "library.org"))
 (ps/file-quotes . (file-name-concat ps/dir-blog "quotes.org"))
 (ps/file-films . (file-name-concat ps/dir-notes "films.org"))
 (ps/file-tlon-tareas-leo . (file-name-concat ps/dir-dropbox-tlon-leo "tareas.org"))
 (ps/file-tlon-tareas-fede . (file-name-concat ps/dir-dropbox-tlon-fede "tareas.org"))
 (ps/file-org2blog . (file-name-concat ps/dir-blog ".org2blog.org"))
 (ps/file-straight-profile . "")
 (ps/file-orb-noter-template . (file-name-concat ps/dir-bibliography "orb-noter-template.org"))
 (ps/file-orb-capture-template . (file-name-concat ps/dir-bibliographic-notes "${citekey}.org"))
 (ps/file-bookmarks . (file-name-concat ps/dir-dropbox "bookmarks"))
 (ps/file-variables . (file-name-concat ps/dir-dotemacs "variables.el"))
 (ps/file-ledger . (file-name-concat ps/dir-dropbox-tlon-leo "journal.ledger"))
 (ps/file-ledger-db . (file-name-concat ps/dir-ledger ".pricedb"))
 (ps/file-metaculus . (file-name-concat ps/dir-notes "metaculus.org"))
 (ps/file-gpe . (file-name-concat ps/dir-notes "global-priorities-encyclopedia.org"))
 (ps/file-fm . (file-name-concat ps/dir-notes "future-matters.org"))
 (ps/file-ffrp . (file-name-concat ps/dir-notes "future-fund-regranting-program.org"))
 (ps/file-rcg . (file-name-concat ps/dir-notes "riesgos-catastróficos-globales.org"))
 (ps/file-ean . (file-name-concat ps/dir-notes "ea.news.org"))
 (ps/file-cookies . "/Users/cartago/downloads/cookies.txt")
 (ps/file-work . (file-name-concat ps/dir-notes "work-dashboard.org"))
 (ps/file-tlon-ledger-schedule-file . (file-name-concat ps/dir-dropbox-tlon-ledger "ledger-schedule.ledger"))
 (ps/file-tlon-docs-bae . (file-name-concat ps/dir-tlon-docs "bae.org"))
 (ps/file-tlon-docs-core . (file-name-concat ps/dir-tlon-docs "core.org"))
 (ps/file-tlon-ledger . (file-name-concat ps/dir-dropbox-tlon-ledger "tlon.ledger"))
 (ps/file-tlon-bae . ps/file-tlon-tareas-leo)
 (ps/face-fixed-pitch . "Source Code Pro")
 (ps/face-variable-pitch . "Source Serif Pro")
 (ps/monitor-type . (cdr (assoc 'name (frame-monitor-attributes))))
 (ps/ledger-active-currencies . '("USD" "EUR" "GBP" "MXN" "ARS"))
 (ps/frame-width-threshold .    350)
 (ps/new-empty-buffer-major-mode . 'org-mode)
 (ps/forge-owned-accounts . "worldsaround")
 (ps/personal-signature . "

,#+begin_signature
--
,*Leo*
,#+end_signature")
 )
#+end_src


* local variables
:PROPERTIES:
:ID:       A3959E87-841E-44A5-B174-8B53F81F8979
:END:
# Local Variables:
# eval: (ps/buffer-local-set-key (kbd "s-y") 'org-decrypt-entry)
# org-crypt-key: "tlon.shared@gmail.com"
# End:
