#+PROPERTY: header-args :tangle (print paths-file-karabiner-edn)
#+TITLE:Pablo's Karabiner modifications
#+AUTHOR: Pablo Stafforini
:PROPERTIES:
:TOC:      ignore
:ARCH:      ignore
:END:

* Introduction
:PROPERTIES:
:ID:       F8A496BC-A40E-4362-B36B-9B7941844ACC
:END:
:LOGBOOK:
CLOCK: [2022-07-01 Fri 11:06]--[2022-07-01 Fri 11:24] =>  0:18
CLOCK: [2021-02-28 Sun 19:56]--[2021-02-28 Sun 20:00] =>  0:04
:END:

Steps to try my layout:

1. If you have a normal keyboard, proceed to step (2). If you have a special keyboard like the Moonlandeer or the Kinesis Advantage, use their configuration software to map the thumb keys as follows:
     - left-hand thumb keys:   
         - left key: ~left control~
         - middle key: ~left option~
         - right key: ~left command~
     - right-hand thumb keys:
         - left key: ~spacebar~
         - middle key: ~right command~
         - right key: ~right option~
2. Install [[https://karabiner-elements.pqrs.org/][Karabiner-Elements]].
3. Install [[https://github.com/yqrashawn/GokuRakuJoudo][goku]].
4. Clone this repo and load the config in ~dotfiles/karabiner/karabiner.edn~.

Note: the ~karabiner.edn~ file is generated by ‚Äú[[https://orgmode.org/manual/Extracting-Source-Code.html][tangling]]‚Äù the code blocks in the ~modifications.org~ file, which is the file you are currently reading. If you use Emacs and would like to play around with my config, you may want to edit this file and tangle it, instead of editing ~karabiner.edn~ directly.

** Table of contents
:PROPERTIES:
:TOC:      :include all :depth 4 :force (nothing) :ignore (nothing) :local (nothing)
:ID:       8810B51F-81BB-4AB9-A525-C39EBE079BD3
:END:
:CONTENTS:
- [[#introduction][Introduction]]
  - [[#table-of-contents][Table of contents]]
- [[#profiles][Profiles]]
  - [[#alone][alone]]
  - [[#held][held]]
  - [[#delay][delay]]
  - [[#sim][sim]]
  - [[#simlayer-threshold][simlayer threshold]]
- [[#tos][Tos]]
- [[#modifiers][Modifiers]]
- [[#applications][Applications]]
- [[#devices][Devices]]
- [[#layers][Layers]]
- [[#simlayers][Simlayers]]
- [[#templates][Templates]]
- [[#main][Main]]
  - [[#individual-bindings][individual bindings]]
    - [[#caps_lock][caps_lock]]
    - [[#left_control][left_control]]
    - [[#left_option][left_option]]
    - [[#left_command][left_command]]
    - [[#spacebar][spacebar]]
    - [[#right_command][right_command]]
    - [[#right_option][right_option]]
    - [[#mouse][mouse]]
  - [[#layers][layers]]
    - [[#b-mode][b-mode]]
    - [[#f-mode][f-mode]]
    - [[#j-mode][j-mode]]
    - [[#k-mode][k-mode]]
    - [[#m-mode][m-mode]]
    - [[#p-mode][p-mode]]
    - [[#q-mode][q-mode]]
    - [[#v-mode][v-mode]]
    - [[#x-mode][x-mode]]
    - [[#y-mode][y-mode]]
    - [[#z-mode][z-mode]]
    - [[#comma-mode][comma-mode]]
    - [[#period-mode][period-mode]]
    - [[#semicolon-mode][semicolon-mode]]
    - [[#slash-mode][slash-mode]]
    - [[#end][end]]
- [[#appendices][Appendices]]
  - [[#useful-links][Useful links]]
    - [[#tutorials][Tutorials]]
    - [[#configuration-files][Configuration files]]
    - [[#meta][Meta]]
  - [[#goku-modifier-letters][Goku modifier letters]]
  - [[#list-of-keys][List of keys]]
  - [[#letter-frequencies][Letter frequencies]]
- [[#local-variables][Local variables]]
:END:

* Profiles
:PROPERTIES:
:ID:       B42AA5C9-7EB9-415A-ACFE-BBB532055EFE
:END:
:LOGBOOK:
CLOCK: [2021-07-21 Wed 11:07]--[2021-07-21 Wed 11:30] =>  0:23
CLOCK: [2021-03-19 Fri 19:11]--[2021-03-19 Fri 20:01] =>  0:50
CLOCK: [2021-03-19 Fri 13:13]--[2021-03-19 Fri 13:17] =>  0:04
CLOCK: [2021-03-19 Fri 12:47]--[2021-03-19 Fri 13:10] =>  0:23
:END:

It seems that there is no way to set the relevant delay for a simlayer, so the only alternative is to recreate the ~spacebar~ simlayer functionality as a series of individual modifications. Then the delay would, I believe, be controlled by the ~sim~ variable (since ~spacebar~ + each of the keys it currently modifies in the simlayer would be considered simultaneous key presses).

#+begin_src clojure
{
:profiles {
           :Default {:default true
#+end_src

** alone
:PROPERTIES:
:ID:       79309E80-010E-4979-871B-250DC69E83F6
:END:
:LOGBOOK:
CLOCK: [2021-03-19 Fri 20:35]--[2021-03-19 Fri 21:45] =>  1:10
:END:

[[https://karabiner-elements.pqrs.org/docs/json/complex-modifications-manipulator-definition/to-if-alone/][alone]] (~to_if_alone_timeout_miliseconds~): if a key is held for at least this long, releasing it will not trigger its alone mapping.

Example:

#+begin_src clojure :tangle no
{:des "caps -> escape (alone) left_option (held)"
 :rules [
         [:##caps_lock :left_option nil {:alone :escape}]
         ]}
#+end_src

If ~caps_lock~ is held for at least 100 miliseconds, it will not trigger ~escape~.

#+begin_src clojure
:alone   200
#+end_src

** held
:PROPERTIES:
:ID:       91903AB1-3031-492E-A0E1-7896F0AB783D
:END:

[[https://karabiner-elements.pqrs.org/docs/json/complex-modifications-manipulator-definition/to-if-held-down/][held]] (~to_if_held_down_threshold_miliseconds~): if a key is held for at least this long, it will trigger its held mapping.

#+begin_src clojure
:held    350
#+end_src

** delay
:PROPERTIES:
:ID:       F77B2B06-ECE4-4B51-842E-AFF8A23AC6AD
:END:

[[https://karabiner-elements.pqrs.org/docs/json/complex-modifications-manipulator-definition/to-delayed-action/][delay]] (~to_delayed_action_delay_miliseconds~): for rules defining some behavior when a succession of two keys is pressed, the second key will trigger the behavior if pressed within this many miliseconds after the first key. I haven't defined any such rules, so the value below has no effect on my configuration.

#+begin_src clojure
:delay   300
#+end_src

** sim
:PROPERTIES:
:ID:       2385C6F9-C9AD-4613-B9C0-E67C4D99CF2F
:END:
:LOGBOOK:
CLOCK: [2021-07-16 Fri 21:54]--[2021-07-16 Fri 22:04] =>  0:10
:END:

[[https://karabiner-elements.pqrs.org/docs/json/complex-modifications-manipulator-definition/from/simultaneous/][sim]] (~simultaneous_threshold_miliseconds~): keys need to be pressed within these many miliseconds to be considered simultaneous. This doesn't apply to modifier keys, but to "normal" keys (e.g. ~q~ + ~k~ to launch Karabiner).

#+begin_src clojure
:sim   150
#+end_src

** simlayer threshold
:PROPERTIES:
:ID:       4A9E508A-75F3-4D99-9C55-D40C51F51702
:END:

#+begin_src clojure
:simlayer-threshold 250}} ; default
#+end_src

* Tos
:PROPERTIES:
:ID:       50943D5C-2390-4EAE-9A1A-D3C97A3C5EE9
:END:

#+begin_src clojure
:tos {
      ;; macOS
      :‚áß {:key :left_shift}
      :‚åò {:key :left_command}
      :‚å• {:key :left_option}
      :‚åÉ {:key :left_control}
      :üåê {:key :fn}
      :‚åò‚åÉ {:key :Cleft_control}

      ;; Emacs
      :S- {:key :left_shift} ; S
      :A- {:key :right_command} ; Q
      :C- {:key :left_control} ; T
      :H- {:key :left_command} ; C
      :M- {:key :left_option} ; O
      :s- {:key :right_control} ; W
      :A-C- {:key :!Qleft_control}
      :A-H- {:key :!Qleft_command}
      :A-M- {:key :!Qleft_option}
      :A-s- {:key :!Qright_control}

      ;; symbols
      :exclamation_mark {:key :!S1}
      :at_sign {:key :!S2}
      :number_sign {:key :!S3}
      :dollar_sign {:key :!S4}
      :percent_sign {:key :!S5}
      :caret {:key :!S6}
      :ampersand {:key :!S7}
      :asterisk {:key :!S8}
      :open_parenthesis {:key :!S9}
      :close_parenthesis {:key :!S0}
      :underscore {:key :!Shyphen}
      :plus_sign {:key :!Sequal_sign}
      :open_brace {:key :!Sopen_bracket}
      :close_brace {:key :!Sclose_bracket}
      :vertical_bar {:key :!Sbackslash}
      :double_quote {:key :!Squote}
      :open_double_quote {:key :!Eopen_bracket}
      :close_double_quote {:key :!SEopen_bracket}
      :open_single_quote {:key :!Eclose_bracket}
      :close_single_quote {:key :!SEclose_bracket}
      :tilde {:key :!Sgrave_accent_and_tilde}
      :en_dash {:key :!Ehyphen}
      :em_dash {:key :!SEhyphen}

      ;; diacritics
      ;; note that many of the mappings below require ABC - Extended as the macOS input source
      :overdot {:key :!Ew}
      :underdot {:key :!Ex}
      :accute_accent {:key :!Ee}
      :double_acute_accent {:key :!Ej}
      :grave_accent {:key :!Egrave_accent_and_tilde}
      :umlaut {:key :!Eu}
      :undercomma {:key :!Ep}
      :underbar {:key :!Eh}
      :macron {:key :!Ea}
      :breve {:key :!Eb}
      :hook {:key :!Ez}
      :horn {:key :!Ei}
      :circumflex {:key :!E6}
      :cedilla {:key :!Ec}
      :overring {:key :!Ek}
      :stroke {:key :!El}
      :caron {:key :!Ev}
      :ogonek {:key :!Em}
      :tilde_accent {:key :!En}

      ;; ‚Äúspecial‚Äù chars
      :√∏ {:key :!Eo}
      :≈ì {:key :!Eq}
      :√ü {:key :!Es}
      :√∞ {:key :!Ed}
      :√æ {:key :!Et}
      :¬° {:key :!E1}
      :¬ø {:key :!ESslash}
      :¬´ {:key :!Ebackslash}
      :¬ª {:key :!SEbackslash}
      :‚Ä¢ {:key :!O8}
      :¬£ {:key :!E3}
      :‚Ç¨ {:key :!ES2}
      :‚Ä¶ {:key :!Esemicolon}

      ;; math
      := {:key :equal_sign}
      :+ {:key :!Sequal_sign}
      :‚â† {:key :!Eequal_sign}
      :√∑ {:key :!Eslash}
      :¬± {:key :!ESequal_sign}
      :‚â§ {:key :!Ecomma}
      :‚â• {:key :!Eperiod}
      }
#+end_src

* Modifiers
:PROPERTIES:
:ID:       60141786-0B72-4724-B80A-56F4729D3BB3
:END:

#+begin_src clojure
:modifiers {
            ;; macOS
            :‚áß [:left_shift]
            :‚åò [:left_command]
            :‚å• [:left_option]
            :‚åÉ [:left_control]
            :‚áß‚åò [:left_shift :left_command]
            :‚áß‚å• [:left_shift :left_option]
            :‚áß‚åÉ [:left_shift :left_control]
            :‚åò‚å• [:left_command :left_option]
            :‚åò‚åÉ [:left_command :left_control]
            :‚å•‚åÉ [:left_option :left_control]
            :‚áß‚åò‚å• [:left_shift :left_command :left_option]
            :‚áß‚åò‚åÉ [:left_shift :left_command :left_control]
            :‚áß‚å•‚åÉ [:left_shift :left_option :left_control]
            :‚åò‚å•‚åÉ [:left_command :left_option :left_control]
            :‚áß‚åò‚å•‚åÉ [:left_shift :left_command :left_option :left_control]

            ;; Emacs
            :S- [:left_shift]
            :A- [:right_command]
            :C- [:left_control]
            :H- [:left_command]
            :M- [:left_option]
            :s- [:right_control]
            :A-C- [:right_command :left_control]
            :A-H- [:right_command :left_command]
            :A-M- [:right_command :left_option]
            :A-s- [:right_command :right_control]
            :C-H- [:left_control :left_command]
            :C-M- [:left_control :left_option]
            :C-s- [:left_control :right_control]
            :H-M- [:left_command :left_option]
            :H-s- [:left_command :right_control]
            :M-s- [:left_option :right_control]
            :A-C-H- [:right_command :left_control :left_command]
            :A-C-M- [:right_command :left_control :left_option]
            :A-C-s- [:right_command :left_control :right_control]
            :A-H-M- [:right_command :left_command :left_option]
            :A-H-s- [:right_command :left_command :right_control]
            :A-M-s- [:right_command :left_option :right_control]
            :C-H-M- [:left_control :left_command :left_option]
            :C-H-s- [:left_control :left_command :right_control]
            :C-M-s- [:left_control :left_option :right_control]
            :H-M-s- [:left_command :left_option :right_control]
            :A-C-H-M- [:right_command :left_control :left_command :left_option]
            :A-C-H-s- [:right_command :left_control :left_command :right_control]
            :A-C-M-s- [:right_control :left_control :right_command :left_option]
            :A-H-M-s- [:right_command :left_command :left_option :right_control]
            :C-H-M-s- [:left_control :left_command :left_option :right_control]
            :A-C-H-M-s- [:left_control :left_command :left_option :right_control :right_command]
            }
#+end_src

* Applications
:PROPERTIES:
:ID:       55F2D50D-3B4B-4AF9-A800-E2E4A2F22D63
:END:

#+begin_src clojure
:applications {
               :anki ["net.ankiweb.dtop"]
               :chrome ["com.google.Chrome"]
               :emacs ["org.gnu.Emacs"]
               :firefox ["org.mozilla.firefox"]
               :safari ["com.apple.Safari"]
               :steam [:paths ".*/Application Support/Steam.*"]
               }
#+end_src

* Devices
:PROPERTIES:
:ID:       EDA2FC19-4435-4077-8AC9-35A8A1199FCB
:END:

#+begin_src clojure
 :devices {
          :corne [{:vendor_id 7504}]
          :moonlander [{:vendor_id 12951}]
          }
#+end_src

* Layers
:PROPERTIES:
:ID:       369A7942-816B-433F-92F7-46EA80BC1CEB
:END:
:LOGBOOK:
CLOCK: [2022-06-07 Tue 14:51]--[2022-06-07 Tue 15:24] =>  0:33
CLOCK: [2021-07-23 Fri 09:42]--[2021-07-23 Fri 10:00] =>  0:18
CLOCK: [2021-07-23 Fri 08:40]--[2021-07-23 Fri 09:27] =>  0:47
CLOCK: [2021-07-14 Wed 12:10]--[2021-07-14 Wed 12:49] =>  0:39
CLOCK: [2021-07-13 Tue 09:00]--[2021-07-13 Tue 09:19] =>  0:19
CLOCK: [2021-06-15 Tue 19:28]--[2021-06-15 Tue 19:40] =>  0:12
CLOCK: [2021-03-20 Sat 21:48]--[2021-03-20 Sat 21:56] =>  0:08
:END:

#+begin_src clojure
:layers {
         :k-mode {:key :quote :condi :chrome}
         }
#+end_src

* Simlayers
:PROPERTIES:
:ID:       41B05E5F-6567-4616-9AD9-0398AA66F55A
:END:

#+begin_src clojure
:simlayers {
            :b-mode {:key :b}
            :f-mode {:key :f}
            :j-mode {:key :j}
            :k-mode {:key :k}
            :m-mode {:key :m}
            :p-mode {:key :p}
            :q-mode {:key :q}
            :v-mode {:key :v}
            :x-mode {:key :x :condi :emacs}
            :y-mode {:key :y}
            :z-mode {:key :z}
            :comma-mode {:key :comma :condi :emacs}
            :period-mode {:key :period}
            :semicolon-mode {:key :semicolon}
            :slash-mode {:key :slash}
            }
#+end_src

* Templates
:PROPERTIES:
:ID:       B03B897C-779E-431A-B78A-466935EF011A
:END:

#+begin_src clojure
:templates {:alfred "osascript -e 'tell application \"Alfred 4\" to run trigger \"%s\" in workflow \"%s\" with argument \"%s\"'"
            :km "osascript -e 'tell application \"Keyboard Maestro Engine\" to do script \"%s\"'"
            :open "open \"%s\""
            :insert "~/Library/CloudStorage/Dropbox/dotfiles/bin/char_input \"%s\""
            }
#+end_src

Note that the ~:insert~ template inserts an arbitrary character by calling a bash script that in turn calls an AppleScript. There may be a simpler way of doing this, but that‚Äôs how I managed to do it. Here are the scripts I'm using:

#+begin_src bash :tangle no
#!/bin/bash
osascript $HOME/Library/Scripts/inputCharacter.scpt "$1"
#+end_src

#+begin_src applescript :tangle no
on run argv
    set the clipboard to (item 1 of argv)
    tell application "System Events"
        keystroke "v" using {command down}
    end tell
end run
#+end_src

* Main
:PROPERTIES:
:ID:       43502060-D6EE-479A-8F1B-080A37DD85C4
:END:
:LOGBOOK:
CLOCK: [2022-05-07 Sat 10:30]--[2022-05-07 Sat 12:00] =>  1:30
CLOCK: [2021-07-25 Sun 13:33]--[2021-07-25 Sun 13:44] =>  0:11
CLOCK: [2021-03-20 Sat 20:47]--[2021-03-20 Sat 20:59] =>  0:12
CLOCK: [2021-02-26 Fri 12:43]--[2021-02-26 Fri 13:02] =>  0:19
:END:

#+begin_src clojure
:main [
#+end_src

** individual bindings
:PROPERTIES:
:ID:       BEA53755-930D-4A90-B3AD-18D8E6A1B301
:END:
:LOGBOOK:
CLOCK: [2022-08-04 Thu 22:29]--[2022-08-05 Fri 00:15] =>  1:46
CLOCK: [2022-06-09 Thu 16:12]--[2022-06-09 Thu 16:12] =>  0:00
CLOCK: [2022-05-07 Sat 13:53]--[2022-05-07 Sat 14:18] =>  0:25
CLOCK: [2022-05-06 Fri 22:21]--[2022-05-06 Fri 22:45] =>  0:24
CLOCK: [2021-07-04 Sun 11:26]--[2021-07-04 Sun 11:52] =>  0:26
CLOCK: [2021-07-04 Sun 11:18]--[2021-07-04 Sun 11:23] =>  0:05
CLOCK: [2021-06-15 Tue 18:53]--[2021-06-15 Tue 18:55] =>  0:02
CLOCK: [2021-06-03 Thu 07:50]--[2021-06-03 Thu 08:14] =>  0:24
CLOCK: [2021-02-26 Fri 17:08]--[2021-02-26 Fri 17:34] =>  0:26
CLOCK: [2021-02-26 Fri 10:21]--[2021-02-26 Fri 10:40] =>  0:19
CLOCK: [2021-02-25 Thu 16:23]--[2021-02-25 Thu 17:17] =>  0:54
CLOCK: [2021-02-25 Thu 15:59]--[2021-02-25 Thu 16:19] =>  0:20
CLOCK: [2021-02-09 Tue 17:33]--[2021-02-09 Tue 17:42] =>  0:09
CLOCK: [2021-06-02 Wed 10:15]--[2021-06-02 Wed 10:26] =>  0:11
CLOCK: [2021-03-30 Tue 14:44]--[2021-03-30 Tue 15:00] =>  0:16
CLOCK: [2021-03-22 Mon 18:12]--[2021-03-22 Mon 18:45] =>  0:33
CLOCK: [2021-02-26 Fri 17:37]--[2021-02-26 Fri 17:46] =>  0:09
CLOCK: [2022-03-14 Mon 11:21]--[2022-03-14 Mon 11:37] =>  0:16
CLOCK: [2021-07-25 Sun 16:09]--[2021-07-25 Sun 16:11] =>  0:02
CLOCK: [2021-03-28 Sun 18:47]--[2021-03-28 Sun 19:01] =>  0:14
CLOCK: [2021-03-23 Tue 19:30]--[2021-03-23 Tue 19:38] =>  0:08
:END:

*** caps_lock
:PROPERTIES:
:ID:       95768E0F-B63F-46E6-BA1B-89ADB31D8776
:END:

#+begin_src clojure
{:des "Disable caps_lock"
 :rules [
         [:caps_lock :vk_none]
         ]}
#+end_src

*** left_control
:PROPERTIES:
:ID:       8DEEEE4C-4227-44A3-AEFE-0D41412F89C5
:END:

#+begin_src clojure
{:des "Emacs: left_control ‚Üí C-g (alone) M- (held)"
 :rules [
         [:!Ch {:modi :A-H-M-s- :key :h} :emacs] ; circumvent macOS ‚åòh
         [:!CQh {:modi :A-C-H-s- :key :h} :emacs] ; circumvent macOS ‚åò‚å•h
         [:##left_control :M- [:!steam :emacs] {:alone {:modi :C- :key :g}}]
         ]}
#+end_src

#+begin_src clojure
{:des "Outside Emacs: left_control ‚Üí escape (alone) | üåê (held)"
 :rules [
         [:##left_control :üåê [:!steam :!emacs] {:alone :escape}]
         ]}
#+end_src

*** left_option
:PROPERTIES:
:ID:       814FE647-3B6D-4B2E-AF96-1DF871FB9568
:END:

#+begin_src clojure
{:des "Emacs: left_option ‚Üí toggle tabs/windows (alone) | S- (held)"
 :rules [
         [:##left_option :S- :emacs {:alone :return_or_enter}]
         ]}
#+end_src

#+begin_src clojure
{:des "Outside Emacs: left_option ‚Üí toggle tabs/windows (alone) | ‚áß (held)"
 :rules [
         [:##left_option :‚áß :!emacs {:alone :return_or_enter}]
         ]}
#+end_src

Since the same key now triggers  ~shift~ and ~return~, we can no longer trigger ~shift~ + ~return~. So we define a special binding to trigger this key event via ~shift~ + ~spacebar~ (the latter is triggered by ~right_command~, as defined in a section below).

#+begin_src clojure
{:des "left_option + right_command ‚Üí ‚áß + enter"
 :rules [
         [:!Sright_command {:modi :‚áß :key :return_or_enter}]
         ]}
#+end_src

Since the same key now triggers  ~shift~ and ~return~, we can no longer trigger ~shift~ + ~return~. So we define a special binding to trigger this key event via ~shift~ + ~spacebar~ (the latter is triggered by ~right_command~, as defined in a section below).

#+begin_src clojure
{:des "left_option + right_command ‚Üí ‚áß + enter"
 :rules [
         [:!Sright_command {:modi :‚áß :key :return_or_enter}]
         ]}
#+end_src

*** left_command
:PROPERTIES:
:ID:       3E65030B-931E-42C3-AFD3-06A6D55ECE6F
:END:

When tapped, the ~left_command~ key toggles between the two most recent windows (in Emacs) or tabs (in a browser). In Emacs, I do this by binding ~C-H-0~ to my custom command ~window-extras-switch-to-last-window~. In Chrome, I do this by installing the extensions [[https://chrome.google.com/webstore/detail/clut-cycle-last-used-tabs/cobieddmkhhnbeldhncnfcgcaccmehgn][CLUT]] (Chrome) and [[https://addons.mozilla.org/en-US/firefox/addon/last-tab/?utm_source=addons.mozilla.org&utm_medium=referral&utm_content=search][Last Tab]] (Firefox) and configuring ~‚åò‚åÉ0~ as the keyboard shortcut for each.

#+begin_src clojure
{:des "Emacs: left_command ‚Üí other window (alone) | H- (held)"
 :rules [
         [:##left_command :H- :emacs {:alone {:modi :C-H- :key :0}}]
         ]}
#+end_src

#+begin_src clojure
{:des "Outsie Emacs: left_command ‚Üí other tab (alone) | ‚åò (held)"
 :rules [
         [:##left_command :‚åò :!emacs {:alone {:modi :‚åò‚åÉ :key :0}}]
         ]}
#+end_src

*** spacebar
:PROPERTIES:
:ID:       50D3DA91-8409-4EBA-A443-30D7D0C96534
:END:
:LOGBOOK:
CLOCK: [2023-08-04 Fri 23:09]--[2023-08-04 Fri 23:25] =>  0:16
:END:

The spacebar triggers ~control~ when held and toggles between apps when tapped. In addition, if the spacebar is tapped while the command key is held, it will toggle instead between buffers (in Emacs) or windows (outside Emacs).

#+begin_src clojure
{:des "Emacs: spacebar ‚Üí C- (held) | ‚åòtab (alone)"
 :rules [
         [:!Cspacebar {:modi :A-H-M-s- :key :spacebar} :emacs] ; files-extras-switch-to-alternate-buffer
         [:##spacebar :C- :emacs {:alone {:modi :‚åò :key :tab}}]
         ]}
#+end_src

#+begin_src clojure
{:des "Outside Emacs: spacebar ‚Üí ‚åÉ (held) | ‚åòtab (alone)"
 :rules [
         [:!Cspacebar {:modi :‚åò :key :grave_accent_and_tilde} :!emacs] ; move focus to next window
         [:##spacebar :‚åÉ :!emacs {:alone {:modi :‚åò :key :tab}}]
         ]}
#+end_src

*** right_command
:PROPERTIES:
:ID:       EE9EC966-6B9E-4C10-AB37-2D932D4426A0
:mtime:    20231001165003
:ctime:    20231001165003
:END:

#+begin_src clojure
{:des "Emacs: right_command + left_command ‚Üí A-H- (held) "
:rules [
        [[:right_command :left_command] :A-H- :emacs {:alone {:modi :A- :key :spacebar}}]
        ]}
#+end_src

#+begin_src clojure
{:des "Emacs: right_command + left_shift ‚Üí A-"
:rules [
        [[:right_command :left_option] :A- :emacs]
        ]}
#+end_src

#+begin_src clojure
{:des "Emacs: right_command + spacebar ‚Üí A-C-"
:rules [
        [[:right_command :spacebar] :A-C- :emacs]
        ]}
#+end_src

#+begin_src clojure
{:des "Emacs: right_command + left_control ‚Üí A-M-"
:rules [
        [[:right_command :left_control] :A-M- :emacs]
        ]}
#+end_src

#+begin_src clojure
{:des "Emacs: right_command + right_option ‚Üí A-s-"
:rules [
        [[:right_command :right_option] :A-s- :emacs]
        ]}
#+end_src

#+begin_src clojure
{:des "Emacs: right_command ‚Üí spacebar"
 :rules [
         [:##right_command :spacebar :emacs]
         ]}
#+end_src

#+begin_src clojure
{:des "Outside Emacs: right_command ‚Üí spacebar"
 :rules [
         [:##right_command :spacebar :!emacs]
         ]}
#+end_src

*** right_option
:PROPERTIES:
:ID:       E35A6F0B-BD09-4160-BC74-E1B8090C70AD
:END:

#+begin_src clojure
{:des "Emacs: right_option ‚Üí other window (alone) | s- (held)"
 :rules [
         [:##right_option :s- :emacs {:alone :tab}]
         ]}
#+end_src

#+begin_src clojure
{:des "outside Emacs: right_option ‚Üí other window (alone) | ‚å• (held)"
 :rules [
         [:##right_option :‚å• :!emacs {:alone :tab}]
         ]}
#+end_src

*** mouse
:PROPERTIES:
:ID:       CCF3EFB7-8CD9-40A8-96F6-3519B1914C17
:END:
:LOGBOOK:
CLOCK: [2023-08-24 Thu 12:20]--[2023-08-24 Thu 13:28] =>  1:08
:END:

My Logitech MX Anywhere 3S mouse does not have a [[https://computer.howstuffworks.com/mouse11.htm][tilting wheel]], so I remap the side buttons to trigger the relevant tab navigation shortcuts when pressed while the shift key is held. Note that for these ‚Äúextra‚Äù mouse buttons to be detected by Karabiner, you may need to enable the relevant device in the ‚ÄúDevices‚Äù section.

#+begin_src clojure
{:des "left_shift + side mouse buttons ‚Üí navigate open tabs"
 :rules [
         [{:pkey :button4 :modi :left_shift} :!COleft_arrow]
         [{:pkey :button5 :modi :left_shift} :!COright_arrow]
         ]}
#+end_src

** layers
:PROPERTIES:
:ID:       348C5A9E-09EC-4E0C-B03F-4C347B016E36
:END:

*** b-mode
:PROPERTIES:
:ID:       8C32B75E-1455-444F-B5F6-83DC8263D558
:END:
:LOGBOOK:
CLOCK: [2023-08-26 Sat 10:53]--[2023-08-26 Sat 12:31] =>  1:38
:END:

- The right-hand top row keys control window placement, via [[https://github.com/rxhanson/Rectangle][Rectangle]].
- The right-hand home row keys control playback.
    - ~l~ triggers a Keyboard Maestro script that runs the AppleScript included below.
- The right-hand bottom row keys control volume.
- ~h~  and ~n~ control dictation and narration, respectively.
    - The keyboard shortcuts need to be set under Settings > Keyboard > Dictation > Shortcut (for dictation) and Settings > Accessibility > Spoken content > Speak selection (for narration).

#+begin_src clojure
{:des "b-mode (media controls, window sizing)"
 :rules [:b-mode
         [:p {:modi :‚áß‚åò‚å•‚åÉ :key :p}] ; Rectangle, right half
         [:i {:modi :‚áß‚åò‚å•‚åÉ :key :i}] ; Rectangle, maximize
         [:o {:modi :‚áß‚åò‚å•‚åÉ :key :o}] ; Rectangle, center
         [:u {:modi :‚áß‚åò‚å•‚åÉ :key :u}] ; Rectangle, left half
         [:j :rewind]
         [:x {:modi :‚áß‚åò‚åÉ :key :3}] ; Copy picture of screen to the clipboard
         [:l :play_or_pause]
         [:semicolon :fastforward]
         [:comma :volume_increment]
         [:period :volume_decrement]
         [:m :mute]
         [:c {:modi :C-M-s- :key :c} :emacs] ; connect to bluetooth device
         [:g {:modi :C-M-s- :key :g} :emacs] ; toggle langs
         [:h {:modi :‚áß‚åò‚å•‚åÉ :key :0}] ; dictation
         [:n {:modi :‚áß‚åò‚å•‚åÉ :key :1}] ; narration
         ]}
#+end_src

#+begin_src applescript :tangle no
using terms from application "Spotify"
  if player state of application "Spotify" is paused then
    tell application "Spotify" to play
  else
    tell application "Spotify" to pause
  end if
end using terms from
#+end_src

*** f-mode
:PROPERTIES:
:ID:       9C5F6E97-A593-4959-95DE-167BBCD86ABD
:END:

#+begin_src clojure
{:des "f-mode (special chars)"
 :rules [:f-mode
         [:d :√∞]
         [:e :‚Ä¶]
         [:i :¬°]
         [:o :√∏]
         [:p :¬£]
         [:q :≈ì]
         [:r :‚Ç¨]
         [:s :√ü]
         [:t :√æ]
         [:u :‚Ä¢]
         [:slash :¬ø]
         [:comma :¬´]
         [:period :¬ª]
         ]
 }
#+end_src

*** j-mode
:PROPERTIES:
:ID:       0901DE3D-511F-4547-ACCD-3AAD9703DAAD
:END:
:LOGBOOK:
CLOCK: [2021-12-01 Wed 17:12]--[2021-12-01 Wed 17:27] =>  0:15
:END:

#+begin_src clojure
{:des "j-mode (deletion)"
 :rules [:j-mode
         [:a {:modi :C-H-M- :key :a} :emacs]
         [:!Wa {:modi :C-H-M-s- :key :a} :emacs]
         [:!WQa {:modi :A-C-H-M-s- :key :a} :emacs]
         [:s {:modi :C-H-M- :key :s} :emacs]
         [:s :delete_or_backspace :!emacs]
         [:d {:modi :C-H-M- :key :d} :emacs]
         [:d :delete_forward :!emacs]
         [:f {:modi :C-H-M- :key :f} :emacs]
         [:!Wf {:modi :C-H-M-s- :key :f} :emacs]
         [:!WQf {:modi :A-C-H-M-s- :key :f} :emacs]
         [:q {:modi :C-H-M- :key :q} :emacs]
         [:!Wq {:modi :C-H-M-s- :key :q} :emacs]
         [:!WQq {:modi :A-C-H-M-s- :key :q} :emacs]
         [:q {:modi :‚å• :key :delete_or_backspace} :!emacs]
         [:w {:modi :C-H-M- :key :w} :emacs]
         [:!Ww {:modi :C-H-M-s- :key :w} :emacs]
         [:!WQw {:modi :A-C-H-M-s- :key :w} :emacs]
         [:w {:modi :‚åò :key :delete_or_backspace} :!emacs]
         [:e {:modi :C-H-M- :key :e} :emacs]
         [:!We {:modi :C-H-M-s- :key :e} :emacs]
         [:!WQe {:modi :A-C-H-M-s- :key :e} :emacs]
         [:e {:modi :‚åÉ :key :k} :!emacs]
         [:r {:modi :C-H-M- :key :r} :emacs]
         [:!Wr {:modi :C-H-M-s- :key :r} :emacs]
         [:!WQr {:modi :A-C-H-M-s- :key :r} :emacs]
         [:r {:modi :‚å• :key :delete_forward} :!emacs]
         [:z {:modi :C-H-M- :key :z} :emacs]
         [:!Wz {:modi :C-H-M-s- :key :z} :emacs]
         [:!WQz {:modi :A-C-H-M-s- :key :z} :emacs]
         [:z {:modi :‚åò :key :delete_or_backspace} :!emacs]
         [:x {:modi :C-H-M- :key :x} :emacs]
         [:!Wx {:modi :C-H-M-s- :key :x} :emacs]
         [:!WQx {:modi :A-C-H-M-s- :key :x} :emacs]
         [:x {:modi :‚åò‚å• :key :left_arrow} :!emacs]
         [:c {:modi :C-H-M- :key :c} :emacs]
         [:!Wc {:modi :C-H-M-s- :key :c} :emacs]
         [:!WQc {:modi :A-C-H-M-s- :key :c} :emacs]
         [:c {:modi :‚åò‚å• :key :right_arrow} :!emacs]
         [:v {:modi :C-H-M- :key :v} :emacs]
         [:!Wv {:modi :C-H-M-s- :key :v} :emacs]
         [:!WQv {:modi :A-C-H-M-s- :key :v} :emacs]
         [:v {:modi :‚åò :key :delete_forward} :!emacs]
         [:b {:modi :C-H-M- :key :b} :emacs]
         [:t {:modi :C-H-M- :key :t} :emacs]
         [:t :home :!emacs]
         [:g {:modi :C-H-M- :key :g} :emacs]
         [:g :end :!emacs]
         [:!Wd {:modi :C-H-M-s- :key :d} :emacs]
         [:!Ws {:modi :C-H-M-s- :key :s} :emacs]
         ]}
#+end_src

*** k-mode
:PROPERTIES:
:ID:       FBF02867-9942-47E7-B201-DE86156E82F9
:END:

#+begin_src clojure
{:des "k-mode (website-specific)"
 :rules [:k-mode
         [:a [:km "Local website a"]]
         [:b [:km "Local website b"]]
         [:c [:km "Local website c"]]
         [:d [:km "Local website d"]]
         [:e [:km "Local website e"]]
         [:f [:km "Local website f"]]
         [:g [:km "Local website g"]]
         [:h [:km "Local website h"]]
         [:i [:km "Local website i"]]
         [:j [:km "Local website j"]]
         [:l [:km "Local website l"]]
         [:!Sl [:km "Local website Sl"]]
         [:!Cl [:km "Local website Cl"]]
         [:!CSl [:km "Local website CSl"]]
         [:m [:km "Local website m"]]
         [:n [:km "Local website n"]]
         [:o [:km "Local website o"]]
         [:p [:km "Local website p"]]
         [:r [:km "Local website r"]]
         [:s [:km "Local website s"]]
         [:t [:km "Local website t"]]
         [:u [:km "Local website u"]]
         [:y [:km "Local website y"]]
         [:z [:km "Local website z"]]
         [:x [:km "Local website x"]]
         [:v [:km "Local website v"]]
         [:w [:km "Local website w"]]
         [:semicolon [:km "Local website semicolon"]]
         [:comma [:km "Local website comma"]]
         [:period [:km "Local website period"]]
         [:slash [:km "Local website slash"]]
         [:return_or_enter [:km "Local website return_or_enter"]]
         ;; [:spacebar [:km "Local website spacebar"]]
         ]}
#+end_src

*** m-mode
:PROPERTIES:
:ID:       3AF73C77-5381-4DED-A7DC-6034A2C107A9
:END:

#+begin_src clojure
{:des "m-mode (math symbols)"
 :rules [:m-mode
         [:e :=]
         [:p :+]
         [:q :‚â†]
         [:d :√∑]
         [:o :¬±]
         [:x [:insert "√ó"]]
         [:comma :‚â§]
         [:period :‚â•]
         ]}
#+end_src

*** p-mode
:PROPERTIES:
:ID:       E0EEFD9C-91E1-40D3-BCC0-7B3D3EB632D4
:END:

#+begin_src clojure
{:des "p-mode (diacritics)"
 :rules [:p-mode
         [:a :macron]
         [:b :breve]
         [:c :cedilla]
         [:e :accute_accent]
         [:g :undercomma]
         [:h :underbar]
         [:i :horn]
         [:j :double_acute_accent]
         [:k :overring]
         [:l :stroke]
         [:m :ogonek]
         [:n :tilde_accent]
         [:r :grave_accent]
         [:u :umlaut]
         [:v :caron]
         [:w :underdot]
         [:x :overdot]
         [:y :circumflex]
         [:z :hook]
         ]
 }
#+end_src

*** q-mode
:PROPERTIES:
:ID:       B3028ED3-0E12-4CA5-AC14-B89DECB5C7D8
:END:
:LOGBOOK:
CLOCK: [2023-04-30 Sun 11:59]--[2023-04-30 Sun 12:07] =>  0:08
:END:

#+begin_src clojure
{:des "q-mode (apps)"
 :rules [:q-mode
         [:b [:open "/Applications/qBitTorrent.app"]]
         [:d [:open "/System/Library/CoreServices/Finder.app"]]
         [:e [:open "/Applications/Emacs.app"]]
         [:f [:open "/Applications/Firefox.app"]]
         [:g [:open "/Applications/Goldendict.app"]]
         [:h [:open "/Applications/Google Chrome.app"]]
         [:i [:open "/Applications/Anki.app"]]
         [:j [:km "open: System Preferences"]]
         [:k [:open "/Applications/Keyboard Maestro.app"]]
         [:l [:open "/Applications/DeepL.app"]]
         [:m [:open "/Applications/Media Center 29.app"]]
         [:o [:open "/Applications/zoom.us.app"]]
         [:p [:open "/Applications/Signal.app"]]
         [:r [:open "/Applications/Karabiner-Elements.app"]]
         [:s [:open "/Applications/Slack.app"]]
         [:t [:open "/System/Applications/Utilities/Terminal.app"]]
         [:u [:open "/Applications/Revolut.app"]]
         [:v [:open "/Applications/mpv.app"]]
         [:w [:open "/Applications/HoudahSpot.app"]]
         [:y [:open "/Applications/Spotify.app"]]
         [:comma [:open "/Applications/Plex Media Server.app/"]]
         [:period [:open "/Applications/Tor Browser.app"]]
         ]}
#+end_src

*** v-mode
:PROPERTIES:
:ID:       A9B31157-4AC5-4F7A-9181-0AE8B8539B5F
:END:

#+begin_src clojure
{:des "v-mode (numbers)"
 :rules [:v-mode
         [:i :8]
         [:##i :##8]
         [:j :4]
         [:##j :4]
         [:k :5]
         [:##k :5]
         [:l :6]
         [:##l :6]
         [:m :1]
         [:##m :1]
         [:o :9]
         [:##o :9]
         [:u :7]
         [:##u :7]
         [:comma :2]
         [:##comma :2]
         [:period :3]
         [:##period :3]
         [:p :0]
         [:##p :0]
         [:semicolon :period]
         [:##semicolon :period]
         ]
 }
#+end_src

*** x-mode
:PROPERTIES:
:ID:       A670C98B-FCD0-4B4C-A3D9-C0DB143209AE
:END:
:LOGBOOK:
CLOCK: [2021-07-16 Fri 17:34]--[2021-07-16 Fri 18:32] =>  0:58
CLOCK: [2021-06-03 Thu 15:17]--[2021-06-03 Thu 15:47] =>  0:30
CLOCK: [2021-06-03 Thu 08:14]--[2021-06-03 Thu 09:14] =>  1:00
CLOCK: [2021-06-01 Tue 17:30]--[2021-06-01 Tue 18:07] =>  0:37
CLOCK: [2021-04-07 Wed 13:09]--[2021-04-07 Wed 13:17] =>  0:08
CLOCK: [2021-03-25 Thu 14:14]--[2021-03-25 Thu 14:59] =>  0:45
CLOCK: [2021-03-25 Thu 09:30]--[2021-03-25 Thu 10:27] =>  0:57
CLOCK: [2021-03-25 Thu 08:25]--[2021-03-25 Thu 08:56] =>  0:31
CLOCK: [2021-03-23 Tue 17:52]--[2021-03-23 Tue 17:55] =>  0:03
CLOCK: [2021-03-23 Tue 09:13]--[2021-03-23 Tue 09:24] =>  0:11
CLOCK: [2021-03-21 Sun 11:00]--[2021-03-21 Sun 11:03] =>  0:03
CLOCK: [2021-03-21 Sun 07:33]--[2021-03-21 Sun 09:05] =>  2:17
CLOCK: [2021-03-17 Wed 09:14]--[2021-03-17 Wed 09:19] =>  0:05
CLOCK: [2021-03-09 Tue 17:25]--[2021-03-09 Tue 17:47] =>  0:22
CLOCK: [2021-03-01 Mon 11:46]--[2021-03-01 Mon 12:05] =>  0:19
:END:

#+begin_src clojure
{:des "x-mode (avy)"
 :rules [:x-mode
         [:a [{:modi :C-H-s- :key :a}]]
         [:b [{:modi :C-H-s- :key :b}]]
         [:c [{:modi :C-H-s- :key :c}]]
         [:d [{:modi :C-H-s- :key :d}]]
         [:e [{:modi :C-H-s- :key :e}]]
         [:f [{:modi :C-H-s- :key :f}]]
         [:g [{:modi :C-H-s- :key :g}]]
         [:h [{:modi :C-H-s- :key :h}]]
         [:i [{:modi :C-H-s- :key :i}]]
         [:j [{:modi :C-H-s- :key :j}]]
         [:k [{:modi :C-H-s- :key :k}]]
         [:l [{:modi :C-H-s- :key :l}]]
         [:m [{:modi :C-H-s- :key :m}]]
         [:n [{:modi :C-H-s- :key :n}]]
         [:o [{:modi :C-H-s- :key :o}]]
         [:p [{:modi :C-H-s- :key :p}]]
         [:q [{:modi :C-H-s- :key :q}]]
         [:r [{:modi :C-H-s- :key :r}]]
         [:s [{:modi :C-H-s- :key :s}]]
         [:t [{:modi :C-H-s- :key :t}]]
         [:u [{:modi :C-H-s- :key :u}]]
         [:v [{:modi :C-H-s- :key :v}]]
         [:w [{:modi :C-H-s- :key :w}]]
         [:y [{:modi :C-H-s- :key :y}]]
         [:z [{:modi :C-H-s- :key :z}]]
         [:semicolon [{:modi :C-H-s- :key :semicolon}]]
         [:comma [{:modi :C-H-s- :key :comma}]]
         [:period [{:modi :C-H-s- :key :period}]]
         [:slash [{:modi :C-H-s- :key :slash}]]
         [:spacebar [{:modi :C-H-s- :key :spacebar}]]
         [:return_or_enter [{:modi :C-H-s- :key :return_or_enter}]]
         [:tab [{:modi :C-H-s- :key :tab}]]
         ]}
#+end_src

*** y-mode
:PROPERTIES:
:ID:       B5C7E58A-C51C-48AE-B7AF-0617E764DB24
:END:

#+begin_src clojure
{:des "y-mode (mouse, screenshots)"
 :rules [:y-mode
         [:b {:modi :‚áß‚åò :key :5}] ; Screenshot and recording options
         [:c {:modi :‚áß‚åò :key :4}] ; Save picture of selected area to a file
         [:d {:mkey {:y 1500}}]
         [:e {:mkey {:y 4500}}]
         [:a {:mkey {:x -1500}}]
         [:f {:mkey {:x 1500}}]
         [:q {:mkey {:x -4500}}]
         [:r {:mkey {:x 4500}}]
         [:s {:mkey {:y -1500}}]
         [:v {:modi :‚áß‚åò‚åÉ :key :4}] ; Copy picture of selected area to the clipboard
         [:w {:mkey {:y -4500}}]
         [:z {:modi :‚áß‚åò :key :3}] ; Save picture of screen as a file
         [:right_command :button2]
         [:return_or_enter :button1]
         ]}
#+end_src

*** z-mode
:PROPERTIES:
:ID:       303127EC-3362-408C-9A3B-45C2A108D994
:END:
:LOGBOOK:
CLOCK: [2022-07-06 Wed 15:55]--[2022-07-06 Wed 15:56] =>  0:01
CLOCK: [2021-12-23 Thu 15:40]--[2021-12-23 Thu 15:58] =>  0:18
CLOCK: [2021-12-23 Thu 15:20]--[2021-12-23 Thu 15:37] =>  0:17
CLOCK: [2021-11-25 Thu 20:28]--[2021-11-25 Thu 21:07] =>  0:39
CLOCK: [2021-06-03 Thu 15:17]--[2021-06-03 Thu 15:47] =>  0:30
CLOCK: [2021-06-03 Thu 08:14]--[2021-06-03 Thu 09:14] =>  1:00
CLOCK: [2021-06-01 Tue 17:30]--[2021-06-01 Tue 18:07] =>  0:37
CLOCK: [2021-04-07 Wed 13:09]--[2021-04-07 Wed 13:17] =>  0:08
CLOCK: [2021-03-25 Thu 14:14]--[2021-03-25 Thu 14:59] =>  0:45
CLOCK: [2021-03-25 Thu 09:30]--[2021-03-25 Thu 10:27] =>  0:57
CLOCK: [2021-03-25 Thu 08:25]--[2021-03-25 Thu 08:56] =>  0:31
CLOCK: [2021-03-23 Tue 17:52]--[2021-03-23 Tue 17:55] =>  0:03
CLOCK: [2021-03-23 Tue 09:13]--[2021-03-23 Tue 09:24] =>  0:11
CLOCK: [2021-03-21 Sun 11:00]--[2021-03-21 Sun 11:03] =>  0:03
CLOCK: [2021-03-21 Sun 07:33]--[2021-03-21 Sun 09:05] =>  2:17
CLOCK: [2021-03-17 Wed 09:14]--[2021-03-17 Wed 09:19] =>  0:05
CLOCK: [2021-03-09 Tue 17:25]--[2021-03-09 Tue 17:47] =>  0:22
CLOCK: [2021-03-01 Mon 11:46]--[2021-03-01 Mon 12:05] =>  0:19
:END:

[2021-03-23 Tue 09:18] I've added ~##~ to ~u~ and ~p~. This allows for the use of shift. Not sure if this addition will have any unexpected side effects, so testing it on these two words only. If everything looks fine in a few days, you can extend this modification to all other relevant letters.

[2021-03-25 Thu 08:30] Next task is to create corresponding versions of many of the motion key mappings that move the screen rather than the cursor.

#+begin_src clojure
{:des "z-mode (navigation)"
 :rules [:z-mode
         [:b {:modi :A-C-s- :key :b} :emacs]
         [:c {:modi :A-C-s- :key :c}]
         [:d {:modi :A-H-M-s- :key :d} :emacs] ; WTQ intercepted by OSX
         [:e {:modi :A-C-s- :key :e} :emacs]
         [:f [{:modi :‚åò‚åÉ :key :n} {:modi :‚åò‚åÉ :key :h}] :chrome] ; Google Docs next heading
         [:f {:modi :A-C-s- :key :f}]
         [:g {:modi :A-C-s- :key :g} :emacs]
         [:h {:modi :A-C-s- :key :h} :emacs]
         [:##h :page_down]
         [:i {:modi :A-C-s- :key :i} :emacs]
         [:##i {:modi :‚å• :key :up_arrow}]
         [:j :left_arrow]
         [:##j :left_arrow]
         [:k :up_arrow]
         [:##k :up_arrow]
         [:l :down_arrow]
         [:##l :down_arrow]
         [:m {:modi :A-C-s- :key :m} :emacs]
         [:##m {:modi :‚åò :key :left_arrow}]
         [:n {:modi :A-C-s- :key :n} :emacs]
         [:o {:modi :A-C-s- :key :o} :emacs]
         [:##o {:modi :‚å• :key :down_arrow}]
         [:p {:modi :A-C-s- :key :p} :emacs]
         [:##p {:modi :‚å• :key :right_arrow}]
         [:r [{:modi :‚åò‚åÉ :key :p} {:modi :‚åò‚åÉ :key :h}] :chrome] ; Google Docs previous heading
         [:r {:modi :A-C-s- :key :r} :emacs]
         [:s {:modi :A-C-s- :key :s} :emacs]
         [:t {:modi :A-C-s- :key :t} :emacs]
         [:u {:modi :A-C-s- :key :u} :emacs]
         [:##u {:modi :‚å• :key :left_arrow}]
         [:v {:modi :A-C-s- :key :v} :emacs]
         [:w {:modi :A-C-s- :key :w} :emacs]
         [:x {:modi :A-C-s- :key :x}]
         [:y {:modi :A-C-s- :key :y} :emacs]
         [:##y :page_up]
         [:##return_or_enter :home]
         [:comma {:modi :A-C-s- :key :comma} :emacs]
         [:##comma {:modi :‚åò :key :up_arrow}]
         [:period {:modi :A-C-s- :key :period} :emacs]
         [:##period {:modi :‚åò :key :down_arrow}]
         [:right_command {:modi :A-C-s- :key :tab} :emacs]
         [:##right_command :end]
         [:semicolon :right_arrow]
         [:##semicolon :right_arrow]
         [:slash {:modi :A-C-s- :key :slash} :emacs]
         [:##slash {:modi :‚åò :key :right_arrow}]
         [:spacebar {:modi :A-C-s- :key :spacebar} :emacs]
         [:##spacebar :home]
         [:tab {:modi :A-C-s- :key :tab} :emacs]
         [:##tab :home]
         ]}
#+end_src

*** comma-mode
:PROPERTIES:
:ID:       4E6E7538-0296-485F-BFB0-DF1316DC32E2
:END:

#+begin_src clojure
{:des "comma-mode (transposition)"
 :rules [:comma-mode
         [:a {:modi :A-H-M- :key :a}]
         [:b {:modi :A-H-M- :key :b}]
         [:c {:modi :A-H-M- :key :c}]
         [:d {:modi :A-H-M- :key :d}]
         [:e {:modi :A-H-M- :key :e}]
         [:f {:modi :A-H-M- :key :f}]
         [:g {:modi :A-H-M- :key :g}]
         [:h {:modi :A-H-M- :key :h}]
         [:i {:modi :A-H-M- :key :i}]
         [:j {:modi :A-H-M- :key :j}]
         [:l {:modi :A-H-M- :key :l}]
         [:n {:modi :A-H-M- :key :n}]
         [:o {:modi :A-H-M- :key :o}]
         [:p {:modi :A-H-M- :key :p}]
         [:q {:modi :A-H-M- :key :q}]
         [:r {:modi :A-H-M- :key :r}]
         [:s {:modi :A-H-M- :key :s}]
         [:t {:modi :A-H-M- :key :t}]
         [:u {:modi :A-H-M- :key :u}]
         [:v {:modi :A-H-M- :key :v}]
         [:w {:modi :A-H-M- :key :w}]
         [:x {:modi :A-H-M- :key :x}]
         [:y {:modi :A-H-M- :key :y}]
         [:z {:modi :A-H-M- :key :z}]
         [:semicolon {:modi :A-H-M- :key :semicolon}]
         [:period {:modi :A-H-M- :key :period}]
         [:slash {:modi :A-H-M- :key :slash}]
         [:spacebar {:modi :A-H-M- :key :spacebar}]
         [:return_or_enter {:modi :A-H-M- :key :return_or_enter}]
         [:tab {:modi :A-H-M- :key :tab}]
         ]}
#+end_src

*** period-mode
:PROPERTIES:
:ID:       6D08B8C7-EE4C-42E0-928D-6ED3F05B7005
:END:
:LOGBOOK:
CLOCK: [2021-06-22 Tue 11:46]--[2021-06-22 Tue 12:34] =>  0:48
CLOCK: [2021-06-22 Tue 11:28]--[2021-06-22 Tue 11:41] =>  0:13
:END:

#+begin_src clojure
{:des "period-mode (manipulation)"
 :rules [:period-mode
         [:a {:modi :A-C-H- :key :a}]
         [:b {:modi :A-C-H- :key :b}]
         [:c {:modi :A-C-H- :key :c}]
         [:d {:modi :A-C-H- :key :d}]
         [:e {:modi :A-C-H- :key :e}]
         [:f {:modi :A-C-H- :key :f}]
         [:g {:modi :A-C-H- :key :g}]
         [:h {:modi :A-C-H- :key :h}]
         [:i {:modi :A-C-H- :key :i}]
         [:j {:modi :A-C-H- :key :j}]
         [:k {:modi :A-C-H- :key :k}]
         [:l {:modi :A-C-H- :key :l}]
         [:m {:modi :A-C-H- :key :m}]
         [:n {:modi :A-C-H- :key :n}]
         [:o {:modi :A-C-H- :key :o}]
         [:p {:modi :A-C-H- :key :p}]
         [:q {:modi :A-H-M-s- :key :9}] ; QCOq triggers ‚åò‚åÉQ (lock screen)
         [:r {:modi :A-C-H- :key :r}]
         [:s {:modi :A-C-H- :key :s}]
         [:t {:modi :A-C-H- :key :t}]
         [:u {:modi :A-C-H- :key :u}]
         [:v {:modi :A-C-H- :key :v}]
         [:w {:modi :A-C-H- :key :w}]
         [:x {:modi :A-C-H- :key :x}]
         [:y {:modi :A-C-H- :key :y}]
         [:z {:modi :A-C-H- :key :z}]
         [:semicolon {:modi :A-C-H- :key :semicolon}]
         [:comma {:modi :A-C-H- :key :comma}]
         [:slash {:modi :A-C-H- :key :slash}]
         [:spacebar {:modi :A-C-H- :key :spacebar}]
         [:return_or_enter {:modi :A-C-H- :key :return_or_enter}]
         ]}
#+end_src

*** semicolon-mode
:PROPERTIES:
:ID:       5BA69509-7C1B-4DD6-A54D-112902320CCB
:END:

:LOGBOOK:
CLOCK: [2022-04-12 Tue 13:41]--[2022-04-12 Tue 13:43] =>  0:02
:END:

- Insert image of key layout
- Explain ‚Äúlogic‚Äù behind layout (e.g. single quotes, double quotes, and dashes as triplets in successive lines)

#+begin_src clojure
{:des "semicolon (symbols)"
 :rules [:semicolon-mode
         [:##a :percent_sign]
         [:##b :grave_accent_and_tilde]
         [:##c :open_bracket]
         [:##d :close_parenthesis]
         [:##e :number_sign]
         [:##f :asterisk]
         [:##g :caret]
         [:##h :ampersand]
         [:##i :open_single_quote]
         [:##j :double_quote]
         [:##k :open_double_quote]
         [:##l :close_double_quote]
         [:##m :hyphen]
         [:##n :tilde]
         [:##o :close_single_quote]
         [:##q :exclamation_mark]
         [:##r :dollar_sign]
         [:##s :open_parenthesis]
         [:##t :backslash]
         [:##u :quote]
         [:##v :close_bracket]
         [:##w :at_sign]
         [:##x :close_brace]
         [:##y :vertical_bar]
         [:##z :open_brace]
         [:##comma :en_dash]
         [:##period :em_dash]
         [:##right_command :underscore]
         ]}
#+end_src

*** slash-mode
:PROPERTIES:
:ID:       87BE8B2A-1F3C-48C7-99D9-36A6D00F7399
:END:
:LOGBOOK:
CLOCK: [2021-06-03 Thu 20:44]--[2021-06-03 Thu 21:06] =>  0:22
:END:

#+begin_src clojure
{:des "slash simlyaer ‚Üí org-mode (Emacs) | app-specific macros (outside Emacs)"
 :rules [:slash-mode
         [:a {:modi :C-H-M-s- :key :a} :emacs]
         [:b {:modi :C-H-M-s- :key :b} :emacs]
         [:c {:modi :C-H-M-s- :key :c} :emacs]
         [:d {:modi :C-H-M-s- :key :d} :emacs]
         [:e {:modi :C-H-M-s- :key :e} :emacs]
         [:f {:modi :C-H-M-s- :key :f} :emacs]
         [:g {:modi :C-H-M-s- :key :g} :emacs]
         [:h {:modi :C-H-M-s- :key :h} :emacs]
         [:i {:modi :C-H-M-s- :key :i} :emacs]
         [:j {:modi :C-H-M-s- :key :j} :emacs]
         [:m {:modi :C-H-M-s- :key :m} :emacs]
         [:n {:modi :C-H-M-s- :key :n} :emacs]
         [:o {:modi :C-H-M-s- :key :o} :emacs]
         [:p {:modi :C-H-M-s- :key :p} :emacs]
         [:q {:modi :C-H-M-s- :key :q} :emacs]
         [:r {:modi :C-H-M-s- :key :r} :emacs]
         [:s {:modi :C-H-M-s- :key :s} :emacs]
         [:t {:modi :C-H-M-s- :key :t} :emacs]
         [:u {:modi :C-H-M-s- :key :u} :emacs]
         [:v {:modi :C-H-M-s- :key :v} :emacs]
         [:w {:modi :C-H-M-s- :key :w} :emacs]
         [:z {:modi :C-H-M-s- :key :z} :emacs]
         [:x {:modi :C-H-M-s- :key :x} :emacs]
         [:y {:modi :C-H-M-s- :key :y} :emacs]
         [:period {:modi :C-H-M-s- :key :period} :emacs]
         [:a [:km "Local app a"] :!emacs]
         [:b [:km "Local app b"] :!emacs]
         [:c [:km "Local app c"] :!emacs]
         [:d [:km "Local app d"] :!emacs]
         [:e [:km "Local app e"] :!emacs]
         [:f [:km "Local app f"] :!emacs]
         [:g [:km "Local app g"] :!emacs]
         [:h [:km "Local app h"] :!emacs]
         [:i [:km "Local app i"] :!emacs]
         [:j [:km "Local app j"] :!emacs]
         [:k [:km "Local app k"] :!emacs]
         [:l [:km "Local app l"] :!emacs]
         [:m [:km "Local app m"] :!emacs]
         [:n [:km "Local app n"] :!emacs]
         [:o [:km "Local app o"] :!emacs]
         [:p [:km "Local app p"] :!emacs]
         [:q [:km "Local app q"] :!emacs]
         [:r [:km "Local app r"] :!emacs]
         [:s [:km "Local app s"] :!emacs]
         [:t [:km "Local app t"] :!emacs]
         [:u [:km "Local app u"] :!emacs]
         [:v [:km "Local app v"] :!emacs]
         [:w [:km "Local app w"] :!emacs]
         [:x [:km "Local app x"] :!emacs]
         [:y [:km "Local app y"] :!emacs]
         [:z [:km "Local app z"] :!emacs]
         [:0 [:km "Local app 0"] :!emacs]
         [:1 [:km "Local app 1"] :!emacs]
         [:2 [:km "Local app 2"] :!emacs]
         [:3 [:km "Local app 3"] :!emacs]
         [:4 [:km "Local app 4"] :!emacs]
         [:5 [:km "Local app 5"] :!emacs]
         [:6 [:km "Local app 6"] :!emacs]
         [:7 [:km "Local app 7"] :!emacs]
         [:8 [:km "Local app 8"] :!emacs]
         [:9 [:km "Local app 9"] :!emacs]
         [:semicolon [:km "Local app semicolon"] :!emacs]
         [:comma [:km "Local app comma"] :!emacs]
         [:period [:km "Local app period"] :!emacs]
         [:return_or_enter [:km "Local app return_or_enter"] :!emacs]
         [:spacebar [:km "Local app spacebar"] :!emacs]
         ]}
#+end_src

*** end
:PROPERTIES:
:ID:       CBFF5ED9-D5B8-4CDB-9136-43C8440AB694
:END:

:PROPERTIES:
:ID:       878439B7-635E-400A-B21F-670239A678F7
:END:
#+begin_src clojure :results silent
]}
#+end_src

* Appendices
:PROPERTIES:
:ID:       C12143F1-B67F-444C-BC27-94B666A7BE04
:END:

** Useful links
:PROPERTIES:
:ID:       23F111F1-39B1-43A5-BDC0-61DFD1B7C2DF
:END:

*** Tutorials
:PROPERTIES:
:ID:       F98AB59A-5F1D-4925-83A7-D9130081F34D
:END:

:PROPERTIES:
:ID:       1AAF1939-3FD7-477B-B56F-6BDCD2BB01B1
:END:
- [[https://kau.sh/blog/hacking-your-keyboard/][Hacking your keyboard with Karabiner]]
- [[https://www.youtube.com/watch?v=vysHEYTp0H4][Remap Keyboard Shortcuts Karabiner Elements]]. Video tutorial by John Lindquist.
- [[https://medium.com/@nikitavoloboev/karabiner-god-mode-7407a5ddc8f6][Karabiner God Mode]]
- [[https://karabiner-elements.pqrs.org/docs/json/][Karabiner configuration reference manual]]
- [[https://www.swyx.io/karabiner_lindquist/][Putting your Keyboard on Steroids with Karabiner Elements]]
- [[https://blog.jkl.gg/hacking-your-keyboard/][Hacking your keyboard with karabiner | Kaushik Gopal‚Äôs blog]]

*** Configuration files
:PROPERTIES:
:ID:       61B49FD2-C09C-4CA4-A50A-E686119323FF
:END:

- [[https://github.com/nikitavoloboev/dotfiles/blob/master/karabiner/karabiner.edn][Nikita Voloboek]]
- [[https://github.com/johnlindquist/dotfiles/blob/master/karabiner/karabiner.edn][John Lindquist]]
- [[https://github.com/yqrashawn/yqdotfiles/blob/master/modules/yqrashawn/home-manager/dotfiles/karabiner.edn][yqrashawn]]
- [[https://gist.github.com/kaushikgopal/ff7a92bbc887e59699c804b59074a126][Kaushik Gopal]]
- [[https://github.com/kiinoda/goku][kiinoda]]
- [[https://github.com/narze/dotfiles/blob/987afd479b39fdcfb7f770e60b6c457538c96ec1/chezmoi/private_dot_config/karabiner.edn#L4][narze]]

*** Meta
:PROPERTIES:
:ID:       1E55E2E6-A878-4FCB-90A9-C43085D90AF6
:END:

:PROPERTIES:
:ID:       DF91FEC7-7B8B-487F-BCA1-1FE4EE948B01
:END:
- [[https://wiki.nikitavoloboev.xyz/macos/macos-apps/karabiner][Nikita Voloboek's master list of Karabiner links]]
- [[https://github.com/search?q=path%3A**%2Fkarabiner.edn&type=code][List of all karabiner.edn files on Github]]

** Goku modifier letters
:PROPERTIES:
:ID:       404E09CD-636C-48D5-BD2A-CF13660F9F1A
:END:

| letter | modifier      |
|--------+---------------|
| C      | left_command  |
| T      | left_control  |
| O      | left_option   |
| S      | left_shift    |
| F      | fn            |
| Q      | right_command |
| W      | right_control |
| E      | right_option  |
| R      | right_shift   |

** List of keys
:PROPERTIES:
:ID:       9498E73F-0ED9-45B5-8B5C-8033F444B27F
:END:

:PROPERTIES:
:ID:       9E6D443F-89E5-4F9B-94B8-437C3FFA676A
:END:
Souce: [[https://github.com/pqrs-org/Karabiner-Elements/issues/925#issuecomment-323984568][GitHub]]

- category: Modifier keys
- name: caps_lock
- name: left_control
- name: left_shift
- name: left_option
- name: left_command
- name: right_control
- name: right_shift
- name: right_option
- name: right_command
- name: fn
- category: Controls and symbols
- name: return_or_enter
- name: escape
- name: delete_or_backspace
- name: delete_forward
- name: tab
- name: spacebar
- name: hyphen
  label: hyphen (-)
- name: equal_sign
  label: equal_sign (=)
- name: open_bracket
  label: open_bracket [
- name: close_bracket
  label: close_bracket ]
- name: backslash
  label: backslash (\)
- name: non_us_pound
- name: semicolon
  label: semicolon (;)
- name: quote
  label: quote (')
- name: grave_accent_and_tilde
  label: grave_accent_and_tilde ()
- name: comma
  label: comma (,)
- name: period
  label: period (.)
- name: slash
  label: slash (/)
- name: non_us_backslash
- category: Arrow keys
- name: up_arrow
- name: down_arrow
- name: left_arrow
- name: right_arrow
- name: page_up
- name: page_down
- name: home
- name: end
- category: Letter keys
- name: a
- name: b
- name: c
- name: d
- name: e
- name: f
- name: g
- name: h
- name: i
- name: j
- name: k
- name: l
- name: m
- name: n
- name: o
- name: p
- name: q
- name: r
- name: s
- name: t
- name: u
- name: v
- name: w
- name: x
- name: y
- name: z
- category: Number keys
- name: '1'
- name: '2'
- name: '3'
- name: '4'
- name: '5'
- name: '6'
- name: '7'
- name: '8'
- name: '9'
- name: '0'
- category: Function keys
- name: f1
- name: f2
- name: f3
- name: f4
- name: f5
- name: f6
- name: f7
- name: f8
- name: f9
- name: f10
- name: f11
- name: f12
- name: f13
- name: f14
- name: f15
- name: f16
- name: f17
- name: f18
- name: f19
- name: f20
- name: f21
  not_to: true
- name: f22
  not_to: true
- name: f23
  not_to: true
- name: f24
  not_to: true
- category: Media controls
- name: display_brightness_decrement
  not_from: true
- name: display_brightness_increment
  not_from: true
- name: mission_control
  not_from: true
- name: launchpad
  not_from: true
- name: dashboard
  not_from: true
- name: illumination_decrement
  not_from: true
- name: illumination_increment
  not_from: true
- name: rewind
  not_from: true
- name: play_or_pause
  not_from: true
- name: fastforward
  not_from: true
- name: mute
- name: volume_decrement
- name: volume_increment
- name: eject
  not_from: true
- name: apple_display_brightness_decrement
  not_from: true
- name: apple_display_brightness_increment
  not_from: true
- name: apple_top_case_display_brightness_decrement
  not_from: true
- name: apple_top_case_display_brightness_increment
  not_from: true
- category: Keypad keys
- name: keypad_num_lock
- name: keypad_slash
- name: keypad_asterisk
- name: keypad_hyphen
- name: keypad_plus
- name: keypad_enter
- name: keypad_1
- name: keypad_2
- name: keypad_3
- name: keypad_4
- name: keypad_5
- name: keypad_6
- name: keypad_7
- name: keypad_8
- name: keypad_9
- name: keypad_0
- name: keypad_period
- name: keypad_equal_sign
- name: keypad_comma
- category: Virtual Keys
- name: vk_none
  label: vk_none (disable this key)
  not_from: true
- category: Keys in pc keyboards
- name: print_screen
- name: scroll_lock
- name: pause
- name: insert
- name: application
- name: help
- name: power
- name: execute
  not_to: true
- name: menu
  not_to: true
- name: select
  not_to: true
- name: stop
  not_to: true
- name: again
  not_to: true
- name: undo
  not_to: true
- name: cut
  not_to: true
- name: copy
  not_to: true
- name: paste
  not_to: true
- name: find
  not_to: true
- category: International keys
- name: international1
- name: international2
  not_to: true
- name: international3
- name: international4
  not_to: true
- name: international5
  not_to: true
- name: international6
  not_to: true
- name: international7
  not_to: true
- name: international8
  not_to: true
- name: international9
  not_to: true
- name: lang1
- name: lang2
- name: lang3
  not_to: true
- name: lang4
  not_to: true
- name: lang5
  not_to: true
- name: lang6
  not_to: true
- name: lang7
  not_to: true
- name: lang8
  not_to: true
- name: lang9
  not_to: true
- category: Japanese
- name: japanese_eisuu
  label: Ëã±Êï∞„Ç≠„Éº
- name: japanese_kana
  label: „Åã„Å™„Ç≠„Éº
- name: japanese_pc_nfer
  label: PC„Ç≠„Éº„Éú„Éº„Éâ„ÅÆÁÑ°Â§âÊèõ„Ç≠„Éº
  not_to: true
- name: japanese_pc_xfer
  label: PC„Ç≠„Éº„Éú„Éº„Éâ„ÅÆÂ§âÊèõ„Ç≠„Éº
  not_to: true
- name: japanese_pc_katakana
  label: PC„Ç≠„Éº„Éú„Éº„Éâ„ÅÆ„Åã„Å™„Ç≠„Éº
  not_to: true
- category: Others
- name: keypad_equal_sign_as400
  not_to: true
- name: locking_caps_lock
  not_to: true
- name: locking_num_lock
  not_to: true
- name: locking_scroll_lock
  not_to: true
- name: alternate_erase
  not_to: true
- name: sys_req_or_attention
  not_to: true
- name: cancel
  not_to: true
- name: clear
  not_to: true
- name: prior
  not_to: true
- name: return
  label: rarely used return (HID usage 0x9e)
  not_to: true
- name: separator
  not_to: true
- name: out
  not_to: true
- name: oper
  not_to: true
- name: clear_or_again
  not_to: true
- name: cr_sel_or_props
  not_to: true
- name: ex_sel
  not_to: true
- name: left_alt
  label: left_alt (equal toleft_option)
- name: left_gui
  label: left_gui (equal toleft_command)
- name: right_alt
  label: right_alt (equal toright_option)
- name: right_gui
  label: right_gui (equal toright_command)
- name: vk_consumer_brightness_down
  label: vk_consumer_brightness_down (equal todisplay_brightness_decrement)
  not_from: true
- name: vk_consumer_brightness_up
  label: vk_consumer_brightness_up (equal todisplay_brightness_increment)
  not_from: true
- name: vk_mission_control
  label: vk_mission_control (equal tomission_control)
  not_from: true
- name: vk_launchpad
  label: vk_launchpad (equal tolaunchpad)
  not_from: true
- name: vk_dashboard
  label: vk_dashboard (equal todashboard)
  not_from: true
- name: vk_consumer_illumination_down
  label: vk_consumer_illumination_down (equal toillumination_decrement)
  not_from: true
- name: vk_consumer_illumination_up
  label: vk_consumer_illumination_up (equal toillumination_increment)
  not_from: true
- name: vk_consumer_previous
  label: vk_consumer_previous (equal torewind)
  not_from: true
- name: vk_consumer_play
  label: vk_consumer_play (equal toplay)
  not_from: true
- name: vk_consumer_next
  label: vk_consumer_next (equal tofastforward)
  not_from: true
- name: volume_down
  label: volume_down (equal tovolume_decrement)
- name: volume_up
  label: volume_up (equal tovolume_increment`)

** Letter frequencies
:PROPERTIES:
:ID:       0EAAC3EF-7D66-4CF5-ABF0-D561430D7B98
:END:
:LOGBOOK:
CLOCK: [2021-07-16 Fri 15:50]--[2021-07-16 Fri 16:52] =>  1:02
:END:

Source: [[https://en.wikipedia.org/wiki/Letter_frequency][Wikipedia]]

| letter |    freq | normalized | used |
|--------+---------+------------+------|
| E      | 0.13000 |         1. |      |
| T      | 0.09100 |  1.4285714 |      |
| A      | 0.08200 |  1.5853659 |      |
| O      | 0.07500 |  1.7333333 |      |
| I      | 0.07000 |  1.8571429 |      |
| N      | 0.06700 |  1.9402985 |      |
| S      | 0.06300 |  2.0634921 |      |
| H      | 0.06100 |  2.1311475 |      |
| R      | 0.06000 |  2.1666667 |      |
| D      | 0.04300 |  3.0232558 |      |
| L      | 0.04000 |       3.25 |      |
| C      | 0.02800 |  4.6428571 |      |
| U      | 0.02800 |  4.6428571 |      |
| M      | 0.02400 |  5.4166667 |      |
| W      | 0.02400 |  5.4166667 |      |
| F      | 0.02200 |  5.9090909 |  t   |
| G      | 0.02000 |        6.5 |      |
| Y      | 0.02000 |        6.5 |      |
| [[id:8C32B75E-1455-444F-B5F6-83DC8263D558][P]]      | 0.01900 |  6.8421053 | t    |
| B      | 0.01500 |  8.6666667 | t    |
| V      | 0.00980 |  13.265306 | t    |
| K      | 0.00770 |  16.883117 | t    |
| [[id:0901DE3D-511F-4547-ACCD-3AAD9703DAAD][J]]      | 0.00150 |  86.666667 | t    |
| [[id:A670C98B-FCD0-4B4C-A3D9-C0DB143209AE][X]]      | 0.00150 |  86.666667 | t    |
| Q      | 0.00095 |  136.84211 | t    |
| Z      | 0.00074 |  175.67568 | t    |
#+TBLFM: $3=@2$2/$2

* Local variables
:PROPERTIES:
:ID:       2137CAE3-8576-467C-BA76-7060BE9FE6D0
 :END:
# Local Variables:
# eval: (add-hook 'before-save-hook 'org-make-toc nil t)
# eval: (files-extras-buffer-local-set-key (kbd "s-a") 'org-archive-hierarchically)
# eval: (flycheck-mode -1)
# End:
