#+title: faces-extras: Extensions for Emacs Faces
#+author: Pablo Stafforini
#+email: pablo@stafforini.com
#+language: en
#+options: ':t toc:t author:t email:t num:t
#+startup: content
#+export_file_name: faces-extras.info
#+texinfo_filename: faces-extras.info
#+texinfo_dir_category: Emacs misc features
#+texinfo_dir_title: Faces Extras: (faces-extras)
#+texinfo_dir_desc: Extensions for Emacs Faces

This manual describes the features and customization options for the Emacs Lisp file =faces-extras.el=.

* Overview
:PROPERTIES:
:CUSTOM_ID: h:overview
:END:

=faces-extras.el= provides extensions for managing and customizing Emacs faces (which control the appearance of text). It offers functions to set face attributes programmatically, store custom face settings, and provides helper commands and definitions for specific face customizations.

The main features include:

- Functions to set face attributes individually or in batches.
- A mechanism to store and reapply a collection of custom face settings.
- User options to define standard fonts and heights for fixed-pitch, variable-pitch, and various Org mode elements.
- A custom face definition for the =display-time= modeline element.
- An enhanced =describe-face= command that temporarily disables =hl-line-mode=.

* User Options
:PROPERTIES:
:CUSTOM_ID: h:user-options
:END:

This section details the user-configurable variables provided by =faces-extras.el=. These primarily define default font properties used by other functions or custom face settings.

** Font Definitions
:PROPERTIES:
:CUSTOM_ID: h:font-definitions
:END:

#+vindex: faces-extras-variable-pitch-font
- ~faces-extras-variable-pitch-font~: Specifies the font family name for variable-pitch text (Default: "Source Serif Pro").
#+vindex: faces-extras-fixed-pitch-font
- ~faces-extras-fixed-pitch-font~: Specifies the font family name for fixed-pitch text (Default: "SauceCodePro Nerd Font").

** Height Definitions
:PROPERTIES:
:CUSTOM_ID: h:height-definitions
:END:

These options define relative heights for various text elements, typically used when setting custom face attributes. Heights are usually relative to the base font size (e.g., 1.0 means the same height, 0.8 means 80% of the base height).

#+vindex: faces-extras-fixed-pitch-size
- ~faces-extras-fixed-pitch-size~: Absolute size (in tenths of a point) for fixed-pitch faces (Default: 120).
#+vindex: faces-extras-fixed-pitch-height
- ~faces-extras-fixed-pitch-height~: Relative height for fixed-pitch faces (Default: 0.8).
#+vindex: faces-extras-variable-pitch-height
- ~faces-extras-variable-pitch-height~: Relative height for variable-pitch faces (Default: 1.4).
#+vindex: faces-extras-org-level-height
- ~faces-extras-org-level-height~: Relative height for Org heading level faces (Default: 0.9).
#+vindex: faces-extras-org-block-height
- ~faces-extras-org-block-height~: Relative height for the =org-block= face (Default: 0.8).
#+vindex: faces-extras-org-code-height
- ~faces-extras-org-code-height~: Relative height for the =org-code= face (Default: 1.0).
#+vindex: faces-extras-org-date-height
- ~faces-extras-org-date-height~: Relative height for the =org-date= face (Default: 0.9).
#+vindex: faces-extras-org-tag-height
- ~faces-extras-org-tag-height~: Relative height for the =org-tag= face (Default: 0.9).
#+vindex: faces-extras-org-property-value-height
- ~faces-extras-org-property-value-height~: Relative height for the =org-property-value= face (Default: 0.8).

* Functions for Setting Face Attributes
:PROPERTIES:
:CUSTOM_ID: h:setting-face-attributes
:END:

These functions provide programmatic ways to modify face appearances.

** Set Single Face Attribute
:PROPERTIES:
:CUSTOM_ID: h:faces-extras-set-face-attribute
:END:

#+findex: faces-extras-set-face-attribute
The function ~faces-extras-set-face-attribute~ takes a single attribute definition (a list where the car is the face symbol and the cdr is a list of attribute-value pairs) and applies it using =set-face-attribute=. It handles evaluating symbols or functions within the attribute values before applying them.

Example:
#+begin_src emacs-lisp
(faces-extras-set-face-attribute '(default :height faces-extras-fixed-pitch-height))
#+end_src

** Set Multiple Face Attributes
:PROPERTIES:
:CUSTOM_ID: h:faces-extras-set-face-attributes
:END:

#+findex: faces-extras-set-face-attributes
The function ~faces-extras-set-face-attributes~ takes a list of attribute definitions (as described for ~faces-extras-set-face-attribute~) and applies each one in turn by calling ~faces-extras-set-face-attribute~.

** Set and Store Custom Face Attributes
:PROPERTIES:
:CUSTOM_ID: h:faces-extras-set-and-store-face-attributes
:END:

#+findex: faces-extras-set-and-store-face-attributes
The function ~faces-extras-set-and-store-face-attributes~ takes a list of attribute definitions. For each definition, it:
1. Applies the attribute using ~faces-extras-set-face-attribute~.
2. Stores the definition (potentially wrapping attribute values in lambdas for later evaluation) in the global variable ~faces-extras-custom-face-attributes~.

This allows applying immediate changes while also building a persistent list of customizations that can be reapplied later.

** Apply Stored Custom Face Attributes
:PROPERTIES:
:CUSTOM_ID: h:faces-extras-set-custom-face-attributes
:END:

#+findex: faces-extras-set-custom-face-attributes
The command ~faces-extras-set-custom-face-attributes~ iterates through the list of face definitions stored in ~faces-extras-custom-face-attributes~ and applies each one using ~faces-extras-set-face-attributes~. This is useful for reapplying all stored custom face settings, for example, after changing themes or restarting Emacs.

* Custom Faces
:PROPERTIES:
:CUSTOM_ID: h:custom-faces
:END:

** Display Time Face
:PROPERTIES:
:CUSTOM_ID: h:faces-extras-display-time
:END:

#+defface: faces-extras-display-time
The face ~faces-extras-display-time~ is defined to inherit from =bold=. It is intended for use with the =display-time-string= when displayed in the modeline or tab bar, providing a distinct appearance for the time.

* Commands
:PROPERTIES:
:CUSTOM_ID: h:commands
:END:

** Enhanced Describe Face
:PROPERTIES:
:CUSTOM_ID: h:faces-extras-describe-face
:END:

#+findex: faces-extras-describe-face
The command ~faces-extras-describe-face~ acts as a wrapper around the standard =describe-face= command. It automatically determines the face at the current point and calls =describe-face= for that face. Crucially, before calling =describe-face=, it temporarily disables both buffer-local =hl-line-mode= and =global-hl-line-mode= (if active). After =describe-face= finishes, it restores the original state of these modes. This prevents the highlighting from =hl-line-mode= from interfering with the display of the face being described in the =*Help*= buffer.

* Internal Variables
:PROPERTIES:
:CUSTOM_ID: h:internal-variables
:END:

- ~faces-extras-custom-face-attributes~: Stores the list of custom face attributes added via ~faces-extras-set-and-store-face-attributes~.

* Indices
:PROPERTIES:
:CUSTOM_ID: h:indices
:END:

** Function index
:PROPERTIES:
:INDEX: fn
:CUSTOM_ID: h:function-index
:END:

** Variable index
:PROPERTIES:
:INDEX: vr
:CUSTOM_ID: h:variable-index
:END:
